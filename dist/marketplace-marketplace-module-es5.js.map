{"version":3,"sources":["webpack:///src/app/marketplace/listing-details/listing-details.component.ts","webpack:///src/app/marketplace/listing-details/listing-details.component.html","webpack:///src/app/marketplace/listing-overview-card/listing-overview-card.component.ts","webpack:///src/app/marketplace/listing-overview-card/listing-overview-card.component.html","webpack:///src/app/marketplace/marketplace-listing/marketplace-listing.component.ts","webpack:///src/app/marketplace/marketplace-listing/marketplace-listing.component.html","webpack:///src/app/marketplace/marketplace-routing.ts","webpack:///src/app/marketplace/marketplace-service.service.ts","webpack:///src/app/marketplace/marketplace.component.ts","webpack:///src/app/marketplace/marketplace.component.html","webpack:///src/app/marketplace/marketplace.module.ts","webpack:///src/app/marketplace/store/marketplace.effects.ts","webpack:///src/app/marketplace/store/marketplace.selectors.ts"],"names":["ListingDetailsComponent","_route","marketplaceService","isLoading","params","subscribe","getListing","id","payload","listing","val","selector","templateUrl","styleUrls","ListingOverviewCardComponent","price","getPrice","text","console","log","Math","floor","random","MarketplaceListingComponent","routes","path","component","MarketplaceRoutingModule","forChild","imports","exports","MarketplaceService","db","PREFIX","listingKey","listings","database","ref","child","set","project","userId","object","key","update","title","description","photoUrl","remove","listingId","snapshotChanges","list","providedIn","MarketplaceComponent","store","isLoading$","select","projects$","pipe","projects","dispatch","MarketplaceModule","forFeature","declarations","MarketplaceEffects","actions$","marketplaceQuery$","MARKETPLACE_QUERY_ALL","getAllListings","data","projectsData","map","res","projectKey","push","undefined","error","getProjectsState","getProjects","marketplace","getAllLoaded","loading","getError"],"mappings":"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","file":"marketplace-marketplace-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Project } from 'src/app/projects/models/project.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { MarketplaceService } from '../marketplace-service.service';\n\n@Component({\n  selector: 'app-listing-details',\n  templateUrl: './listing-details.component.html',\n  styleUrls: ['./listing-details.component.css']\n})\nexport class ListingDetailsComponent implements OnInit {\n\n  listing: Project;  // should be async to pick up changes? or will confuse users?\n  isLoading: boolean = true;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private marketplaceService: MarketplaceService\n  ) {\n    this._route.params.subscribe(params => {\n\n      this.marketplaceService.getListing(params.id).subscribe(\n        payload => {\n          this.listing = payload.payload.val();\n          this.isLoading = false;\n        }\n      )\n\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"!isLoading\" class=\"white px-4 section-header\">\n\n    <h3>{{ listing.title }}</h3>\n\n    <div class=\"row mb-3\">\n        <div class=\"col-md-12\">\n        <img class=\"img-fluid list-detail-img \" src={{listing.photoUrl}} alt=\"Card image cap\">\n        </div>\n        </div>\n\n    <h2>About:</h2>\n    <p class=\"pt-3\">{{ listing.description }}</p>\n\n\n    <div class=\"text-left\">\n        <a mdbBtn color=\"secondary\" mdbWavesEffect [routerLink]=\"[ '/' ]\">Back</a>\n        <a mdbBtn color=\"primary\" mdbWavesEffect (click)=\"onDelete()\">Continue ($5.90)</a>\n      </div>\n\n</div>\n\n<div *ngIf=\"isLoading\" class=\"d-flex justify-content-center align-items-center\" style=\"margin-top: 200px\">\n    <div class=\"spinner-grow text-primary\" role=\"status\" style=\"width: 4rem; height: 4rem;\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Project } from 'src/app/projects/models/project.model';\n\n@Component({\n  selector: 'app-listing-overview-card',\n  templateUrl: './listing-overview-card.component.html',\n  styleUrls: ['./listing-overview-card.component.css']\n})\nexport class ListingOverviewCardComponent implements OnInit {\n\n  @Input() listing: Project;\n  price: string;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.price = this.getPrice();\n  }\n\n  log(text: Project) {\n    console.log(text)\n  }\n\n  // will this be an async call?\n  getListingUser(){\n    return Math.floor((Math.random() * 1000) + 1) > 50 ? 'Sedky' : 'Rami'\n  }\n\n  // will this be an async call?\n  getPrice() {\n    return '' + Math.floor((Math.random() * 1000) + 1) + '.' + Math.floor((Math.random() * 100))\n  }\n\n  onViewClick() {\n    console.log()\n  }\n\n}\n","<mdb-card>\n  <!--Card image-->\n  <a [routerLink]=\"['/listing/' + listing.key]\">\n    <mdb-card-img *ngIf=\"listing.photoUrl\" src=\"{{ listing.photoUrl }}\" alt=\"Card image cap\" class=\"waves-light\"\n      mdbWavesEffect></mdb-card-img>\n  </a>\n  <!-- <mdb-card-img *ngIf=\"!listing.photoUrl\" src=\"https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(97).jpg\" alt=\"Card image cap\"></mdb-card-img> -->\n  <!--Card content-->\n  <mdb-card-body>\n    <a [routerLink]=\"['/listing/' + listing.key]\">\n      <!--Title-->\n      <mdb-card-title>\n        <h4>{{ listing.title }}</h4>\n      </mdb-card-title>\n\n      <!--Text-->\n      <mdb-card-text>\n        {{ listing.description }}\n      </mdb-card-text>\n\n      <hr>\n      <div class=\"text-right\">\n        <a>$ {{ price }}</a>\n      </div>\n    </a>\n  </mdb-card-body>\n</mdb-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { Project } from 'src/app/projects/models/project.model';\n\n@Component({\n  selector: 'app-marketplace-listing',\n  templateUrl: './marketplace-listing.component.html',\n  styleUrls: ['./marketplace-listing.component.css']\n})\nexport class MarketplaceListingComponent implements OnInit {\n\n  @Input() listings: Project[];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"marketplace-list d-flex flex-wrap fadeIn animated\">\n    <div class=\"listing\" *ngFor=\"let listing of listings\">\n      <app-listing-overview-card [listing]=\"listing\" ></app-listing-overview-card>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MarketplaceComponent } from './marketplace.component';\nimport { ListingDetailsComponent } from './listing-details/listing-details.component';\n\nconst routes: Routes = [\n  { path: '', component: MarketplaceComponent },\n  { path: 'listing/:id', component: ListingDetailsComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class MarketplaceRoutingModule {}\n","import { Injectable } from '@angular/core';\n\nimport { AngularFireDatabase, SnapshotAction } from '@angular/fire/database';\nimport { Observable, of } from 'rxjs';\nimport { Project } from '../projects/models/project.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarketplaceService {\n  PREFIX = 'listings'\n\n  constructor(private db: AngularFireDatabase) { }\n\n  add(listing: Project, listingKey: string) {\n    const listings = this.db.database.ref(`${this.PREFIX}`).child(`${listingKey}`)\n    return listings.set(listing);\n  }\n\n  update(project: Project, userId: string) {\n    return of(this.db.object(`${this.PREFIX}/${userId}/` + project.key)\n      .update({\n        title: project.title,\n        description: project.description,\n        photoUrl: project.photoUrl\n      }));\n  }\n\n  delete(listing: Project) {\n    return this.db.object(`${this.PREFIX}/${listing.key}`).remove();\n  }\n\n  getListing(listingId: string): Observable<SnapshotAction<any>> {\n    return this.db.object(`${this.PREFIX}/${listingId}`).snapshotChanges();\n  }\n\n  // to replace with algolia\n  getAllListings() {    \n    return this.db.list(this.PREFIX).snapshotChanges();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport * as fromMarketplace from './store/marketplace.actions';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../reducers';\nimport { Observable } from 'rxjs';\nimport { Project } from '../projects/models/project.model';\nimport { map } from 'rxjs/operators';\nimport { getAllLoaded, getProjects } from './store/marketplace.selectors';\n\n@Component({\n  selector: 'app-marketplace',\n  templateUrl: './marketplace.component.html',\n  styleUrls: ['./marketplace.component.css']\n})\nexport class MarketplaceComponent implements OnInit {\n  projects$: Observable<Project[] | null>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this.store.select(getAllLoaded);\n    this.projects$ = this.store.pipe(\n      select(getProjects),\n      map( (projects: Project[]) => {\n        if (!projects) {\n          this.store.dispatch(new fromMarketplace.MarketplaceQueryAll());\n        }\n        return projects;\n      })\n    );\n  }\n\n}\n","<div class=\"white px-4 section-header\">\n    <h3>Marketplace</h3>\n    <p class=\"pt-3\">Hire a professional today! Find The Perfect Freelance Services For Your Business</p>\n</div>\n\n<div class=\"container-fluid pb-5\">\n    <div class=\"py-5\">\n        <app-marketplace-listing [listings]=\"projects$ | async\"></app-marketplace-listing>\n\n        <div *ngIf=\"isLoading$ | async\" class=\"d-flex justify-content-center align-items-center\"\n            style=\"margin-top: 200px\">\n            <div class=\"spinner-grow text-primary\" role=\"status\" style=\"width: 4rem; height: 4rem;\">\n                <span class=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MarketplaceComponent } from './marketplace.component';\nimport { StoreModule } from '@ngrx/store';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n\nimport { ButtonsModule, InputsModule, CardsModule, WavesModule, IconsModule, ModalModule } from 'angular-bootstrap-md';\n\nimport * as fromMarketplace from './store/marketplace.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MarketplaceEffects } from './store/marketplace.effects';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { MarketplaceRoutingModule } from './marketplace-routing';\nimport { MarketplaceListingComponent } from './marketplace-listing/marketplace-listing.component';\nimport { ListingOverviewCardComponent } from './listing-overview-card/listing-overview-card.component';\nimport { ListingDetailsComponent } from './listing-details/listing-details.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ModalModule,\n    SharedModule,\n    HttpClientModule,\n    MarketplaceRoutingModule,\n    FormsModule,\n    ButtonsModule,\n    InputsModule,\n    WavesModule,\n    IconsModule,\n    CardsModule,\n    StoreModule.forFeature('marketplace', fromMarketplace.marketplaceReducer),\n    EffectsModule.forFeature([MarketplaceEffects])\n  ],\n  declarations: [MarketplaceComponent, MarketplaceListingComponent, ListingOverviewCardComponent, ListingDetailsComponent],\n  exports: [MarketplaceComponent],\n})\nexport class MarketplaceModule { }\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport { Store, select } from '@ngrx/store';\nimport { switchMap, map, catchError, withLatestFrom } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport * as fromMarketplace from './marketplace.actions'\nimport { AppState } from '../../reducers/index';\nimport { getUser } from '../../auth/store/auth.selectors';\nimport { MarketplaceActionTypes } from './marketplace.actions';\nimport { Project } from 'src/app/projects/models/project.model';\nimport { MarketplaceService } from '../marketplace-service.service';\n\n@Injectable()\nexport class MarketplaceEffects {\n\n    constructor(\n        private actions$: Actions,\n        private marketplaceService: MarketplaceService,\n        private store: Store<AppState>\n    ) { }\n\n    @Effect()\n    marketplaceQuery$ = this.actions$.pipe(\n        ofType(MarketplaceActionTypes.MARKETPLACE_QUERY_ALL),\n        withLatestFrom(this.store.pipe(select(getUser))),\n        switchMap(([]: any) => {\n            return this.marketplaceService.getAllListings()\n                .pipe(\n                    map((data: any) => {\n                        const projectsData: Project[] = [];\n                        data.map((res: any) => {\n                            const projectKey: string = res.payload.key;\n                            const project: Project = res.payload.val();\n                            projectsData.push({\n                                key: projectKey || null,\n                                title: project.title || undefined,\n                                description: project.description || undefined,\n                                photoUrl: project.photoUrl || undefined\n                            })\n                        });\n                        return (new fromMarketplace.MarketplaceLoaded({ projects: projectsData }));\n                    }),\n                    catchError(error => of(new fromMarketplace.MarketplaceError({ error })))\n                );\n        }),\n    );\n\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport { MarketplaceState } from './marketplace.state';\n\nexport const getProjectsState = createFeatureSelector<MarketplaceState>('marketplace');\n\nexport const getProjects = createSelector(\n  getProjectsState,\n  marketplace => marketplace.projects\n);\n\nexport const getAllLoaded = createSelector(\n  getProjectsState,\n  marketplace => marketplace.loading\n);\n\nexport const getError = createSelector(\n  getProjectsState,\n  marketplace => marketplace.error\n);\n"]}