{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/components/user-detail/user-detail.component.ts","webpack:///src/app/admin/components/user-detail/user-detail.component.html","webpack:///src/app/admin/components/user/user.component.ts","webpack:///src/app/admin/components/user/user.component.html","webpack:///src/app/admin/components/users-list/users-list.component.ts","webpack:///src/app/admin/components/users-list/users-list.component.html","webpack:///src/app/admin/containers/admin/admin.component.ts","webpack:///src/app/admin/containers/admin/admin.component.html","webpack:///src/app/admin/guard/admin.guard.ts","webpack:///src/app/admin/services/admin.service.ts","webpack:///src/app/admin/store/admin.actions.ts","webpack:///src/app/admin/store/admin.effects.ts","webpack:///src/app/admin/store/admin.reducer.ts","webpack:///src/app/admin/store/admin.selectors.ts","webpack:///src/app/admin/store/admin.state.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/components/login/login.component.ts","webpack:///src/app/auth/components/login/login.component.html","webpack:///src/app/auth/components/register/register.component.ts","webpack:///src/app/auth/components/register/register.component.html","webpack:///src/app/auth/guards/auth.guard.ts","webpack:///src/app/auth/services/auth.service.ts","webpack:///src/app/auth/store/auth.actions.ts","webpack:///src/app/auth/store/auth.effects.ts","webpack:///src/app/auth/store/auth.reducer.ts","webpack:///src/app/auth/store/auth.selectors.ts","webpack:///src/app/auth/store/auth.state.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/dashboard/dashboard.component.ts","webpack:///src/app/core/dashboard/dashboard.component.html","webpack:///src/app/core/footer/footer.component.ts","webpack:///src/app/core/footer/footer.component.html","webpack:///src/app/core/header/header.component.ts","webpack:///src/app/core/header/header.component.html","webpack:///src/app/core/page-not-found/page-not-found.component.ts","webpack:///src/app/core/page-not-found/page-not-found.component.html","webpack:///src/app/marketplace/store/marketplace.actions.ts","webpack:///src/app/marketplace/store/marketplace.reducer.ts","webpack:///src/app/marketplace/store/marketplace.state.ts","webpack:///src/app/reducers/index.ts","webpack:///src/app/shared/components/confirm-modal/confirm-modal.component.ts","webpack:///src/app/shared/components/confirm-modal/confirm-modal.component.html","webpack:///src/app/shared/components/project-modal/project-modal.component.ts","webpack:///src/app/shared/components/project-modal/project-modal.component.html","webpack:///src/app/shared/components/project/project.component.ts","webpack:///src/app/shared/components/project/project.component.html","webpack:///src/app/shared/components/projects-list/projects-list.component.ts","webpack:///src/app/shared/components/projects-list/projects-list.component.html","webpack:///src/app/shared/services/gravatar.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminModule","forFeature","declarations","imports","UserDetailComponent","detailsClosed","projectsLoad","projectDeleted","addAdmin","removeAdmin","emit","project","user","selector","templateUrl","styleUrls","changeDetection","OnPush","UserComponent","userSelected","UsersListComponent","index","AdminComponent","store","modalService","modalConfig","users$","pipe","users","length","dispatch","usersListLoading$","select","userProjectsLoading$","uid","selectedUser","selectedUser$","userProjects$","projects","modalRef","show","content","confirmation","subscribe","userId","key","projectId","openProjectConfirmModal","AdminGuard","router","adminService","afAuth","authState","navigateByUrl","checkAdminRole","isAdmin","providedIn","AdminService","db","asObservable","usersRef","list","snapshotChanges","projectsRef","object","valueChanges","remove","adminsRef","update","set","AdminActionTypes","GetUsersList","type","GET_USERS_LIST","UsersListFetched","payload","USERS_LIST_FETCHED","GetUserProjects","GET_USER_PROJECTS","DeleteUserProject","DELETE_USER_PROJECT","UserProjectsLoaded","USERS_PROJECTS_LOADED","AddAdminPrivileges","ADD_ADMIN_PRIVILEGES","RemoveAdminPrivileges","REMOVE_ADMIN_PRIVILEGES","AdminError","ADMIN_ERROR","AdminEffects","actions$","getUsersList$","getUsersList","usersList","map","res","val","displayName","email","providerId","photoUrl","isNewUser","isOnline","error","getUserProjects$","action","getUserProjects","data","projectsData","title","description","userProjects","deleteUserProject$","deleteUserProject","addAdminPrivileges$","addAdminPrivileges","removeAdminPrivileges$","removeAdminPrivileges","adminReducer","state","Object","assign","usersListLoading","userProjectsLoading","getAdminState","admin","getUsersListLoading","getSelectedUser","filter","hasOwnProperty","getUserProjectsLoading","adminInitialState","routes","path","loadChildren","m","MarketplaceModule","ProjectsModule","canActivate","ProfileModule","component","AppRoutingModule","forRoot","preloadingStrategy","AppComponent","user$","isLoggedIn$","isLoading$","isAdmin$","onLogout","AppModule","initializeApp","firebase","runtimeChecks","strictStateImmutability","strictActionImmutability","metaReducers","production","instrument","bootstrap","AuthModule","providers","LoginComponent","loginForm","required","password","error$","valid","value","authProvider","get","onLogin","onFacebookLogin","onTwitterLogin","onGoogleLogin","RegisterComponent","registerForm","username","minLength","message","onRegister","AuthGuard","authService","getAuthState","getUser","AuthService","auth","createUserWithEmailAndPassword","userProfile","currentUser","updateProfile","photoURL","signInWithEmailAndPassword","provider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","signInWithPopup","updateOnlineStatus","signOut","status","database","ref","child","onDisconnect","AuthActionTypes","RegisterRequested","REGISTER_REQUESTED","RegisterCompleted","REGISTER_COMPLETED","RegisterFailed","REGISTER_FAILED","UpdateProfile","UPDATE_PROFILE","UpdateProfileSuccess","UPDATE_PROFILE_SUCCESS","LoginRequested","LOGIN_REQUESTED","LoginSuccess","LOGIN_SUCCESS","LoginFailed","LOGIN_FAILED","SocialLogin","SOCIAL_LOGIN","LogoutRequested","LOGOUT_REQUESTED","LogoutCompleted","LOGOUT_COMPLETED","SaveUser","SAVE_USER","UpdateOnlineStatus","UPDATE_ONLINE_STATUS","CheckUserRole","CHECK_USER_ROLE","UpdateUserRole","UPDATE_USER_ROLE","GetUser","GET_USER","GetUserDetails","GET_USER_DETAILS","AuthError","AUTH_ERROR","AuthEffects","gravatarService","registerAction$","register","gravatarUrl","getUserGravatar","additionalUserInfo","saveUser$","saveUser","updateOnlineStatus$","checkUserRole$","checkUserRole","updateProfile$","getCurrentUser","updatedUser","providerData","phoneNumber","country","street","city","province","loginAction$","login","loginSuccess$","socialLogin$","socialLogin","logoutAction$","logout","getUser$","authData","getUserDetails$","getDBUser","userDetails","init$","authReducer","isLoggedIn","isLoading","getIsLoggedIn","getIsLoading","getIsAdmin","getError","authInitialState","CoreModule","DashboardComponent","projectsSub","unsubscribe","FooterComponent","HeaderComponent","PageNotFoundComponent","MarketplaceActionTypes","MarketplaceQueryAll","MARKETPLACE_QUERY_ALL","MarketplaceLoaded","MARKETPLACE_LOADED","MarketplaceAdded","MARKETPLACE_ADDED","MarketplaceError","MARKETPLACE_ERROR","marketplaceReducer","loading","marketplaceInitialState","reducers","marketplace","clearState","reducer","undefined","ConfirmModalComponent","next","hide","onDelete","ProjectModalComponent","projectData","projectForm","controls","forEach","controlName","markAsTouched","onSave","ProjectComponent","editable","deleted","edited","ProjectsListComponent","projectEdited","GravatarService","SharedModule","entryComponents","environment","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AdminComponent } from './containers/admin/admin.component';\nimport { UsersListComponent } from './components/users-list/users-list.component';\nimport { UserComponent } from './components/user/user.component';\n\nimport * as fromAdmin from './store/admin.reducer';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AdminEffects } from './store/admin.effects';\nimport { CollapseModule, CardsModule, ButtonsModule, BadgeModule, IconsModule, DropdownModule } from 'angular-bootstrap-md';\nimport { SharedModule } from '../shared/shared.module';\nimport { UserDetailComponent } from './components/user-detail/user-detail.component';\n\n@NgModule({\n  declarations: [AdminComponent, UsersListComponent, UserComponent, UserDetailComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    CollapseModule,\n    CardsModule,\n    DropdownModule,\n    BadgeModule,\n    ButtonsModule,\n    IconsModule,\n    StoreModule.forFeature('admin', fromAdmin.adminReducer),\n    EffectsModule.forFeature([AdminEffects])\n  ]\n})\nexport class AdminModule { }\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { User } from '../../../auth/models/user.model';\nimport { Project } from '../../../projects/models/project.model';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserDetailComponent implements OnInit {\n  @Input() user: User;\n  @Input() projects: Project[];\n  @Input() userProjectsLoading: boolean;\n  @Output() detailsClosed = new EventEmitter<any>();\n  @Output() projectsLoad = new EventEmitter<any>();\n  @Output() projectDeleted = new EventEmitter<Project>();\n  @Output() addAdmin = new EventEmitter<any>();\n  @Output() removeAdmin = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n  closeDetails() {\n    this.detailsClosed.emit();\n  }\n\n  loadProjects() {\n    this.projectsLoad.emit();\n  }\n\n  onProjectDelete(project: Project) {\n    this.projectDeleted.emit(project);\n  }\n\n  onAddAdmin() {\n    this.addAdmin.emit(this.user);\n  }\n\n  onRemoveAdmin() {\n    this.removeAdmin.emit(this.user);\n  }\n}\n","<mdb-card class=\"mb-4\" *ngIf=\"user\">\n  <mdb-card-body class=\"py-4\">\n    <div class=\"mb-5 back-button\" (click)=\"closeDetails()\">\n      <mdb-icon fas icon=\"arrow-left\" class=\"mr-2\"></mdb-icon>\n      <span>Back to user list</span>\n    </div>\n    <div class=\"d-flex flex-row justify-content-between flex-wrap\">\n      <div class=\"d-flex flex-row\">\n        <div class=\"mr-4\">\n          <img *ngIf=\"user.photoUrl\" src=\"{{ user.photoUrl }}\" height=\"90\" width=\"90\" class=\"rounded-circle z-depth-0\"\n            alt=\"avatar image\">\n        </div>\n\n        <div class=\"pt-2\">\n          <h4>{{ user.displayName }}</h4>\n          <div>\n            <span class=\"mr-2\">\n              <mdb-badge *ngIf=\"!user.isOnline\" color=\"red\">Offline</mdb-badge>\n              <mdb-badge *ngIf=\"user.isOnline\" color=\"green\">Online</mdb-badge>\n            </span>\n            <span>\n              <mdb-badge *ngIf=\"user.isAdmin\" color=\"purple\">Admin</mdb-badge>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"mt-3\">\n        <button *ngIf=\"!user.isAdmin\" mdbBtn outline=\"true\" color=\"red\" (click)=\"onAddAdmin()\">Add admin privileges</button>\n        <button *ngIf=\"user.isAdmin\" mdbBtn outline=\"true\" color=\"red\" (click)=\"onRemoveAdmin()\">Remove admin\n          privileges</button>\n      </div>\n    </div>\n\n    <hr class=\"my-5\">\n\n    <div class=\"d-flex flex-row align-items-center\">\n      <h4 class=\"mr-3\">Projects</h4>\n      <button mdbBtn color=\"primary\" size=\"sm\" (click)=\"loadProjects()\">Load user projects</button>\n    </div>\n\n    <div *ngIf=\"userProjectsLoading\" class=\"d-flex justify-content-center align-items-center\" style=\"margin-top: 50px\">\n      <div class=\"spinner-grow text-primary\" role=\"status\" style=\"width: 4rem; height: 4rem;\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n\n    <app-projects-list *ngIf=\"!userProjectsLoading && projects\" [editable]=\"false\" [projects]=\"projects\" (projectDeleted)=\"onProjectDelete($event)\"></app-projects-list>\n\n    <hr class=\"my-5\">\n\n  </mdb-card-body>\n</mdb-card>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserComponent implements OnInit {\n  @Input() user: any;\n  @Output() userSelected = new EventEmitter<any>();\n  @Output() addAdmin = new EventEmitter<any>();\n  @Output() removeAdmin = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  selectUser() {\n    this.userSelected.emit(this.user);\n  }\n\n  addAdminPrivileges() {\n    this.addAdmin.emit(this.user);\n  }\n\n  removeAdminPrivileges() {\n    this.removeAdmin.emit(this.user);\n  }\n\n}\n","<mdb-card *ngIf=\"user\">\n  <mdb-card-body class=\"text-center py-4\">\n    <div>\n      <span *ngIf=\"!user.isOnline\" class=\"mr-2 float-left\">\n        <mdb-badge color=\"red\">Offline</mdb-badge>\n      </span>\n      <span *ngIf=\"user.isOnline\" class=\"mr-2 float-left\">\n        <mdb-badge color=\"green\">Online</mdb-badge>\n      </span>\n      <span class=\"float-left\">\n        <mdb-badge *ngIf=\"user.isAdmin\" color=\"purple\">Admin</mdb-badge>\n      </span>\n      <mdb-icon fas icon=\"ellipsis-v\" class=\"float-right grey-text\"></mdb-icon>\n    </div>\n    <div class=\"mt-5\">\n      <img *ngIf=\"user.photoUrl\" src=\"{{ user.photoUrl }}\" height=\"90\" width=\"90\" class=\"rounded-circle z-depth-0\" alt=\"avatar image\">\n    </div>\n    <div class=\"mt-3\">\n      {{ user.displayName }}\n    </div>\n    <div class=\"d-flex flex-column\">\n      <button class=\"mt-3\" mdbBtn color=\"danger\" size=\"sm\" (click)=\"removeAdminPrivileges()\" *ngIf=\"user.isAdmin\">Remove\n        admin privileges</button>\n      <button class=\"mt-3\" mdbBtn color=\"danger\" size=\"sm\" (click)=\"addAdminPrivileges()\" *ngIf=\"!user.isAdmin\">Add\n        admin privileges</button>\n      <button class=\"mt-2\" mdbBtn color=\"primary\" size=\"sm\" (click)=\"selectUser()\">Manage content</button>\n    </div>\n  </mdb-card-body>\n</mdb-card>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UsersListComponent implements OnInit {\n  @Input() users: any[];\n  @Output() userSelected = new EventEmitter<any>();\n  @Output() addAdmin = new EventEmitter<any>();\n  @Output() removeAdmin = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onUserSelected(user: any) {\n    this.userSelected.emit(user);\n  }\n\n  onAddAdmin(user: any) {\n    this.addAdmin.emit(user);\n  }\n\n  onRemoveAdmin(user: any) {\n    this.removeAdmin.emit(user);\n  }\n\n  trackByFn(index: any) {\n    return index;\n  }\n\n}\n","<div class=\"users-list d-flex flex-wrap\">\n  <div class=\"user\" *ngFor=\"let user of users; trackBy: trackByFn\">\n    <app-user [user]=\"user\" (userSelected)=\"onUserSelected($event)\" (addAdmin)=\"onAddAdmin($event)\" (removeAdmin)=\"onRemoveAdmin($event)\"></app-user>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../../../../app/reducers';\n\nimport * as fromAdmin from '../../store/admin.actions';\nimport { Observable } from 'rxjs';\nimport {\n  getUsersList,\n  getUserProjects,\n  getSelectedUser,\n  getUsersListLoading,\n  getUserProjectsLoading,\n} from '../../store/admin.selectors';\nimport { Project } from '../../../projects/models/project.model';\nimport { User } from '../../../auth/models/user.model';\nimport { map, delay, take } from 'rxjs/operators';\nimport { MDBModalService, MDBModalRef } from 'angular-bootstrap-md';\nimport { ConfirmModalComponent } from '../../../shared/components/confirm-modal/confirm-modal.component';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n  constructor(\n    private store: Store<AppState>,\n    private modalService: MDBModalService\n  ) {}\n\n  users$: Observable<any>;\n  userProjects$: Observable<Project[]>;\n  usersListLoading$: Observable<boolean>;\n  userProjectsLoading$: Observable<boolean>;\n  selectedUser$: Observable<any>;\n  selectedUser: any;\n  uid: any;\n\n  private modalRef: MDBModalRef;\n\n  modalConfig = {\n    class: 'modal-dialog-centered'\n  };\n\n  ngOnInit() {\n    this.users$ = this.store.pipe(\n      select(getUsersList),\n      delay(0),\n      map((users: User[]) => {\n        if (!users || (users && users.length === 0)) {\n          this.store.dispatch(new fromAdmin.GetUsersList());\n        }\n        return users;\n      })\n    );\n    this.usersListLoading$ = this.store.select(getUsersListLoading);\n    this.userProjectsLoading$ = this.store.select(getUserProjectsLoading);\n  }\n\n  onUserSelect(user: any) {\n    this.uid = user.uid;\n    this.selectedUser = user;\n    this.selectedUser$ = this.store.select(getSelectedUser, user.uid);\n    this.userProjects$ = this.store.select(getUserProjects, user.uid).pipe(\n      map(projects => {\n        if (projects && projects.length !== 0) {\n          return projects;\n        } else {\n          return null;\n        }\n      })\n    );\n  }\n\n  onProjectsLoad() {\n    this.store.dispatch(new fromAdmin.GetUserProjects({ uid: this.uid }));\n  }\n\n  onDetailsClose() {\n    this.selectedUser = null;\n  }\n\n  openProjectConfirmModal(project: Project) {\n    this.modalRef = this.modalService.show(\n      ConfirmModalComponent,\n      this.modalConfig\n    );\n\n    this.modalRef.content.confirmation\n      .pipe(take(1))\n      .subscribe((confirmation: boolean) => {\n        if (confirmation) {\n          this.store.dispatch(\n            new fromAdmin.DeleteUserProject({\n              userId: this.selectedUser.key,\n              projectId: project.key\n            })\n          );\n        }\n      });\n  }\n\n  onProjectDelete(project: Project) {\n    this.openProjectConfirmModal(project);\n  }\n\n  addAdminPrivileges(user: any) {\n    this.store.dispatch(new fromAdmin.AddAdminPrivileges({ userId: user.key }));\n  }\n\n  removeAdminPrivileges(user: any) {\n    this.store.dispatch(\n      new fromAdmin.RemoveAdminPrivileges({ userId: user.key })\n    );\n  }\n}\n","<div class=\"white px-4 section-header\">\n  <h3>Admin panel</h3>\n  <p class=\"grey-text pt-3\">Change settings for every user in your application</p>\n</div>\n\n<div *ngIf=\"usersListLoading$ | async\" class=\"d-flex justify-content-center align-items-center\" style=\"margin-top: 300px\">\n  <div class=\"spinner-grow text-primary\" role=\"status\" style=\"width: 4rem; height: 4rem;\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n\n<div *ngIf=\"!(usersListLoading$ | async)\" class=\"container-fluid mt-3 pb-5\">\n  <app-users-list *ngIf=\"!selectedUser\" [users]=\"users$ | async\" (userSelected)=\"onUserSelect($event)\" (addAdmin)=\"addAdminPrivileges($event)\"\n    (removeAdmin)=\"removeAdminPrivileges($event)\"></app-users-list>\n  <app-user-detail\n    *ngIf=\"selectedUser\"\n    [user]=\"selectedUser$ | async\"\n    [projects]=\"userProjects$ | async\"\n    [userProjectsLoading]=\"userProjectsLoading$ | async\"\n    (detailsClosed)=\"onDetailsClose()\"\n    (projectsLoad)=\"onProjectsLoad()\"\n    (projectDeleted)=\"onProjectDelete($event)\"\n    (addAdmin)=\"addAdminPrivileges($event)\"\n    (removeAdmin)=\"removeAdminPrivileges($event)\"></app-user-detail>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { AdminService } from '../services/admin.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { take, switchMap, map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private router: Router, private adminService: AdminService, private afAuth: AngularFireAuth) {}\n\n\n  canActivate(): Observable<boolean> | boolean {\n\n    return this.afAuth.authState\n      .pipe(\n        take(1),\n        switchMap( (user: any) => {\n          if (!user) {\n            this.router.navigateByUrl('/login');\n            return of(false);\n          }\n          return this.adminService.checkAdminRole(user.uid)\n          .pipe(\n            map( (isAdmin) => {\n              if (isAdmin) {\n                return true;\n              } else {\n                this.router.navigateByUrl('');\n                return false;\n              }\n            }),\n            catchError( () => {\n              this.router.navigateByUrl('');\n              return of(false);\n            })\n          );\n          }),\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { from, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  selectedUser = new Subject();\n  selectedUser$ = this.selectedUser.asObservable();\n\n  getUsersList() {\n    const usersRef = this.db.list('users');\n    return usersRef.snapshotChanges();\n  }\n\n  getUserProjects(uid: string) {\n    const projectsRef = this.db.list('projects/' + uid);\n    return projectsRef.snapshotChanges();\n  }\n\n  checkAdminRole(uid: string) {\n    return this.db.object('admins/' + uid).valueChanges();\n  }\n\n  deleteUserProject(uid: string, projectId: string) {\n    return from(this.db.object(`projects/${uid}/` + projectId).remove());\n  }\n\n  addAdminPrivileges(uid: string) {\n    const adminsRef = this.db.object('admins/' + uid);\n    this.db.object('users/' + uid).update({ isAdmin: true });\n    return from(adminsRef.set(true));\n  }\n\n  removeAdminPrivileges(uid: string) {\n    this.db.object('users/' + uid).update({ isAdmin: false });\n    return from(this.db.object('admins/' + uid).remove());\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Project } from '../../projects/models/project.model';\n\nexport enum AdminActionTypes {\n  GET_USERS_LIST = '[Admin] Get Users List',\n  USERS_LIST_FETCHED = '[Admin] Users list fetched',\n\n  GET_USER_PROJECTS = '[Admin] Get user projects',\n  USERS_PROJECTS_LOADED = '[Admin] User projects loaded',\n  DELETE_USER_PROJECT = '[Admin] Delete user project',\n\n  ADD_ADMIN_PRIVILEGES = '[Admin] Add admin privileges',\n  REMOVE_ADMIN_PRIVILEGES = '[Admin] Remove admin privileges',\n\n  ADMIN_ERROR = '[Admin] Error'\n}\n\nexport class GetUsersList implements Action {\n  readonly type = AdminActionTypes.GET_USERS_LIST;\n}\n\nexport class UsersListFetched implements Action {\n  readonly type = AdminActionTypes.USERS_LIST_FETCHED;\n\n  constructor(public payload: { usersList: any[] }) {}\n}\n\nexport class GetUserProjects implements Action {\n  readonly type = AdminActionTypes.GET_USER_PROJECTS;\n\n  constructor(public payload: { uid: string }) {}\n}\n\nexport class DeleteUserProject implements Action {\n  readonly type = AdminActionTypes.DELETE_USER_PROJECT;\n\n  constructor(public payload: { userId: string, projectId: string}) {}\n}\n\nexport class UserProjectsLoaded implements Action {\n  readonly type = AdminActionTypes.USERS_PROJECTS_LOADED;\n\n  constructor(public payload: { uid: string, userProjects: Project[] }) {}\n}\n\nexport class AddAdminPrivileges implements Action {\n  readonly type = AdminActionTypes.ADD_ADMIN_PRIVILEGES;\n\n  constructor(public payload: { userId: string }) {}\n}\n\nexport class RemoveAdminPrivileges implements Action {\n  readonly type = AdminActionTypes.REMOVE_ADMIN_PRIVILEGES;\n\n  constructor(public payload: { userId: string }) {}\n}\n\nexport class AdminError implements Action {\n  readonly type = AdminActionTypes.ADMIN_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type AdminActions =\n  | GetUsersList\n  | UsersListFetched\n  | GetUserProjects\n  | UserProjectsLoaded\n  | DeleteUserProject\n  | AddAdminPrivileges\n  | RemoveAdminPrivileges\n  | AdminError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport * as fromAdmin from './../store/admin.actions';\nimport { switchMap, map, catchError, mergeMap } from 'rxjs/operators';\nimport { AdminService } from '../services/admin.service';\nimport { Project } from '../../projects/models/project.model';\nimport { of } from 'rxjs';\n\n\n@Injectable()\nexport class AdminEffects {\n\n  constructor(private actions$: Actions, private adminService: AdminService) {}\n\n  @Effect()\n  getUsersList$ = this.actions$.pipe(\n    ofType(fromAdmin.AdminActionTypes.GET_USERS_LIST),\n    switchMap( () => this.adminService.getUsersList()\n      .pipe(\n        map( (users: any) => {\n          const usersList: any[] = users.map((res: any) => {\n            const key = res.payload.key;\n            const user: any = res.payload.val();\n            return {\n              key: key,\n              uid: user.uid,\n              displayName: user.displayName,\n              email: user.email,\n              providerId: user.providerId,\n              photoUrl: user.photoUrl,\n              isNewUser: user.isNewUser,\n              isAdmin: user.isAdmin,\n              isOnline: user.isOnline\n            };\n          });\n          return (new fromAdmin.UsersListFetched({ usersList }));\n        }),\n        catchError( (error: any) => of(new fromAdmin.AdminError({ error })))\n      )\n    )\n  );\n\n  @Effect()\n  getUserProjects$ = this.actions$.pipe(\n    ofType(fromAdmin.AdminActionTypes.GET_USER_PROJECTS),\n    map((action: fromAdmin.GetUserProjects) => action.payload),\n    mergeMap( (payload: any) => this.adminService.getUserProjects(payload.uid)\n      .pipe(\n        map((data: any) => {\n          const projectsData: Project[] = data.map((res: any) => {\n            const key = res.payload.key;\n            const project: Project = res.payload.val();\n            return {\n              key: key || null,\n              title: project.title || null,\n              description: project.description || null,\n              photoUrl: project.photoUrl || null\n            };\n          });\n          return (new fromAdmin.UserProjectsLoaded({ uid: payload.uid, userProjects: projectsData }));\n        }),\n        catchError(error => of(new fromAdmin.AdminError({ error })))\n      )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  deleteUserProject$ = this.actions$.pipe(\n    ofType(fromAdmin.AdminActionTypes.DELETE_USER_PROJECT),\n    map( (action: fromAdmin.DeleteUserProject) => action.payload),\n    switchMap( (payload: any) => this.adminService.deleteUserProject(payload.userId, payload.projectId)\n      .pipe(\n        catchError( (error: any) => of(new fromAdmin.AdminError({ error })))\n      )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  addAdminPrivileges$ = this.actions$.pipe(\n    ofType(fromAdmin.AdminActionTypes.ADD_ADMIN_PRIVILEGES),\n    map( (action: fromAdmin.AddAdminPrivileges) => action.payload),\n    switchMap( (payload: any) => this.adminService.addAdminPrivileges(payload.userId)\n      .pipe(\n        catchError( (error: any) => of(new fromAdmin.AdminError({ error })))\n      )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  removeAdminPrivileges$ = this.actions$.pipe(\n    ofType(fromAdmin.AdminActionTypes.REMOVE_ADMIN_PRIVILEGES),\n    map( (action: fromAdmin.RemoveAdminPrivileges) => action.payload),\n    switchMap( (payload: any) => this.adminService.removeAdminPrivileges(payload.userId)\n      .pipe(\n        catchError( (error: any) => of(new fromAdmin.AdminError({ error })))\n      )\n    )\n  );\n}\n","import { adminInitialState, AdminState } from './admin.state';\nimport { AdminActions, AdminActionTypes } from './admin.actions';\n\nexport function adminReducer(state = adminInitialState, action: AdminActions): AdminState {\n  switch (action.type) {\n\n    case AdminActionTypes.GET_USERS_LIST: {\n      return Object.assign({}, state, {\n        usersListLoading: true\n      });\n    }\n\n    case AdminActionTypes.USERS_LIST_FETCHED: {\n      return Object.assign({}, state, {\n        usersList: action.payload.usersList,\n        usersListLoading: false\n      });\n    }\n\n    case AdminActionTypes.GET_USER_PROJECTS: {\n      return Object.assign({}, state, {\n        userProjectsLoading: true\n      });\n    }\n\n    case AdminActionTypes.USERS_PROJECTS_LOADED: {\n      return Object.assign({}, state, {\n        userProjects: {...state.userProjects, [action.payload.uid]: action.payload.userProjects},\n        userProjectsLoading: false\n      });\n    }\n\n    case AdminActionTypes.ADMIN_ERROR: {\n      return Object.assign({}, state, {\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector } from '@ngrx/store';\nimport { AppState } from '../../reducers/index';\n\nexport const getAdminState = (state: AppState) => state.admin;\n\nexport const getUsersList = createSelector(\n  getAdminState,\n  admin => admin.usersList\n);\n\nexport const getUsersListLoading = createSelector(\n  getAdminState,\n  admin => admin.usersListLoading\n);\n\nexport const getSelectedUser = createSelector(\n  getUsersList,\n  (usersList: any, uid: string) => usersList.filter( (user: any) => user.uid === uid)[0]\n);\n\nexport const getUserProjects = createSelector(\n  getAdminState,\n  (admin: any, uid: string) => {\n    if (admin.userProjects.hasOwnProperty(uid)) {\n      return admin.userProjects[uid];\n    } else {\n      return null;\n    }\n  }\n);\n\nexport const getUserProjectsLoading = createSelector(\n  getAdminState,\n  admin => admin.userProjectsLoading\n);\n\n","export interface AdminState {\n    usersList: any[];\n    usersListLoading: boolean;\n    userProjects: any;\n    userProjectsLoading: boolean;\n    error: any;\n}\n\nexport const adminInitialState: AdminState = {\n    usersList: [],\n    usersListLoading: false,\n    userProjects: {},\n    userProjectsLoading: false,\n    error: null\n};\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { RegisterComponent } from './auth/components/register/register.component';\nimport { LoginComponent } from './auth/components/login/login.component';\nimport { AuthGuard } from './auth/guards/auth.guard';\nimport { PageNotFoundComponent } from './core/page-not-found/page-not-found.component';\nimport { AdminComponent } from './admin/containers/admin/admin.component';\nimport { AdminGuard } from './admin/guard/admin.guard';\n\nconst routes: Routes = [\n  { path: '', loadChildren: () => import('./marketplace/marketplace.module').then(m => m.MarketplaceModule) },\n  { path: 'projects', loadChildren: () => import('./projects/projects.module').then(m => m.ProjectsModule), canActivate: [AuthGuard] },\n  { path: 'profile', loadChildren: () => import('./profile/profile.module').then(m => m.ProfileModule), canActivate: [AuthGuard] },\n  { path: 'admin-panel', component: AdminComponent, canActivate: [AdminGuard] },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from './reducers';\nimport { Observable } from 'rxjs';\nimport { User } from './auth/models/user.model';\nimport { getUser, getIsLoggedIn, getIsLoading, getIsAdmin } from './auth/store/auth.selectors';\n\nimport * as fromAuth from './auth/store/auth.actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n  user$: Observable<User | null>;\n  isLoggedIn$: Observable<boolean>;\n  isLoading$: Observable<boolean>;\n  isAdmin$: Observable<boolean>;\n\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit() {\n    this.user$ = this.store.select(getUser);\n    this.isLoggedIn$ = this.store.select(getIsLoggedIn);\n    this.isLoading$ = this.store.select(getIsLoading);\n    this.isAdmin$ = this.store.select(getIsAdmin);\n  }\n\n  onLogout(user: User) {\n    this.store.dispatch(new fromAuth.LogoutRequested( { user }));\n  }\n\n}\n","<header>\n  <app-header [user]=\"user$ | async\" [isLoggedIn]=\"isLoggedIn$ | async\" [isLoading]=\"isLoading$ | async\" [isAdmin]=\"isAdmin$ | async\"\n    (logout)=\"onLogout($event)\"></app-header>\n</header>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n\n<footer class=\"app-footer footer-absolute\">\n  <app-footer></app-footer>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AngularFireModule } from '@angular/fire';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { environment } from '../environments/environment';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './reducers';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { SharedModule } from './shared/shared.module';\nimport { AdminModule } from './admin/admin.module';\nimport { ModalModule } from 'angular-bootstrap-md';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AuthModule,\n    SharedModule,\n    ModalModule.forRoot(),\n    AdminModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    AngularFireDatabaseModule,\n    CoreModule,\n    StoreModule.forRoot(reducers, {\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true\n      },\n      metaReducers\n    }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot([])\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromAuth from './store/auth.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './store/auth.effects';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AuthService } from './services/auth.service';\nimport { InputsModule, ButtonsModule, CardsModule, IconsModule, WavesModule, InputUtilitiesModule } from 'angular-bootstrap-md';\nimport { LoginComponent } from './components/login/login.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    InputsModule,\n    InputUtilitiesModule,\n    ButtonsModule,\n    CardsModule,\n    WavesModule,\n    RouterModule,\n    IconsModule,\n    StoreModule.forFeature('auth', fromAuth.authReducer),\n    EffectsModule.forFeature([AuthEffects])\n  ],\n  declarations: [RegisterComponent, LoginComponent],\n  exports: [RegisterComponent],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../../../reducers/index';\nimport * as actions from './../../store/auth.actions';\nimport { Observable } from 'rxjs';\nimport { getError } from '../../store/auth.selectors';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  error$: Observable<string | null>;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    });\n\n    this.error$ = this.store\n      .pipe(\n        select(getError),\n        map( (error: any) => {\n          if (error && (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password')) {\n            return 'Invalid login or password';\n          } else {\n            return null;\n          }\n        })\n      );\n  }\n\n  get email() { return this.loginForm.get('email'); }\n  get password() { return this.loginForm.get('password'); }\n\n  onLogin() {\n    if (this.loginForm.valid) {\n      this.store.dispatch(new actions.LoginRequested(this.loginForm.value));\n    }\n  }\n\n  onGoogleLogin(authProvider: string) {\n    this.store.dispatch(new actions.SocialLogin({ authProvider }));\n  }\n\n  onFacebookLogin(authProvider: string) {\n    this.store.dispatch(new actions.SocialLogin({ authProvider }));\n  }\n\n  onTwitterLogin(authProvider: string) {\n    this.store.dispatch(new actions.SocialLogin({ authProvider }));\n  }\n\n}\n","<div class=\"container-fluid full-page-container\">\n  <div class=\"row h-100 justify-content-center align-items-center\">\n    <div class=\"col-lg-4 col-sm-8 animated fadeIn\">\n      <!-- Material form login -->\n      <mdb-card class=\"z-depth-2\">\n\n        <div class=\"white text-center py-4\">\n          <h5>\n            <strong>Log in</strong>\n          </h5>\n        </div>\n\n\n        <!--Card content-->\n        <mdb-card-body class=\"px-lg-5 pt-0\">\n          <div *ngIf=\"error$ | async as error\" class=\"alert alert-danger\" role=\"alert\">\n            {{ error }}\n          </div>\n          <!-- Form -->\n          <form [formGroup]=\"loginForm\" class=\"text-center\" style=\"color: #757575;\">\n\n            <!-- Email -->\n            <div class=\"md-form\">\n              <input mdbValidate [validateSuccess]=\"false\" type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\" mdbInput>\n              <label for=\"email\">E-mail</label>\n              <mdb-error *ngIf=\"email && email.invalid && (email.dirty || email.touched)\">Email is required</mdb-error>\n            </div>\n\n            <!-- Password -->\n            <div class=\"md-form\">\n              <input mdbValidate [validateSuccess]=\"false\" type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\" mdbInput>\n              <label for=\"password\">Password</label>\n              <mdb-error *ngIf=\"password && password.invalid && (password.dirty || password.touched)\">Password is required</mdb-error>\n            </div>\n\n            <!-- Sign in button -->\n            <button mdbBtn color=\"primary\" block=\"true\" class=\"my-4 waves-effect z-depth-0\"\n              mdbWavesEffect type=\"submit\" (click)=\"onLogin()\">Log in</button>\n\n            <!-- Register -->\n            <p>Not a member?\n              <a routerLink=\"/register\">Register</a>\n            </p>\n\n            <!-- Social login -->\n            <p>or log in with:</p>\n            <a type=\"button\" class=\"mr-4\" (click)=\"onFacebookLogin('facebook')\">\n              <mdb-icon fab icon=\"facebook-f\"></mdb-icon>\n            </a>\n            <a type=\"button\" class=\"mr-4\" (click)=\"onTwitterLogin('twitter')\">\n              <mdb-icon fab icon=\"twitter\"></mdb-icon>\n            </a>\n            <a type=\"button\" (click)=\"onGoogleLogin('google')\">\n              <mdb-icon fab icon=\"google-plus-g\"></mdb-icon>\n            </a>\n          </form>\n          <!-- Form -->\n\n        </mdb-card-body>\n\n      </mdb-card>\n      <!-- Material form login -->\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppState } from '../../../reducers/index';\nimport { Store, select } from '@ngrx/store';\nimport * as actions from './../../store/auth.actions';\nimport { getError } from '../../store/auth.selectors';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n\n  error$: Observable<string | null>;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      username: new FormControl(),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n\n    this.error$ = this.store\n      .pipe(\n        select(getError),\n        map( (error: any) => {\n          if (error) {\n            if (error.code === 'auth/weak-password') {\n              return error.message;\n            } else if (error.code === 'auth/email-already-in-use') {\n              return 'User with this email address already exist';\n            }\n          } else {\n            return null;\n          }\n        })\n      );\n  }\n\n  get email() { return this.registerForm.get('email'); }\n  get password() { return this.registerForm.get('password'); }\n\n  onRegister() {\n    const username = this.registerForm.value.username;\n    const email = this.registerForm.value.email;\n    const password = this.registerForm.value.password;\n    if (this.registerForm.valid) {\n      this.store.dispatch(new actions.RegisterRequested({ username, email, password }));\n    }\n  }\n\n}\n","<div class=\"container-fluid full-page-container\">\n  <div class=\"row h-100 justify-content-center align-items-center\">\n    <div class=\"col-lg-4 col-sm-8 animated fadeIn\">\n      <!-- Material form login -->\n      <mdb-card class=\"z-depth-2\">\n\n        <div class=\"text-center py-4\">\n          <h5>\n            <strong>Register</strong>\n          </h5>\n        </div>\n\n\n        <!--Card content-->\n        <mdb-card-body class=\"px-lg-5 pt-0\">\n          <div *ngIf=\"error$ | async as error\" class=\"alert alert-danger\" role=\"alert\">\n            {{ error }}\n          </div>\n          <!-- Form -->\n          <form [formGroup]=\"registerForm\" class=\"text-center\" style=\"color: #757575;\">\n\n            <!-- Username -->\n            <div class=\"md-form\">\n              <input type=\"text\" id=\"username\" class=\"form-control\" formControlName=\"username\" mdbInput>\n              <label for=\"username\">Username</label>\n            </div>\n\n            <!-- Email -->\n            <div class=\"md-form\">\n              <input mdbValidate [validateSuccess]=\"false\" type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\" mdbInput>\n              <label for=\"email\">E-mail</label>\n              <mdb-error *ngIf=\"email && email.invalid && (email.dirty || email.touched)\">Email is required</mdb-error>\n            </div>\n\n            <!-- Password -->\n            <div class=\"md-form\">\n              <input mdbValidate [validateSuccess]=\"false\" type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\" mdbInput>\n              <label for=\"password\">Password</label>\n              <mdb-error *ngIf=\"password && password.invalid && password.errors && password.errors.required && (password.dirty || password.touched)\">Password is required</mdb-error>\n              <mdb-error *ngIf=\"password && password.invalid && password.errors && password.errors.minlength && (password.dirty || password.touched)\">Password must be at least 6 characters long</mdb-error>\n            </div>\n\n            <!-- Sign in button -->\n            <button mdbBtn color=\"primary\" block=\"true\" class=\"my-4 waves-effect z-depth-0\"\n              mdbWavesEffect type=\"submit\" (click)=\"onRegister()\">Register</button>\n\n            <!-- Register -->\n            <p>Already have an account?\n              <a routerLink=\"/login\">Log In</a>\n            </p>\n\n          </form>\n          <!-- Form -->\n\n        </mdb-card-body>\n\n      </mdb-card>\n      <!-- Material form login -->\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { switchMap, catchError, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  getUser(): Observable<any> {\n    return this.authService.getAuthState();\n  }\n\n  canActivate(): Observable<boolean> {\n\n    return this.getUser()\n      .pipe(\n        take(1),\n        switchMap((user) => {\n          if (!user) {\n            this.router.navigateByUrl('/login');\n            return of(false);\n          }\n          return of(true);\n        }),\n        catchError(() => {\n          this.router.navigateByUrl('/login');\n          return of(false);\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { from, Observable } from 'rxjs';\nimport * as firebase from 'firebase/app';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private afAuth: AngularFireAuth, private db: AngularFireDatabase) { }\n\n  register(email: string, password: string) {\n    return from(this.afAuth.auth.createUserWithEmailAndPassword(email, password));\n  }\n\n  //update firebase auth\n  updateProfile(displayName: string, photoUrl: string) {\n    const userProfile = this.afAuth.auth.currentUser;\n    if (userProfile) {\n      return <any>from(userProfile.updateProfile({displayName: displayName, photoURL: photoUrl }));\n    }\n  }\n\n  login(email: string, password: string) {\n    return from(this.afAuth.auth.signInWithEmailAndPassword(email, password));\n  }\n\n  socialLogin(authProvider: string) {\n    let provider: any;\n    if (authProvider === 'google') {\n      provider = new firebase.auth.GoogleAuthProvider();\n    }\n\n    if (authProvider === 'facebook') {\n      provider = new firebase.auth.FacebookAuthProvider();\n    }\n\n    if (authProvider === 'twitter') {\n      provider = new firebase.auth.TwitterAuthProvider();\n    }\n    return from(this.afAuth.auth.signInWithPopup(provider));\n  }\n\n  logout(uid: string) {\n    this.updateOnlineStatus(uid, false);\n    return from(this.afAuth.auth.signOut());\n  }\n\n  // update user in db\n  saveUser(user: User) {\n    const users = this.db.object('users/' + user.uid);\n    return users.set(user);\n  }\n\n  // get user in DB\n  getDBUser(uid: String): Observable<any> {\n    return this.db.object('users/' + uid).valueChanges();\n  }\n\n  updateOnlineStatus(uid: string, status: boolean) {\n    if (status) {\n      this.db.database.ref().child('users/' + uid).onDisconnect().update( { isOnline: false });\n    }\n    return from(this.db.object('users/' + uid).update({ isOnline: status }));\n  }\n\n  checkUserRole(uid: string) {\n    return this.db.object('admins/' + uid).valueChanges();\n  }\n\n  getAuthState() {\n    return this.afAuth.authState;\n  }\n\n  getCurrentUser() {\n    return this.afAuth.auth.currentUser;\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\n\nexport enum AuthActionTypes {\n  REGISTER_REQUESTED = '[Auth] REGISTER Requested',\n  REGISTER_COMPLETED = '[Auth] REGISTER Completed',\n  REGISTER_FAILED = '[Auth] REGISTER Failed',\n\n  UPDATE_PROFILE = '[Auth] Update profile',\n  UPDATE_PROFILE_SUCCESS = '[Auth] Update profile success',\n\n  LOGIN_REQUESTED = '[Auth] LOGIN Requested',\n  LOGIN_SUCCESS = '[Auth] LOGIN Success',\n  LOGIN_FAILED = '[Auth] LOGIN Failed',\n\n  SOCIAL_LOGIN = '[Auth] Social media login',\n\n  LOGOUT_REQUESTED = '[Auth] LOGOUT requested',\n  LOGOUT_COMPLETED = '[Auth] LOGOUT completed',\n\n  SAVE_USER = '[Auth] Save user',\n  UPDATE_ONLINE_STATUS = '[Auth] Update online status',\n\n  CHECK_USER_ROLE = '[Auth] Check user role',\n  UPDATE_USER_ROLE = '[Auth] Update user role',\n\n  GET_USER = '[Auth] GET User',\n  GET_USER_DETAILS = '[Auth] GET User Details',\n\n  AUTH_ERROR = '[Auth] Error'\n}\n\nexport class RegisterRequested implements Action {\n  readonly type = AuthActionTypes.REGISTER_REQUESTED;\n\n  constructor(public payload: { username: string, email: string; password: string }) {}\n}\n\nexport class RegisterCompleted implements Action {\n  readonly type = AuthActionTypes.REGISTER_COMPLETED;\n}\n\nexport class RegisterFailed implements Action {\n  readonly type = AuthActionTypes.REGISTER_FAILED;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport class UpdateProfile implements Action {\n  readonly type = AuthActionTypes.UPDATE_PROFILE;\n\n  constructor(public payload: { user: User }) {}\n}\n\nexport class UpdateProfileSuccess implements Action {\n  readonly type = AuthActionTypes.UPDATE_PROFILE_SUCCESS;\n\n  constructor(public payload: { user: User }) {}\n}\n\nexport class LoginRequested implements Action {\n  readonly type = AuthActionTypes.LOGIN_REQUESTED;\n\n  constructor(public payload: { email: string; password: string }) {}\n}\n\nexport class LoginSuccess implements Action {\n  readonly type = AuthActionTypes.LOGIN_SUCCESS;\n\n  constructor(public payload: { user: User }) {}\n}\n\nexport class LoginFailed implements Action {\n  readonly type = AuthActionTypes.LOGIN_FAILED;\n}\n\nexport class SocialLogin implements Action {\n  readonly type = AuthActionTypes.SOCIAL_LOGIN;\n\n  constructor(public payload: { authProvider: string }) {}\n}\n\nexport class LogoutRequested implements Action {\n  readonly type = AuthActionTypes.LOGOUT_REQUESTED;\n\n  constructor(public payload: { user: User }) {}\n}\n\nexport class LogoutCompleted implements Action {\n  readonly type = AuthActionTypes.LOGOUT_COMPLETED;\n}\n\nexport class SaveUser implements Action {\n  readonly type = AuthActionTypes.SAVE_USER;\n\n  constructor(public payload: { user: User }) {}\n}\n\nexport class UpdateOnlineStatus implements Action {\n  readonly type = AuthActionTypes.UPDATE_ONLINE_STATUS;\n\n  constructor(public payload: { uid: string, status: boolean }) {}\n}\n\nexport class CheckUserRole implements Action {\n  readonly type = AuthActionTypes.CHECK_USER_ROLE;\n\n  constructor(public payload: { uid: string }) {}\n}\n\nexport class UpdateUserRole implements Action {\n  readonly type = AuthActionTypes.UPDATE_USER_ROLE;\n\n  constructor(public payload: { isAdmin: boolean }) {}\n}\n\nexport class GetUser implements Action {\n  readonly type = AuthActionTypes.GET_USER;\n}\n\nexport class GetUserDetails implements Action {\n  readonly type = AuthActionTypes.GET_USER_DETAILS;\n\n  constructor(public uid: String) {}\n}\n\nexport class AuthError implements Action {\n  readonly type = AuthActionTypes.AUTH_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type AuthAction =\n  | RegisterRequested\n  | RegisterCompleted\n  | RegisterFailed\n  | UpdateProfile\n  | UpdateProfileSuccess\n  | LoginRequested\n  | LoginSuccess\n  | LoginFailed\n  | SocialLogin\n  | LogoutRequested\n  | LogoutCompleted\n  | SaveUser\n  | UpdateOnlineStatus\n  | CheckUserRole\n  | UpdateUserRole\n  | GetUserDetails\n  | GetUser\n  | AuthError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Observable, of, defer } from 'rxjs';\nimport { map, switchMap, catchError, tap, take } from 'rxjs/operators';\n\nimport * as auth from './../store/auth.actions';\nimport { User } from '../models/user.model';\nimport { GravatarService } from '../../shared/services/gravatar.service';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private gravatarService: GravatarService,\n    private router: Router,\n  ) {}\n\n  @Effect()\n  registerAction$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.REGISTER_REQUESTED),\n    map((action: auth.RegisterRequested) => action.payload),\n    switchMap(payload =>\n      this.authService.register(payload.email, payload.password).pipe(\n        map((res: any) => {\n          const gravatarUrl = this.gravatarService.getUserGravatar(res.user.email);\n          const user = {\n            uid: res.user.uid,\n            displayName: payload.username || res.user.displayName,\n            email: res.user.email,\n            providerId: res.additionalUserInfo.providerId,\n            photoUrl: res.user.photoURL || gravatarUrl,\n            isNewUser: res.additionalUserInfo.isNewUser,\n            isAdmin: false,\n            isOnline: true\n          };\n          return user;\n        }),\n        switchMap( (user: User) => {\n          return [\n            new auth.RegisterCompleted(),\n            new auth.LoginSuccess({ user }),\n            new auth.UpdateProfile({user}),\n            new auth.SaveUser( { user })\n          ];\n        }),\n        tap(() => { this.router.navigateByUrl(''); }),\n        catchError(error => of(new auth.AuthError({ error })))\n      )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  saveUser$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.SAVE_USER),\n    map( (action: auth.SaveUser) => action.payload),\n    switchMap( (payload: any) => this.authService.saveUser(payload.user))\n  );\n\n  @Effect({ dispatch: false })\n  updateOnlineStatus$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.UPDATE_ONLINE_STATUS),\n    map( (action: auth.UpdateOnlineStatus) => action.payload),\n    switchMap( (payload: any) => this.authService.updateOnlineStatus(payload.uid, payload.status))\n  );\n\n  @Effect()\n  checkUserRole$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.CHECK_USER_ROLE),\n    map( (action: auth.CheckUserRole) => action.payload),\n    switchMap( (payload: any) => this.authService.checkUserRole(payload.uid)\n      .pipe(\n        map( (isAdmin: boolean) => {\n          return new auth.UpdateUserRole({ isAdmin });\n        }),\n        catchError( (error: any) => of(new auth.AuthError({ error })))\n      )\n    )\n  );\n\n  // we update firebase first, and then the database\n  @Effect()\n  updateProfile$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.UPDATE_PROFILE),\n    map((action: auth.UpdateProfile) => action.payload),\n    switchMap((payload: {user: User}) =>\n      this.authService.updateProfile(payload.user.displayName, payload.user.photoUrl).pipe(\n        map( () => {\n          const currentUser: any = this.authService.getCurrentUser();\n            const updatedUser: User = {\n              uid: currentUser.uid || null,\n              displayName: currentUser.displayName || null,\n              email: currentUser.email || null,\n              providerId: currentUser.providerData[0].providerId || null,\n              photoUrl: currentUser.photoURL || null,\n              phoneNumber: payload.user?.phoneNumber,\n              country: payload.user?.country,\n              street: payload.user?.street,\n              city: payload.user?.city,\n              province: payload.user?.province,\n          };\n          return updatedUser;\n        }),\n        switchMap((updatedUser: User) => {\n\n          return [\n            new auth.SaveUser( { user: updatedUser }),\n            new auth.UpdateProfileSuccess( { user: updatedUser })\n          ]\n        }),\n        catchError( (error) => of(new auth.AuthError(error)))\n      )\n    )\n  );\n\n\n  @Effect()\n  loginAction$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.LOGIN_REQUESTED),\n    map((action: auth.LoginRequested) => action.payload),\n    switchMap(payload =>\n      this.authService.login(payload.email, payload.password).pipe(\n        map((res: any) => {\n          const user = {\n            uid: res.user.uid,\n            displayName: res.user.displayName,\n            email: res.user.email,\n            providerId: res.additionalUserInfo.providerId,\n            photoUrl: res.user.photoURL,\n            isNewUser: res.additionalUserInfo.isNewUser\n          };\n          return new auth.LoginSuccess( {user });\n        }),\n/*         switchMap( (user: any) => {\n          if (user.isNewUser) {\n            return [\n              new auth.LoginSuccess({ user }),\n              new auth.SaveUser( { uid: user.uid, name: user.displayName }),\n              new auth.CheckUserRole( {uid: user.uid })\n            ];\n          } else {\n            return [ new auth.LoginSuccess( {user }), new auth.CheckUserRole({ uid: user.uid })];\n          }\n        }), */\n        tap(() => this.router.navigateByUrl('')),\n        catchError(error => of(new auth.AuthError({ error })))\n      )\n    )\n  );\n\n  @Effect()\n  loginSuccess$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.LOGIN_SUCCESS),\n    map( (action: auth.SaveUser) => action.payload),\n    switchMap( (payload: any) => {\n        return [\n          new auth.GetUserDetails(payload.user.uid),\n          new auth.UpdateOnlineStatus({ uid: payload.user.uid, status: true }),\n          new auth.CheckUserRole( {uid: payload.user.uid })\n        ];\n    })\n  );\n\n  @Effect()\n  socialLogin$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.SOCIAL_LOGIN),\n    map((action: auth.SocialLogin) => action.payload),\n    switchMap(payload => this.authService.socialLogin(payload.authProvider)\n      .pipe(\n        map( (res: any) => {\n          const user = {\n            uid: res.user.uid,\n            displayName: res.user.displayName,\n            email: res.user.email,\n            providerId: res.additionalUserInfo.providerId,\n            photoUrl: res.user.photoURL,\n            isNewUser: res.additionalUserInfo.isNewUser\n          };\n          return user;\n        }),\n        switchMap( (user: User) => {\n          if (user.isNewUser) {\n            return [\n              new auth.LoginSuccess({ user }),\n              new auth.SaveUser({ user }),\n              new auth.CheckUserRole({ uid: user.uid })\n            ];\n          } else {\n            return [new auth.LoginSuccess({ user }), new auth.CheckUserRole({ uid: user.uid })];\n          }\n        }),\n        tap(() => this.router.navigateByUrl('')),\n        catchError(error => {\n          return of(new auth.AuthError({ error }));\n        })\n      )\n    )\n  );\n\n  @Effect()\n  logoutAction$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.LOGOUT_REQUESTED),\n    map( (action: auth.LogoutRequested) => action.payload),\n    switchMap((payload: any) => this.authService.logout(payload.user.uid)\n      .pipe(\n        map(() => (new auth.LogoutCompleted())),\n        tap(() => this.router.navigateByUrl('')),\n        catchError(error => {\n          return of(new auth.AuthError({ error }));\n        }\n        )\n      )\n    )\n  );\n\n  @Effect()\n  getUser$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.GET_USER),\n    switchMap(() => this.authService.getAuthState()\n      .pipe(\n        take(1),\n        map((authData: any) => {\n          if (authData) {\n            const user = {\n              uid: authData.uid,\n              displayName: authData.displayName,\n              email: authData.email,\n              providerId: authData.providerData[0].providerId,\n              photoUrl: authData.photoURL,\n            };\n            return new auth.LoginSuccess({ user });\n          } else {\n            return new auth.LoginFailed();\n          }\n        }),\n        catchError(error => of(new auth.AuthError({ error })))\n      )\n    )\n  );\n\n  @Effect()\n  getUserDetails$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.GET_USER_DETAILS),\n    switchMap((payload: any) => this.authService.getDBUser(payload.uid).pipe(\n      map (userDetails => {\n        const currentUser: any = this.authService.getCurrentUser();\n            const updatedUser: User = {\n              uid: currentUser.uid || null,\n              displayName: currentUser.displayName || null,\n              email: currentUser.email || null,\n              providerId: currentUser.providerData[0].providerId || null,\n              photoUrl: currentUser.photoURL || null,\n              phoneNumber: userDetails.phoneNumber,\n              country: userDetails.country,\n              street: userDetails.street,\n              city: userDetails.city,\n              province: userDetails.province,\n          };\n\n          return new auth.UpdateProfileSuccess({user: updatedUser})\n      })\n      )\n    )\n  );\n\n  @Effect()\n  init$: Observable<any> = defer(() => {\n    return of(new auth.GetUser());\n  });\n}\n","import { authInitialState, AuthState } from './auth.state';\nimport { AuthAction, AuthActionTypes } from './auth.actions';\n\nexport function authReducer(state = authInitialState, action: AuthAction): AuthState {\n  switch (action.type) {\n\n    case AuthActionTypes.LOGIN_SUCCESS: {\n      return Object.assign({}, state, {\n        user: action.payload.user,\n        isLoggedIn: true,\n        isLoading: false,\n        error: null\n      });\n    }\n\n    case AuthActionTypes.UPDATE_PROFILE_SUCCESS: {\n      return Object.assign({}, state, {\n        user: action.payload.user,\n      });\n    }\n\n    case AuthActionTypes.UPDATE_USER_ROLE: {\n      return Object.assign({}, state, {\n        isAdmin: action.payload.isAdmin\n      });\n    }\n\n    case AuthActionTypes.LOGIN_FAILED: {\n      return Object.assign({}, state, {\n        user: null,\n        isLoading: false,\n        isLoggedIn: false\n      });\n    }\n\n    case AuthActionTypes.AUTH_ERROR: {\n      return Object.assign({}, state, {\n        error: action.payload.error\n      });\n    }\n\n    case AuthActionTypes.LOGOUT_COMPLETED: {\n      return Object.assign({}, state, {\n        user: null,\n        isLoading: false,\n        isLoggedIn: false\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector } from '@ngrx/store';\nimport { AppState } from '../../reducers';\n\nexport const getAuthState = (state: AppState) => state.auth;\n\nexport const getUser = createSelector(\n  getAuthState,\n  auth => auth.user\n);\n\nexport const getIsLoggedIn = createSelector(\n  getAuthState,\n  auth => auth.isLoggedIn\n);\n\nexport const getIsLoading = createSelector(\n  getAuthState,\n  auth => auth.isLoading\n);\n\nexport const getIsAdmin = createSelector(\n  getAuthState,\n  auth => auth.isAdmin\n);\n\nexport const getError = createSelector(\n  getAuthState,\n  auth => auth.error\n);\n","import { User } from '../models/user.model';\n\nexport interface AuthState {\n  user: User | null;\n  isAdmin: boolean;\n  isLoggedIn: boolean;\n  isLoading: boolean;\n  error: any;\n}\n\nexport const authInitialState: AuthState = {\n  user: null,\n  isAdmin: false,\n  isLoggedIn: false,\n  isLoading: true,\n  error: null\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\n\nimport {\n  NavbarModule,\n  DropdownModule,\n  CardsModule,\n  ButtonsModule,\n  IconsModule\n} from 'angular-bootstrap-md';\nimport { RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NavbarModule,\n    IconsModule,\n    RouterModule,\n    DropdownModule.forRoot(),\n    CardsModule,\n    ButtonsModule\n  ],\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    DashboardComponent,\n    PageNotFoundComponent\n  ],\n  exports: [\n    HeaderComponent,\n    FooterComponent\n  ]\n})\nexport class CoreModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  projectsSub: Subscription;\n  \n  projects = [\n    {\n      title: 'Project 1',\n      description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit.',\n      photoUrl:\n        'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(97).jpg'\n    },\n    {\n      title: 'Project 2',\n      description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit.',\n      photoUrl:\n        'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(98).jpg'\n    },\n    {\n      title: 'Project 3',\n      description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit.',\n      photoUrl:\n        'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(99).jpg'\n    },\n    {\n      title: 'Project 4',\n      description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit.',\n      photoUrl:\n        'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(95).jpg'\n    }\n  ];\n\n  constructor(\n  ) { }\n\n  ngOnInit() { }\n\n  ngOnDestroy() {\n    if (this.projectsSub) {\n      this.projectsSub.unsubscribe();\n    }\n  }\n\n  // initProjects() {\n  //   this.projectsSub = this.store\n  //     .pipe(\n  //       select(getUser),\n  //       switchMap((user: any) => {\n  //         if (user) {\n  //           return this.projectsService.get(user.uid);\n  //         } else {\n  //           return empty();\n  //         }\n  //       }),\n  //       take(1)\n  //     )\n  //     .subscribe(projects => {\n  //       if (projects.length === 0) {\n  //         this.projectsService.addProjects(this.projects);\n  //       }\n  //     });\n  // }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer class=\"footer-copyright text-center text-white py-3 primary-color-dark darken-2\">\n  &copy; 2020 Copyright:\n  <a class=\"text-white\" href=\"https:/sedky.ca/\">Cloudixia</a>\n</footer>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { User } from '../../auth/models/user.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  @Input() user: User;\n  @Input() isLoggedIn: boolean;\n  @Input() isLoading: boolean;\n  @Input() isAdmin: boolean;\n\n  @Output() logout = new EventEmitter<User>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onLogout() {\n    this.logout.emit(this.user);\n  }\n\n}\n","<!--Navbar-->\n<mdb-navbar #navbar SideClass=\"navbar navbar-expand-lg navbar-light white justify-content-between\" [containerInside]=\"false\">\n\n  <!-- Navbar brand -->\n  <mdb-navbar-brand>\n      <a class=\"navbar-brand\" routerLink=\"/\">\n          <img src=\"../../../favicon.ico\" height=\"30\" alt=\"\">\n      </a>\n  </mdb-navbar-brand>\n\n  <!-- Collapsible content -->\n  <links>\n\n    <!-- Links -->\n    <ul class=\"navbar-nav mr-auto\">\n      <li *ngIf=\"!isLoading\" class=\"nav-item\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" mdbWavesEffect>Marketplace<span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li *ngIf=\"isLoggedIn && !isLoading\" class=\"nav-item\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/projects\" routerLinkActive=\"active\" mdbWavesEffect>Your Listings</a>\n      </li>\n      <!-- \n      <li *ngIf=\"isLoggedIn && !isLoading\" class=\"nav-item\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/charts\" routerLinkActive=\"active\" mdbWavesEffect>Charts</a>\n      </li> -->\n\n      <li *ngIf=\"isLoggedIn && !isLoading && isAdmin\" class=\"nav-item\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/admin-panel\" routerLinkActive=\"active\" mdbWavesEffect>Admin panel</a>\n      </li>\n    </ul>\n    <!-- Links -->\n\n    <!-- Search form -->\n    <ul class=\"navbar-nav\" *ngIf=\"!isLoggedIn && !isLoading\">\n      <li class=\"nav-item waves-light\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/register\" mdbWavesEffect>Become a Seller</a>\n      </li>\n      <li class=\"nav-item waves-light\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/login\" mdbWavesEffect>Login</a>\n      </li>\n      <li class=\"nav-item waves-light\">\n        <a (click)=\"navbar.hide()\" style=\"color:white\" class=\"nav-link btn-primary waves-light\" routerLink=\"/register\" mdbWavesEffect>Register</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav\" *ngIf=\"isLoggedIn && !isLoading\">\n      <li class=\"nav-link waves-light dropdown avatar p-0 avatar-dropdown\" mdbDropdown>\n        <a mdbDropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link waves-light\" mdbWavesEffect>\n          <img *ngIf=\"user.photoUrl\" src=\"{{ user.photoUrl }}\" height=\"35\" width=\"35\" class=\"rounded-circle z-depth-0\" alt=\"avatar image\">\n        </a>\n          <div *dropdownMenu class=\"dropdown-menu dropdown-menu-right dropdown-primary\" role=\"menu\">\n              <div *ngIf=\"user.displayName\" class=\"text-center py-2 px-2\">{{ user.displayName }}</div>\n              <div *ngIf=\"!user.displayName\" class=\"text-center py-2 px-2\">Anonymous user</div>\n              <div class=\"divider dropdown-divider\"></div>\n              <a class=\"dropdown-item text-center waves-light\" \n              routerLink=\"/profile\" \n              mdbWavesEffect (click)=\"navbar.hide()\">Profile</a>\n              <a class=\"dropdown-item text-center waves-light\" mdbWavesEffect (click)=\"onLogout(); navbar.hide()\">Logout</a>\n          </div>\n      </li>\n      <li class=\"nav-item waves-light logout-button\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect (click)=\"onLogout(); navbar.hide()\">Logout</a>\n      </li>\n    </ul>\n  </links>\n  <!-- Collapsible content -->\n\n</mdb-navbar>\n<!--/.Navbar-->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row \" >\n    <div class=\"col-md-8\">\n      <img src=\"https://mdbootstrap.com/img/Marketing/other/logo/logo-mdb-angular-small.png\" alt=\"Error 404\" class=\"img-fluid\">\n      <h2 class=\"h2-responsive mt-3 mb-2\">404. That's an error.</h2>\n      <h4>The requested URL was not found on this server.</h4>\n    </div>\n    <div class=\"col-md-4\">\n      <img src=\"https://mdbootstrap.com/img/Others/grafika404-bf.png\" alt=\"Error 404\" class=\"img-fluid\">\n    </div>\n  </div>\n  </div>","import { Action } from '@ngrx/store';\nimport { Project } from 'src/app/projects/models/project.model';\n\nexport enum MarketplaceActionTypes {\n  MARKETPLACE_QUERY_ALL = '[Marketplace] Marketplace query all',\n  MARKETPLACE_ADDED = '[Marketplace] Marketplace added one',\n  MARKETPLACE_LOADED = '[Marketplace] Marketplace loaded',\n  MARKETPLACE_ERROR = '[Marketplace] Marketplace error'\n}\n\nexport class MarketplaceQueryAll implements Action {\n  readonly type = MarketplaceActionTypes.MARKETPLACE_QUERY_ALL;\n}\n\nexport class MarketplaceLoaded implements Action {\n  readonly type = MarketplaceActionTypes.MARKETPLACE_LOADED;\n\n  constructor(public payload: { projects: Project[] }) { }\n}\n\nexport class MarketplaceAdded implements Action {\n  readonly type = MarketplaceActionTypes.MARKETPLACE_ADDED;\n\n  constructor(public payload: { project: Project}) {}\n}\n\nexport class MarketplaceError implements Action {\n  readonly type = MarketplaceActionTypes.MARKETPLACE_ERROR;\n\n  constructor(public payload: { error: any }) { }\n}\n\nexport type MarketplaceActions =\n  | MarketplaceQueryAll\n  | MarketplaceAdded\n  | MarketplaceLoaded\n  | MarketplaceError;\n","import { MarketplaceActions, MarketplaceActionTypes } from './marketplace.actions';\nimport { marketplaceInitialState, MarketplaceState } from './marketplace.state';\n\n\nexport function marketplaceReducer(state = marketplaceInitialState, action: MarketplaceActions): MarketplaceState {\n  switch (action.type) {\n\n    case MarketplaceActionTypes.MARKETPLACE_QUERY_ALL: {\n      return Object.assign({}, state, {\n        loading: true,\n      });\n    }\n\n    case MarketplaceActionTypes.MARKETPLACE_LOADED: {\n      return Object.assign({}, state, {\n        projects: action.payload.projects,\n        loading: false,\n      });\n    }\n\n    case MarketplaceActionTypes.MARKETPLACE_ERROR: {\n      return Object.assign({}, state, {\n        loading: false,\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { Project } from '../../projects/models/project.model';\n\nexport interface MarketplaceState {\n    projects: Project[] | null;\n    loading: boolean;\n    error: any;\n  }\n  \n  export const marketplaceInitialState: MarketplaceState = {\n    projects: null,\n    loading: false,\n    error: null\n  };\n  ","import {\n  ActionReducerMap,\n  MetaReducer,\n  ActionReducer,\n  Action\n} from '@ngrx/store';\nimport * as fromAuth from '../auth/store/auth.reducer';\nimport * as fromAdmin from '../admin/store/admin.reducer';\nimport * as fromMarketplace from '../marketplace/store/marketplace.reducer';\nimport { AuthState } from '../auth/store/auth.state';\nimport { AdminState } from '../admin/store/admin.state';\nimport { MarketplaceState } from '../marketplace/store/marketplace.state';\n\nexport interface AppState {\n  auth: AuthState;\n  admin: AdminState;\n  marketplace: MarketplaceState;\n}\n\nexport const reducers: ActionReducerMap<AppState> = {\n  auth: fromAuth.authReducer,\n  admin: fromAdmin.adminReducer,\n  marketplace: fromMarketplace.marketplaceReducer\n};\n\nexport function clearState(reducer: ActionReducer<AppState>): ActionReducer<AppState> {\n  return function(state: AppState | undefined, action: Action): AppState {\n    if (action.type === '[Auth] LOGOUT completed') {\n      state = undefined;\n    }\n    return reducer(state, action);\n  };\n}\n\n\nexport const metaReducers: MetaReducer<AppState>[] = [clearState];\n","import { Component, OnInit } from '@angular/core';\nimport { MDBModalRef } from 'angular-bootstrap-md';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-confirm-modal',\n  templateUrl: './confirm-modal.component.html',\n  styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent implements OnInit {\n\n  confirmation: Subject<boolean> = new Subject();\n\n  constructor(public modalRef: MDBModalRef) { }\n\n  ngOnInit() {\n  }\n\n  onDelete() {\n    this.confirmation.next(true);\n    this.modalRef.hide();\n  }\n\n}\n","<div class=\"modal-content\">\n  <div class=\"modal-header\">\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">×</span>\n    </button>\n    <h4 class=\"modal-title w-100\" id=\"myModalLabel\">Delete</h4>\n  </div>\n  <div class=\"modal-body\">\n    <p>Are you sure you want to delete this item?</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" mdbBtn color=\"white\" class=\"black-text waves-light\" aria-label=\"Close\" (click)=\"modalRef.hide()\"\n      mdbWavesEffect>Cancel</button>\n    <button type=\"button\" mdbBtn color=\"red\" class=\"waves-light\" mdbWavesEffect (click)=\"onDelete()\">Delete</button>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MDBModalRef } from 'angular-bootstrap-md';\nimport { Subject } from 'rxjs';\nimport { Project } from '../../../projects/models/project.model';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-project-modal',\n  templateUrl: './project-modal.component.html',\n  styleUrls: ['./project-modal.component.scss']\n})\nexport class ProjectModalComponent implements OnInit {\n  @ViewChild('projectForm', { static: true }) projectForm: NgForm;\n\n  heading: string;\n\n  title: string;\n  description: string;\n  photoUrl: string;\n\n  projectData: Subject<Project> = new Subject();\n  project: Project = {};\n\n  constructor(public modalRef: MDBModalRef) {}\n\n  ngOnInit() {\n  }\n\n  onSave() {\n    if (this.projectForm.valid) {\n      this.projectData.next(this.project);\n    this.modalRef.hide();\n    } else {\n      const controls = this.projectForm.controls;\n      Object.keys(controls).forEach( controlName => controls[controlName].markAsTouched());\n    }\n  }\n\n}\n","<div class=\"modal-content\">\n  <div class=\"modal-header\">\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">×</span>\n    </button>\n    <h4 class=\"modal-title w-100\" id=\"myModalLabel\">{{ heading }}</h4>\n  </div>\n  <div class=\"modal-body\">\n    <form #projectForm=\"ngForm\">\n      <div class=\"md-form\">\n        <input type=\"text\" class=\"form-control\" name=\"title\" [(ngModel)]=\"project.title\" mdbInput mdbValidate [validateSuccess]=\"false\" #title=\"ngModel\" required>\n        <label for=\"title\">Title</label>\n        <mdb-error *ngIf=\"title && title.invalid && (title.dirty || title.touched)\">Title is required</mdb-error>\n      </div>\n\n      <div class=\"md-form\">\n        <textarea type=\"text\" id=\"description\" class=\"md-textarea form-control\" name=\"description\" [(ngModel)]=\"project.description\" mdbInput mdbValidate [validateSuccess]=\"false\" #description=\"ngModel\" required></textarea>\n        <label for=\"description\">Description</label>\n        <mdb-error *ngIf=\"description && description.invalid && (description.dirty || description.touched)\">Description is required</mdb-error>\n      </div>\n\n      <div class=\"md-form\">\n        <input type=\"text\" id=\"photo\" class=\"form-control\" name=\"photoUrl\" [(ngModel)]=\"project.photoUrl\" mdbInput>\n        <label for=\"photo\">Photo URL</label>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" mdbBtn color=\"white\" class=\"black-text waves-light\" aria-label=\"Close\" (click)=\"modalRef.hide()\"\n      mdbWavesEffect>Close</button>\n    <button type=\"button\" mdbBtn color=\"primary\" class=\"relative waves-light\" mdbWavesEffect (click)=\"onSave()\">Save!</button>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { Project } from '../../../projects/models/project.model';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProjectComponent implements OnInit {\n  @Input() project: Project;\n  @Input() editable = true;\n  @Output() deleted = new EventEmitter<Project>();\n  @Output() edited = new EventEmitter<Project>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onDelete() {\n    this.deleted.emit(this.project);\n  }\n\n  onEdit() {\n    this.edited.emit(this.project);\n  }\n\n}\n","<mdb-card>\n  <!--Card image-->\n  <mdb-card-img *ngIf=\"project.photoUrl\" src=\"{{ project.photoUrl }}\" alt=\"Card image cap\" class=\"waves-light\"\n    mdbWavesEffect></mdb-card-img>\n  <!-- <mdb-card-img *ngIf=\"!project.photoUrl\" src=\"https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(97).jpg\" alt=\"Card image cap\"></mdb-card-img> -->\n  <!--Card content-->\n  <mdb-card-body>\n\n    <!--Title-->\n    <mdb-card-title>\n      <h4>{{ project.title }}</h4>\n    </mdb-card-title>\n\n    <!--Text-->\n    <mdb-card-text> {{ project.description }}\n    </mdb-card-text>\n\n    <div class=\"text-left\">\n      <a *ngIf=\"editable\" mdbBtn color=\"primary\" mdbWavesEffect (click)=\"onEdit()\">Edit</a>\n      <a mdbBtn class=\"red lighten-1 white-text\" mdbWavesEffect (click)=\"onDelete()\">Delete</a>\n    </div>\n  </mdb-card-body>\n</mdb-card>","import { Component, OnInit, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Project } from '../../../projects/models/project.model';\n\n@Component({\n  selector: 'app-projects-list',\n  templateUrl: './projects-list.component.html',\n  styleUrls: ['./projects-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProjectsListComponent implements OnInit {\n  @Input() projects: Project[];\n  @Input() editable = true;\n  @Output() projectDeleted = new EventEmitter<Project>();\n  @Output() projectEdited = new EventEmitter<Project>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onProjectDelete(project: Project) {\n    this.projectDeleted.emit(project);\n  }\n\n  onProjectEdit(project: Project) {\n    this.projectEdited.emit(project);\n  }\n\n  trackByFunction(index: any) {\n    return index;\n  }\n\n}\n","<div class=\"projects-list d-flex flex-wrap fadeIn animated\">\n    <div class=\"project\" *ngFor=\"let project of projects; trackBy: trackByFunction\">\n      <app-project [project]=\"project\" [editable]=\"editable\" (deleted)=\"onProjectDelete($event)\" (edited)=\"onProjectEdit($event)\"></app-project>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport * as md5 from 'md5';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GravatarService {\n\n  constructor() { }\n\n  getUserGravatar(email: string) {\n    if (email) {\n      return `https://www.gravatar.com/avatar/${md5(email)}`;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmModalComponent } from './components/confirm-modal/confirm-modal.component';\nimport {\n  ButtonsModule,\n  InputsModule,\n  CardsModule,\n  InputUtilitiesModule,\n  IconsModule\n} from 'angular-bootstrap-md';\nimport { ProjectModalComponent } from './components/project-modal/project-modal.component';\nimport { FormsModule } from '@angular/forms';\nimport { ProjectComponent } from './components/project/project.component';\nimport { ProjectsListComponent } from './components/projects-list/projects-list.component';\n\n@NgModule({\n  declarations: [\n    ConfirmModalComponent,\n    ProjectModalComponent,\n    ProjectsListComponent,\n    ProjectComponent,\n  ],\n  imports: [\n    CommonModule,\n    InputsModule,\n    InputUtilitiesModule,\n    IconsModule,\n    FormsModule,\n    ButtonsModule,\n    CardsModule\n  ],\n  exports: [ProjectsListComponent, ProjectComponent],\n  providers: [],\n  entryComponents: [\n    ConfirmModalComponent,\n    ProjectModalComponent\n  ]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyAQVu7JXpG-u5LDYeltF8DyOpn-agZaJp8\",\n    authDomain: \"bloopky.firebaseapp.com\",\n    databaseURL: \"https://bloopky.firebaseio.com\",\n    projectId: \"bloopky\",\n    storageBucket: \"bloopky.appspot.com\",\n    messagingSenderId: \"849578959436\",\n    appId: \"1:849578959436:web:b8f8144560a29629d48ae9\",\n    measurementId: \"G-BX1MCQ199J\"\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"]}