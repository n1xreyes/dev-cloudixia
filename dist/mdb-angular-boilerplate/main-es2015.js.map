{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/admin/admin.module.ts","./src/app/admin/components/user-detail/user-detail.component.ts","./src/app/admin/components/user-detail/user-detail.component.html","./src/app/admin/components/user/user.component.ts","./src/app/admin/components/user/user.component.html","./src/app/admin/components/users-list/users-list.component.ts","./src/app/admin/components/users-list/users-list.component.html","./src/app/admin/containers/admin/admin.component.ts","./src/app/admin/containers/admin/admin.component.html","./src/app/admin/guard/admin.guard.ts","./src/app/admin/services/admin.service.ts","./src/app/admin/store/admin.actions.ts","./src/app/admin/store/admin.effects.ts","./src/app/admin/store/admin.reducer.ts","./src/app/admin/store/admin.selectors.ts","./src/app/admin/store/admin.state.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.component.html","./src/app/auth/components/register/register.component.ts","./src/app/auth/components/register/register.component.html","./src/app/auth/guards/auth.guard.ts","./src/app/auth/services/auth.service.ts","./src/app/auth/store/auth.actions.ts","./src/app/auth/store/auth.effects.ts","./src/app/auth/store/auth.reducer.ts","./src/app/auth/store/auth.selectors.ts","./src/app/auth/store/auth.state.ts","./src/app/core/core.module.ts","./src/app/core/dashboard/dashboard.component.ts","./src/app/core/dashboard/dashboard.component.html","./src/app/core/footer/footer.component.ts","./src/app/core/footer/footer.component.html","./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/app/core/page-not-found/page-not-found.component.ts","./src/app/core/page-not-found/page-not-found.component.html","./src/app/marketplace/store/marketplace.actions.ts","./src/app/marketplace/store/marketplace.reducer.ts","./src/app/marketplace/store/marketplace.state.ts","./src/app/reducers/index.ts","./src/app/shared/components/confirm-modal/confirm-modal.component.ts","./src/app/shared/components/confirm-modal/confirm-modal.component.html","./src/app/shared/components/project-modal/project-modal.component.ts","./src/app/shared/components/project-modal/project-modal.component.html","./src/app/shared/components/project/project.component.ts","./src/app/shared/components/project/project.component.html","./src/app/shared/components/projects-list/projects-list.component.ts","./src/app/shared/components/projects-list/projects-list.component.html","./src/app/shared/services/gravatar.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AdminComponent } from './containers/admin/admin.component';\nimport { UsersListComponent } from './components/users-list/users-list.component';\nimport { UserComponent } from './components/user/user.component';\n\nimport * as fromAdmin from './store/admin.reducer';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AdminEffects } from './store/admin.effects';\nimport { CollapseModule, CardsModule, ButtonsModule, BadgeModule, IconsModule, DropdownModule } from 'angular-bootstrap-md';\nimport { SharedModule } from '../shared/shared.module';\nimport { UserDetailComponent } from './components/user-detail/user-detail.component';\n\n@NgModule({\n  declarations: [AdminComponent, UsersListComponent, UserComponent, UserDetailComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    CollapseModule,\n    CardsModule,\n    DropdownModule,\n    BadgeModule,\n    ButtonsModule,\n    IconsModule,\n    StoreModule.forFeature('admin', fromAdmin.adminReducer),\n    EffectsModule.forFeature([AdminEffects])\n  ]\n})\nexport class AdminModule { }\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { User } from '../../../auth/models/user.model';\nimport { Project } from '../../../projects/models/project.model';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserDetailComponent implements OnInit {\n  @Input() user: User;\n  @Input() projects: Project[];\n  @Input() userProjectsLoading: boolean;\n  @Output() detailsClosed = new EventEmitter<any>();\n  @Output() projectsLoad = new EventEmitter<any>();\n  @Output() projectDeleted = new EventEmitter<Project>();\n  @Output() addAdmin = new EventEmitter<any>();\n  @Output() removeAdmin = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n  closeDetails() {\n    this.detailsClosed.emit();\n  }\n\n  loadProjects() {\n    this.projectsLoad.emit();\n  }\n\n  onProjectDelete(project: Project) {\n    this.projectDeleted.emit(project);\n  }\n\n  onAddAdmin() {\n    this.addAdmin.emit(this.user);\n  }\n\n  onRemoveAdmin() {\n    this.removeAdmin.emit(this.user);\n  }\n}\n","<mdb-card class=\"mb-4\" *ngIf=\"user\">\n  <mdb-card-body class=\"py-4\">\n    <div class=\"mb-5 back-button\" (click)=\"closeDetails()\">\n      <mdb-icon fas icon=\"arrow-left\" class=\"mr-2\"></mdb-icon>\n      <span>Back to user list</span>\n    </div>\n    <div class=\"d-flex flex-row justify-content-between flex-wrap\">\n      <div class=\"d-flex flex-row\">\n        <div class=\"mr-4\">\n          <img *ngIf=\"user.photoUrl\" src=\"{{ user.photoUrl }}\" height=\"90\" width=\"90\" class=\"rounded-circle z-depth-0\"\n            alt=\"avatar image\">\n        </div>\n\n        <div class=\"pt-2\">\n          <h4>{{ user.displayName }}</h4>\n          <div>\n            <span class=\"mr-2\">\n              <mdb-badge *ngIf=\"!user.isOnline\" color=\"red\">Offline</mdb-badge>\n              <mdb-badge *ngIf=\"user.isOnline\" color=\"green\">Online</mdb-badge>\n            </span>\n            <span>\n              <mdb-badge *ngIf=\"user.isAdmin\" color=\"purple\">Admin</mdb-badge>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"mt-3\">\n        <button *ngIf=\"!user.isAdmin\" mdbBtn outline=\"true\" color=\"red\" (click)=\"onAddAdmin()\">Add admin privileges</button>\n        <button *ngIf=\"user.isAdmin\" mdbBtn outline=\"true\" color=\"red\" (click)=\"onRemoveAdmin()\">Remove admin\n          privileges</button>\n      </div>\n    </div>\n\n    <hr class=\"my-5\">\n\n    <div class=\"d-flex flex-row align-items-center\">\n      <h4 class=\"mr-3\">Projects</h4>\n      <button mdbBtn color=\"primary\" size=\"sm\" (click)=\"loadProjects()\">Load user projects</button>\n    </div>\n\n    <div *ngIf=\"userProjectsLoading\" class=\"d-flex justify-content-center align-items-center\" style=\"margin-top: 50px\">\n      <div class=\"spinner-grow text-primary\" role=\"status\" style=\"width: 4rem; height: 4rem;\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n\n    <app-projects-list *ngIf=\"!userProjectsLoading && projects\" [editable]=\"false\" [projects]=\"projects\" (projectDeleted)=\"onProjectDelete($event)\"></app-projects-list>\n\n    <hr class=\"my-5\">\n\n  </mdb-card-body>\n</mdb-card>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserComponent implements OnInit {\n  @Input() user: any;\n  @Output() userSelected = new EventEmitter<any>();\n  @Output() addAdmin = new EventEmitter<any>();\n  @Output() removeAdmin = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  selectUser() {\n    this.userSelected.emit(this.user);\n  }\n\n  addAdminPrivileges() {\n    this.addAdmin.emit(this.user);\n  }\n\n  removeAdminPrivileges() {\n    this.removeAdmin.emit(this.user);\n  }\n\n}\n","<mdb-card *ngIf=\"user\">\n  <mdb-card-body class=\"text-center py-4\">\n    <div>\n      <span *ngIf=\"!user.isOnline\" class=\"mr-2 float-left\">\n        <mdb-badge color=\"red\">Offline</mdb-badge>\n      </span>\n      <span *ngIf=\"user.isOnline\" class=\"mr-2 float-left\">\n        <mdb-badge color=\"green\">Online</mdb-badge>\n      </span>\n      <span class=\"float-left\">\n        <mdb-badge *ngIf=\"user.isAdmin\" color=\"purple\">Admin</mdb-badge>\n      </span>\n      <mdb-icon fas icon=\"ellipsis-v\" class=\"float-right grey-text\"></mdb-icon>\n    </div>\n    <div class=\"mt-5\">\n      <img *ngIf=\"user.photoUrl\" src=\"{{ user.photoUrl }}\" height=\"90\" width=\"90\" class=\"rounded-circle z-depth-0\" alt=\"avatar image\">\n    </div>\n    <div class=\"mt-3\">\n      {{ user.displayName }}\n    </div>\n    <div class=\"d-flex flex-column\">\n      <button class=\"mt-3\" mdbBtn color=\"danger\" size=\"sm\" (click)=\"removeAdminPrivileges()\" *ngIf=\"user.isAdmin\">Remove\n        admin privileges</button>\n      <button class=\"mt-3\" mdbBtn color=\"danger\" size=\"sm\" (click)=\"addAdminPrivileges()\" *ngIf=\"!user.isAdmin\">Add\n        admin privileges</button>\n      <button class=\"mt-2\" mdbBtn color=\"primary\" size=\"sm\" (click)=\"selectUser()\">Manage content</button>\n    </div>\n  </mdb-card-body>\n</mdb-card>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UsersListComponent implements OnInit {\n  @Input() users: any[];\n  @Output() userSelected = new EventEmitter<any>();\n  @Output() addAdmin = new EventEmitter<any>();\n  @Output() removeAdmin = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onUserSelected(user: any) {\n    this.userSelected.emit(user);\n  }\n\n  onAddAdmin(user: any) {\n    this.addAdmin.emit(user);\n  }\n\n  onRemoveAdmin(user: any) {\n    this.removeAdmin.emit(user);\n  }\n\n  trackByFn(index: any) {\n    return index;\n  }\n\n}\n","<div class=\"users-list d-flex flex-wrap\">\n  <div class=\"user\" *ngFor=\"let user of users; trackBy: trackByFn\">\n    <app-user [user]=\"user\" (userSelected)=\"onUserSelected($event)\" (addAdmin)=\"onAddAdmin($event)\" (removeAdmin)=\"onRemoveAdmin($event)\"></app-user>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../../../../app/reducers';\n\nimport * as fromAdmin from '../../store/admin.actions';\nimport { Observable } from 'rxjs';\nimport {\n  getUsersList,\n  getUserProjects,\n  getSelectedUser,\n  getUsersListLoading,\n  getUserProjectsLoading,\n} from '../../store/admin.selectors';\nimport { Project } from '../../../projects/models/project.model';\nimport { User } from '../../../auth/models/user.model';\nimport { map, delay, take } from 'rxjs/operators';\nimport { MDBModalService, MDBModalRef } from 'angular-bootstrap-md';\nimport { ConfirmModalComponent } from '../../../shared/components/confirm-modal/confirm-modal.component';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n  constructor(\n    private store: Store<AppState>,\n    private modalService: MDBModalService\n  ) {}\n\n  users$: Observable<any>;\n  userProjects$: Observable<Project[]>;\n  usersListLoading$: Observable<boolean>;\n  userProjectsLoading$: Observable<boolean>;\n  selectedUser$: Observable<any>;\n  selectedUser: any;\n  uid: any;\n\n  private modalRef: MDBModalRef;\n\n  modalConfig = {\n    class: 'modal-dialog-centered'\n  };\n\n  ngOnInit() {\n    this.users$ = this.store.pipe(\n      select(getUsersList),\n      delay(0),\n      map((users: User[]) => {\n        if (!users || (users && users.length === 0)) {\n          this.store.dispatch(new fromAdmin.GetUsersList());\n        }\n        return users;\n      })\n    );\n    this.usersListLoading$ = this.store.select(getUsersListLoading);\n    this.userProjectsLoading$ = this.store.select(getUserProjectsLoading);\n  }\n\n  onUserSelect(user: any) {\n    this.uid = user.uid;\n    this.selectedUser = user;\n    this.selectedUser$ = this.store.select(getSelectedUser, user.uid);\n    this.userProjects$ = this.store.select(getUserProjects, user.uid).pipe(\n      map(projects => {\n        if (projects && projects.length !== 0) {\n          return projects;\n        } else {\n          return null;\n        }\n      })\n    );\n  }\n\n  onProjectsLoad() {\n    this.store.dispatch(new fromAdmin.GetUserProjects({ uid: this.uid }));\n  }\n\n  onDetailsClose() {\n    this.selectedUser = null;\n  }\n\n  openProjectConfirmModal(project: Project) {\n    this.modalRef = this.modalService.show(\n      ConfirmModalComponent,\n      this.modalConfig\n    );\n\n    this.modalRef.content.confirmation\n      .pipe(take(1))\n      .subscribe((confirmation: boolean) => {\n        if (confirmation) {\n          this.store.dispatch(\n            new fromAdmin.DeleteUserProject({\n              userId: this.selectedUser.key,\n              projectId: project.key\n            })\n          );\n        }\n      });\n  }\n\n  onProjectDelete(project: Project) {\n    this.openProjectConfirmModal(project);\n  }\n\n  addAdminPrivileges(user: any) {\n    this.store.dispatch(new fromAdmin.AddAdminPrivileges({ userId: user.key }));\n  }\n\n  removeAdminPrivileges(user: any) {\n    this.store.dispatch(\n      new fromAdmin.RemoveAdminPrivileges({ userId: user.key })\n    );\n  }\n}\n","<div class=\"white px-4 section-header\">\n  <h3>Admin panel</h3>\n  <p class=\"grey-text pt-3\">Change settings for every user in your application</p>\n</div>\n\n<div *ngIf=\"usersListLoading$ | async\" class=\"d-flex justify-content-center align-items-center\" style=\"margin-top: 300px\">\n  <div class=\"spinner-grow text-primary\" role=\"status\" style=\"width: 4rem; height: 4rem;\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n\n<div *ngIf=\"!(usersListLoading$ | async)\" class=\"container-fluid mt-3 pb-5\">\n  <app-users-list *ngIf=\"!selectedUser\" [users]=\"users$ | async\" (userSelected)=\"onUserSelect($event)\" (addAdmin)=\"addAdminPrivileges($event)\"\n    (removeAdmin)=\"removeAdminPrivileges($event)\"></app-users-list>\n  <app-user-detail\n    *ngIf=\"selectedUser\"\n    [user]=\"selectedUser$ | async\"\n    [projects]=\"userProjects$ | async\"\n    [userProjectsLoading]=\"userProjectsLoading$ | async\"\n    (detailsClosed)=\"onDetailsClose()\"\n    (projectsLoad)=\"onProjectsLoad()\"\n    (projectDeleted)=\"onProjectDelete($event)\"\n    (addAdmin)=\"addAdminPrivileges($event)\"\n    (removeAdmin)=\"removeAdminPrivileges($event)\"></app-user-detail>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { AdminService } from '../services/admin.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { take, switchMap, map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private router: Router, private adminService: AdminService, private afAuth: AngularFireAuth) {}\n\n\n  canActivate(): Observable<boolean> | boolean {\n\n    return this.afAuth.authState\n      .pipe(\n        take(1),\n        switchMap( (user: any) => {\n          if (!user) {\n            this.router.navigateByUrl('/login');\n            return of(false);\n          }\n          return this.adminService.checkAdminRole(user.uid)\n          .pipe(\n            map( (isAdmin) => {\n              if (isAdmin) {\n                return true;\n              } else {\n                this.router.navigateByUrl('');\n                return false;\n              }\n            }),\n            catchError( () => {\n              this.router.navigateByUrl('');\n              return of(false);\n            })\n          );\n          }),\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { from, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  selectedUser = new Subject();\n  selectedUser$ = this.selectedUser.asObservable();\n\n  getUsersList() {\n    const usersRef = this.db.list('users');\n    return usersRef.snapshotChanges();\n  }\n\n  getUserProjects(uid: string) {\n    const projectsRef = this.db.list('projects/' + uid);\n    return projectsRef.snapshotChanges();\n  }\n\n  checkAdminRole(uid: string) {\n    return this.db.object('admins/' + uid).valueChanges();\n  }\n\n  deleteUserProject(uid: string, projectId: string) {\n    return from(this.db.object(`projects/${uid}/` + projectId).remove());\n  }\n\n  addAdminPrivileges(uid: string) {\n    const adminsRef = this.db.object('admins/' + uid);\n    this.db.object('users/' + uid).update({ isAdmin: true });\n    return from(adminsRef.set(true));\n  }\n\n  removeAdminPrivileges(uid: string) {\n    this.db.object('users/' + uid).update({ isAdmin: false });\n    return from(this.db.object('admins/' + uid).remove());\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Project } from '../../projects/models/project.model';\n\nexport enum AdminActionTypes {\n  GET_USERS_LIST = '[Admin] Get Users List',\n  USERS_LIST_FETCHED = '[Admin] Users list fetched',\n\n  GET_USER_PROJECTS = '[Admin] Get user projects',\n  USERS_PROJECTS_LOADED = '[Admin] User projects loaded',\n  DELETE_USER_PROJECT = '[Admin] Delete user project',\n\n  ADD_ADMIN_PRIVILEGES = '[Admin] Add admin privileges',\n  REMOVE_ADMIN_PRIVILEGES = '[Admin] Remove admin privileges',\n\n  ADMIN_ERROR = '[Admin] Error'\n}\n\nexport class GetUsersList implements Action {\n  readonly type = AdminActionTypes.GET_USERS_LIST;\n}\n\nexport class UsersListFetched implements Action {\n  readonly type = AdminActionTypes.USERS_LIST_FETCHED;\n\n  constructor(public payload: { usersList: any[] }) {}\n}\n\nexport class GetUserProjects implements Action {\n  readonly type = AdminActionTypes.GET_USER_PROJECTS;\n\n  constructor(public payload: { uid: string }) {}\n}\n\nexport class DeleteUserProject implements Action {\n  readonly type = AdminActionTypes.DELETE_USER_PROJECT;\n\n  constructor(public payload: { userId: string, projectId: string}) {}\n}\n\nexport class UserProjectsLoaded implements Action {\n  readonly type = AdminActionTypes.USERS_PROJECTS_LOADED;\n\n  constructor(public payload: { uid: string, userProjects: Project[] }) {}\n}\n\nexport class AddAdminPrivileges implements Action {\n  readonly type = AdminActionTypes.ADD_ADMIN_PRIVILEGES;\n\n  constructor(public payload: { userId: string }) {}\n}\n\nexport class RemoveAdminPrivileges implements Action {\n  readonly type = AdminActionTypes.REMOVE_ADMIN_PRIVILEGES;\n\n  constructor(public payload: { userId: string }) {}\n}\n\nexport class AdminError implements Action {\n  readonly type = AdminActionTypes.ADMIN_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type AdminActions =\n  | GetUsersList\n  | UsersListFetched\n  | GetUserProjects\n  | UserProjectsLoaded\n  | DeleteUserProject\n  | AddAdminPrivileges\n  | RemoveAdminPrivileges\n  | AdminError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\n\nimport * as fromAdmin from './../store/admin.actions';\nimport { switchMap, map, catchError, mergeMap } from 'rxjs/operators';\nimport { AdminService } from '../services/admin.service';\nimport { Project } from '../../projects/models/project.model';\nimport { of } from 'rxjs';\n\n\n@Injectable()\nexport class AdminEffects {\n\n  constructor(private actions$: Actions, private adminService: AdminService) {}\n\n  @Effect()\n  getUsersList$ = this.actions$.pipe(\n    ofType(fromAdmin.AdminActionTypes.GET_USERS_LIST),\n    switchMap( () => this.adminService.getUsersList()\n      .pipe(\n        map( (users: any) => {\n          const usersList: any[] = users.map((res: any) => {\n            const key = res.payload.key;\n            const user: any = res.payload.val();\n            return {\n              key: key,\n              uid: user.uid,\n              displayName: user.displayName,\n              email: user.email,\n              providerId: user.providerId,\n              photoUrl: user.photoUrl,\n              isNewUser: user.isNewUser,\n              isAdmin: user.isAdmin,\n              isOnline: user.isOnline\n            };\n          });\n          return (new fromAdmin.UsersListFetched({ usersList }));\n        }),\n        catchError( (error: any) => of(new fromAdmin.AdminError({ error })))\n      )\n    )\n  );\n\n  @Effect()\n  getUserProjects$ = this.actions$.pipe(\n    ofType(fromAdmin.AdminActionTypes.GET_USER_PROJECTS),\n    map((action: fromAdmin.GetUserProjects) => action.payload),\n    mergeMap( (payload: any) => this.adminService.getUserProjects(payload.uid)\n      .pipe(\n        map((data: any) => {\n          const projectsData: Project[] = data.map((res: any) => {\n            const key = res.payload.key;\n            const project: Project = res.payload.val();\n            return {\n              key: key || null,\n              title: project.title || null,\n              description: project.description || null,\n              photoUrl: project.photoUrl || null\n            };\n          });\n          return (new fromAdmin.UserProjectsLoaded({ uid: payload.uid, userProjects: projectsData }));\n        }),\n        catchError(error => of(new fromAdmin.AdminError({ error })))\n      )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  deleteUserProject$ = this.actions$.pipe(\n    ofType(fromAdmin.AdminActionTypes.DELETE_USER_PROJECT),\n    map( (action: fromAdmin.DeleteUserProject) => action.payload),\n    switchMap( (payload: any) => this.adminService.deleteUserProject(payload.userId, payload.projectId)\n      .pipe(\n        catchError( (error: any) => of(new fromAdmin.AdminError({ error })))\n      )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  addAdminPrivileges$ = this.actions$.pipe(\n    ofType(fromAdmin.AdminActionTypes.ADD_ADMIN_PRIVILEGES),\n    map( (action: fromAdmin.AddAdminPrivileges) => action.payload),\n    switchMap( (payload: any) => this.adminService.addAdminPrivileges(payload.userId)\n      .pipe(\n        catchError( (error: any) => of(new fromAdmin.AdminError({ error })))\n      )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  removeAdminPrivileges$ = this.actions$.pipe(\n    ofType(fromAdmin.AdminActionTypes.REMOVE_ADMIN_PRIVILEGES),\n    map( (action: fromAdmin.RemoveAdminPrivileges) => action.payload),\n    switchMap( (payload: any) => this.adminService.removeAdminPrivileges(payload.userId)\n      .pipe(\n        catchError( (error: any) => of(new fromAdmin.AdminError({ error })))\n      )\n    )\n  );\n}\n","import { adminInitialState, AdminState } from './admin.state';\nimport { AdminActions, AdminActionTypes } from './admin.actions';\n\nexport function adminReducer(state = adminInitialState, action: AdminActions): AdminState {\n  switch (action.type) {\n\n    case AdminActionTypes.GET_USERS_LIST: {\n      return Object.assign({}, state, {\n        usersListLoading: true\n      });\n    }\n\n    case AdminActionTypes.USERS_LIST_FETCHED: {\n      return Object.assign({}, state, {\n        usersList: action.payload.usersList,\n        usersListLoading: false\n      });\n    }\n\n    case AdminActionTypes.GET_USER_PROJECTS: {\n      return Object.assign({}, state, {\n        userProjectsLoading: true\n      });\n    }\n\n    case AdminActionTypes.USERS_PROJECTS_LOADED: {\n      return Object.assign({}, state, {\n        userProjects: {...state.userProjects, [action.payload.uid]: action.payload.userProjects},\n        userProjectsLoading: false\n      });\n    }\n\n    case AdminActionTypes.ADMIN_ERROR: {\n      return Object.assign({}, state, {\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector } from '@ngrx/store';\nimport { AppState } from '../../reducers/index';\n\nexport const getAdminState = (state: AppState) => state.admin;\n\nexport const getUsersList = createSelector(\n  getAdminState,\n  admin => admin.usersList\n);\n\nexport const getUsersListLoading = createSelector(\n  getAdminState,\n  admin => admin.usersListLoading\n);\n\nexport const getSelectedUser = createSelector(\n  getUsersList,\n  (usersList: any, uid: string) => usersList.filter( (user: any) => user.uid === uid)[0]\n);\n\nexport const getUserProjects = createSelector(\n  getAdminState,\n  (admin: any, uid: string) => {\n    if (admin.userProjects.hasOwnProperty(uid)) {\n      return admin.userProjects[uid];\n    } else {\n      return null;\n    }\n  }\n);\n\nexport const getUserProjectsLoading = createSelector(\n  getAdminState,\n  admin => admin.userProjectsLoading\n);\n\n","export interface AdminState {\n    usersList: any[];\n    usersListLoading: boolean;\n    userProjects: any;\n    userProjectsLoading: boolean;\n    error: any;\n}\n\nexport const adminInitialState: AdminState = {\n    usersList: [],\n    usersListLoading: false,\n    userProjects: {},\n    userProjectsLoading: false,\n    error: null\n};\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { RegisterComponent } from './auth/components/register/register.component';\nimport { LoginComponent } from './auth/components/login/login.component';\nimport { AuthGuard } from './auth/guards/auth.guard';\nimport { PageNotFoundComponent } from './core/page-not-found/page-not-found.component';\nimport { AdminComponent } from './admin/containers/admin/admin.component';\nimport { AdminGuard } from './admin/guard/admin.guard';\n\nconst routes: Routes = [\n  { path: '', loadChildren: () => import('./marketplace/marketplace.module').then(m => m.MarketplaceModule) },\n  { path: 'projects', loadChildren: () => import('./projects/projects.module').then(m => m.ProjectsModule), canActivate: [AuthGuard] },\n  { path: 'profile', loadChildren: () => import('./profile/profile.module').then(m => m.ProfileModule), canActivate: [AuthGuard] },\n  { path: 'admin-panel', component: AdminComponent, canActivate: [AdminGuard] },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from './reducers';\nimport { Observable } from 'rxjs';\nimport { User } from './auth/models/user.model';\nimport { getUser, getIsLoggedIn, getIsLoading, getIsAdmin } from './auth/store/auth.selectors';\n\nimport * as fromAuth from './auth/store/auth.actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n  user$: Observable<User | null>;\n  isLoggedIn$: Observable<boolean>;\n  isLoading$: Observable<boolean>;\n  isAdmin$: Observable<boolean>;\n\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit() {\n    this.user$ = this.store.select(getUser);\n    this.isLoggedIn$ = this.store.select(getIsLoggedIn);\n    this.isLoading$ = this.store.select(getIsLoading);\n    this.isAdmin$ = this.store.select(getIsAdmin);\n  }\n\n  onLogout(user: User) {\n    this.store.dispatch(new fromAuth.LogoutRequested( { user }));\n  }\n\n}\n","<header>\n  <app-header [user]=\"user$ | async\" [isLoggedIn]=\"isLoggedIn$ | async\" [isLoading]=\"isLoading$ | async\" [isAdmin]=\"isAdmin$ | async\"\n    (logout)=\"onLogout($event)\"></app-header>\n</header>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n\n<footer class=\"app-footer footer-absolute\">\n  <app-footer></app-footer>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AngularFireModule } from '@angular/fire';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { environment } from '../environments/environment';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './reducers';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { SharedModule } from './shared/shared.module';\nimport { AdminModule } from './admin/admin.module';\nimport { ModalModule } from 'angular-bootstrap-md';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AuthModule,\n    SharedModule,\n    ModalModule.forRoot(),\n    AdminModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    AngularFireDatabaseModule,\n    CoreModule,\n    StoreModule.forRoot(reducers, {\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true\n      },\n      metaReducers\n    }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot([])\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromAuth from './store/auth.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './store/auth.effects';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AuthService } from './services/auth.service';\nimport { InputsModule, ButtonsModule, CardsModule, IconsModule, WavesModule, InputUtilitiesModule } from 'angular-bootstrap-md';\nimport { LoginComponent } from './components/login/login.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    InputsModule,\n    InputUtilitiesModule,\n    ButtonsModule,\n    CardsModule,\n    WavesModule,\n    RouterModule,\n    IconsModule,\n    StoreModule.forFeature('auth', fromAuth.authReducer),\n    EffectsModule.forFeature([AuthEffects])\n  ],\n  declarations: [RegisterComponent, LoginComponent],\n  exports: [RegisterComponent],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../../../reducers/index';\nimport * as actions from './../../store/auth.actions';\nimport { Observable } from 'rxjs';\nimport { getError } from '../../store/auth.selectors';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  error$: Observable<string | null>;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    });\n\n    this.error$ = this.store\n      .pipe(\n        select(getError),\n        map( (error: any) => {\n          if (error && (error.code === 'auth/user-not-found' || error.code === 'auth/wrong-password')) {\n            return 'Invalid login or password';\n          } else {\n            return null;\n          }\n        })\n      );\n  }\n\n  get email() { return this.loginForm.get('email'); }\n  get password() { return this.loginForm.get('password'); }\n\n  onLogin() {\n    if (this.loginForm.valid) {\n      this.store.dispatch(new actions.LoginRequested(this.loginForm.value));\n    }\n  }\n\n  onGoogleLogin(authProvider: string) {\n    this.store.dispatch(new actions.SocialLogin({ authProvider }));\n  }\n\n  onFacebookLogin(authProvider: string) {\n    this.store.dispatch(new actions.SocialLogin({ authProvider }));\n  }\n\n  onTwitterLogin(authProvider: string) {\n    this.store.dispatch(new actions.SocialLogin({ authProvider }));\n  }\n\n}\n","<div class=\"container-fluid full-page-container\">\n  <div class=\"row h-100 justify-content-center align-items-center\">\n    <div class=\"col-lg-4 col-sm-8 animated fadeIn\">\n      <!-- Material form login -->\n      <mdb-card class=\"z-depth-2\">\n\n        <div class=\"white text-center py-4\">\n          <h5>\n            <strong>Log in</strong>\n          </h5>\n        </div>\n\n\n        <!--Card content-->\n        <mdb-card-body class=\"px-lg-5 pt-0\">\n          <div *ngIf=\"error$ | async as error\" class=\"alert alert-danger\" role=\"alert\">\n            {{ error }}\n          </div>\n          <!-- Form -->\n          <form [formGroup]=\"loginForm\" class=\"text-center\" style=\"color: #757575;\">\n\n            <!-- Email -->\n            <div class=\"md-form\">\n              <input mdbValidate [validateSuccess]=\"false\" type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\" mdbInput>\n              <label for=\"email\">E-mail</label>\n              <mdb-error *ngIf=\"email && email.invalid && (email.dirty || email.touched)\">Email is required</mdb-error>\n            </div>\n\n            <!-- Password -->\n            <div class=\"md-form\">\n              <input mdbValidate [validateSuccess]=\"false\" type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\" mdbInput>\n              <label for=\"password\">Password</label>\n              <mdb-error *ngIf=\"password && password.invalid && (password.dirty || password.touched)\">Password is required</mdb-error>\n            </div>\n\n            <!-- Sign in button -->\n            <button mdbBtn color=\"primary\" block=\"true\" class=\"my-4 waves-effect z-depth-0\"\n              mdbWavesEffect type=\"submit\" (click)=\"onLogin()\">Log in</button>\n\n            <!-- Register -->\n            <p>Not a member?\n              <a routerLink=\"/register\">Register</a>\n            </p>\n\n            <!-- Social login -->\n            <p>or log in with:</p>\n            <a type=\"button\" class=\"mr-4\" (click)=\"onFacebookLogin('facebook')\">\n              <mdb-icon fab icon=\"facebook-f\"></mdb-icon>\n            </a>\n            <a type=\"button\" class=\"mr-4\" (click)=\"onTwitterLogin('twitter')\">\n              <mdb-icon fab icon=\"twitter\"></mdb-icon>\n            </a>\n            <a type=\"button\" (click)=\"onGoogleLogin('google')\">\n              <mdb-icon fab icon=\"google-plus-g\"></mdb-icon>\n            </a>\n          </form>\n          <!-- Form -->\n\n        </mdb-card-body>\n\n      </mdb-card>\n      <!-- Material form login -->\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppState } from '../../../reducers/index';\nimport { Store, select } from '@ngrx/store';\nimport * as actions from './../../store/auth.actions';\nimport { getError } from '../../store/auth.selectors';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n\n  error$: Observable<string | null>;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      username: new FormControl(),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n\n    this.error$ = this.store\n      .pipe(\n        select(getError),\n        map( (error: any) => {\n          if (error) {\n            if (error.code === 'auth/weak-password') {\n              return error.message;\n            } else if (error.code === 'auth/email-already-in-use') {\n              return 'User with this email address already exist';\n            }\n          } else {\n            return null;\n          }\n        })\n      );\n  }\n\n  get email() { return this.registerForm.get('email'); }\n  get password() { return this.registerForm.get('password'); }\n\n  onRegister() {\n    const username = this.registerForm.value.username;\n    const email = this.registerForm.value.email;\n    const password = this.registerForm.value.password;\n    if (this.registerForm.valid) {\n      this.store.dispatch(new actions.RegisterRequested({ username, email, password }));\n    }\n  }\n\n}\n","<div class=\"container-fluid full-page-container\">\n  <div class=\"row h-100 justify-content-center align-items-center\">\n    <div class=\"col-lg-4 col-sm-8 animated fadeIn\">\n      <!-- Material form login -->\n      <mdb-card class=\"z-depth-2\">\n\n        <div class=\"text-center py-4\">\n          <h5>\n            <strong>Register</strong>\n          </h5>\n        </div>\n\n\n        <!--Card content-->\n        <mdb-card-body class=\"px-lg-5 pt-0\">\n          <div *ngIf=\"error$ | async as error\" class=\"alert alert-danger\" role=\"alert\">\n            {{ error }}\n          </div>\n          <!-- Form -->\n          <form [formGroup]=\"registerForm\" class=\"text-center\" style=\"color: #757575;\">\n\n            <!-- Username -->\n            <div class=\"md-form\">\n              <input type=\"text\" id=\"username\" class=\"form-control\" formControlName=\"username\" mdbInput>\n              <label for=\"username\">Username</label>\n            </div>\n\n            <!-- Email -->\n            <div class=\"md-form\">\n              <input mdbValidate [validateSuccess]=\"false\" type=\"email\" id=\"email\" class=\"form-control\" formControlName=\"email\" mdbInput>\n              <label for=\"email\">E-mail</label>\n              <mdb-error *ngIf=\"email && email.invalid && (email.dirty || email.touched)\">Email is required</mdb-error>\n            </div>\n\n            <!-- Password -->\n            <div class=\"md-form\">\n              <input mdbValidate [validateSuccess]=\"false\" type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\" mdbInput>\n              <label for=\"password\">Password</label>\n              <mdb-error *ngIf=\"password && password.invalid && password.errors && password.errors.required && (password.dirty || password.touched)\">Password is required</mdb-error>\n              <mdb-error *ngIf=\"password && password.invalid && password.errors && password.errors.minlength && (password.dirty || password.touched)\">Password must be at least 6 characters long</mdb-error>\n            </div>\n\n            <!-- Sign in button -->\n            <button mdbBtn color=\"primary\" block=\"true\" class=\"my-4 waves-effect z-depth-0\"\n              mdbWavesEffect type=\"submit\" (click)=\"onRegister()\">Register</button>\n\n            <!-- Register -->\n            <p>Already have an account?\n              <a routerLink=\"/login\">Log In</a>\n            </p>\n\n          </form>\n          <!-- Form -->\n\n        </mdb-card-body>\n\n      </mdb-card>\n      <!-- Material form login -->\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { switchMap, catchError, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  getUser(): Observable<any> {\n    return this.authService.getAuthState();\n  }\n\n  canActivate(): Observable<boolean> {\n\n    return this.getUser()\n      .pipe(\n        take(1),\n        switchMap((user) => {\n          if (!user) {\n            this.router.navigateByUrl('/login');\n            return of(false);\n          }\n          return of(true);\n        }),\n        catchError(() => {\n          this.router.navigateByUrl('/login');\n          return of(false);\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { from, Observable } from 'rxjs';\nimport * as firebase from 'firebase/app';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private afAuth: AngularFireAuth, private db: AngularFireDatabase) { }\n\n  register(email: string, password: string) {\n    return from(this.afAuth.auth.createUserWithEmailAndPassword(email, password));\n  }\n\n  //update firebase auth\n  updateProfile(displayName: string, photoUrl: string) {\n    const userProfile = this.afAuth.auth.currentUser;\n    if (userProfile) {\n      return <any>from(userProfile.updateProfile({displayName: displayName, photoURL: photoUrl }));\n    }\n  }\n\n  login(email: string, password: string) {\n    return from(this.afAuth.auth.signInWithEmailAndPassword(email, password));\n  }\n\n  socialLogin(authProvider: string) {\n    let provider: any;\n    if (authProvider === 'google') {\n      provider = new firebase.auth.GoogleAuthProvider();\n    }\n\n    if (authProvider === 'facebook') {\n      provider = new firebase.auth.FacebookAuthProvider();\n    }\n\n    if (authProvider === 'twitter') {\n      provider = new firebase.auth.TwitterAuthProvider();\n    }\n    return from(this.afAuth.auth.signInWithPopup(provider));\n  }\n\n  logout(uid: string) {\n    this.updateOnlineStatus(uid, false);\n    return from(this.afAuth.auth.signOut());\n  }\n\n  // update user in db\n  saveUser(user: User) {\n    const users = this.db.object('users/' + user.uid);\n    return users.set(user);\n  }\n\n  // get user in DB\n  getDBUser(uid: String): Observable<any> {\n    return this.db.object('users/' + uid).valueChanges();\n  }\n\n  updateOnlineStatus(uid: string, status: boolean) {\n    if (status) {\n      this.db.database.ref().child('users/' + uid).onDisconnect().update( { isOnline: false });\n    }\n    return from(this.db.object('users/' + uid).update({ isOnline: status }));\n  }\n\n  checkUserRole(uid: string) {\n    return this.db.object('admins/' + uid).valueChanges();\n  }\n\n  getAuthState() {\n    return this.afAuth.authState;\n  }\n\n  getCurrentUser() {\n    return this.afAuth.auth.currentUser;\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { User } from '../models/user.model';\n\nexport enum AuthActionTypes {\n  REGISTER_REQUESTED = '[Auth] REGISTER Requested',\n  REGISTER_COMPLETED = '[Auth] REGISTER Completed',\n  REGISTER_FAILED = '[Auth] REGISTER Failed',\n\n  UPDATE_PROFILE = '[Auth] Update profile',\n  UPDATE_PROFILE_SUCCESS = '[Auth] Update profile success',\n\n  LOGIN_REQUESTED = '[Auth] LOGIN Requested',\n  LOGIN_SUCCESS = '[Auth] LOGIN Success',\n  LOGIN_FAILED = '[Auth] LOGIN Failed',\n\n  SOCIAL_LOGIN = '[Auth] Social media login',\n\n  LOGOUT_REQUESTED = '[Auth] LOGOUT requested',\n  LOGOUT_COMPLETED = '[Auth] LOGOUT completed',\n\n  SAVE_USER = '[Auth] Save user',\n  UPDATE_ONLINE_STATUS = '[Auth] Update online status',\n\n  CHECK_USER_ROLE = '[Auth] Check user role',\n  UPDATE_USER_ROLE = '[Auth] Update user role',\n\n  GET_USER = '[Auth] GET User',\n  GET_USER_DETAILS = '[Auth] GET User Details',\n\n  AUTH_ERROR = '[Auth] Error'\n}\n\nexport class RegisterRequested implements Action {\n  readonly type = AuthActionTypes.REGISTER_REQUESTED;\n\n  constructor(public payload: { username: string, email: string; password: string }) {}\n}\n\nexport class RegisterCompleted implements Action {\n  readonly type = AuthActionTypes.REGISTER_COMPLETED;\n}\n\nexport class RegisterFailed implements Action {\n  readonly type = AuthActionTypes.REGISTER_FAILED;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport class UpdateProfile implements Action {\n  readonly type = AuthActionTypes.UPDATE_PROFILE;\n\n  constructor(public payload: { user: User }) {}\n}\n\nexport class UpdateProfileSuccess implements Action {\n  readonly type = AuthActionTypes.UPDATE_PROFILE_SUCCESS;\n\n  constructor(public payload: { user: User }) {}\n}\n\nexport class LoginRequested implements Action {\n  readonly type = AuthActionTypes.LOGIN_REQUESTED;\n\n  constructor(public payload: { email: string; password: string }) {}\n}\n\nexport class LoginSuccess implements Action {\n  readonly type = AuthActionTypes.LOGIN_SUCCESS;\n\n  constructor(public payload: { user: User }) {}\n}\n\nexport class LoginFailed implements Action {\n  readonly type = AuthActionTypes.LOGIN_FAILED;\n}\n\nexport class SocialLogin implements Action {\n  readonly type = AuthActionTypes.SOCIAL_LOGIN;\n\n  constructor(public payload: { authProvider: string }) {}\n}\n\nexport class LogoutRequested implements Action {\n  readonly type = AuthActionTypes.LOGOUT_REQUESTED;\n\n  constructor(public payload: { user: User }) {}\n}\n\nexport class LogoutCompleted implements Action {\n  readonly type = AuthActionTypes.LOGOUT_COMPLETED;\n}\n\nexport class SaveUser implements Action {\n  readonly type = AuthActionTypes.SAVE_USER;\n\n  constructor(public payload: { user: User }) {}\n}\n\nexport class UpdateOnlineStatus implements Action {\n  readonly type = AuthActionTypes.UPDATE_ONLINE_STATUS;\n\n  constructor(public payload: { uid: string, status: boolean }) {}\n}\n\nexport class CheckUserRole implements Action {\n  readonly type = AuthActionTypes.CHECK_USER_ROLE;\n\n  constructor(public payload: { uid: string }) {}\n}\n\nexport class UpdateUserRole implements Action {\n  readonly type = AuthActionTypes.UPDATE_USER_ROLE;\n\n  constructor(public payload: { isAdmin: boolean }) {}\n}\n\nexport class GetUser implements Action {\n  readonly type = AuthActionTypes.GET_USER;\n}\n\nexport class GetUserDetails implements Action {\n  readonly type = AuthActionTypes.GET_USER_DETAILS;\n\n  constructor(public uid: String) {}\n}\n\nexport class AuthError implements Action {\n  readonly type = AuthActionTypes.AUTH_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type AuthAction =\n  | RegisterRequested\n  | RegisterCompleted\n  | RegisterFailed\n  | UpdateProfile\n  | UpdateProfileSuccess\n  | LoginRequested\n  | LoginSuccess\n  | LoginFailed\n  | SocialLogin\n  | LogoutRequested\n  | LogoutCompleted\n  | SaveUser\n  | UpdateOnlineStatus\n  | CheckUserRole\n  | UpdateUserRole\n  | GetUserDetails\n  | GetUser\n  | AuthError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Observable, of, defer } from 'rxjs';\nimport { map, switchMap, catchError, tap, take } from 'rxjs/operators';\n\nimport * as auth from './../store/auth.actions';\nimport { User } from '../models/user.model';\nimport { GravatarService } from '../../shared/services/gravatar.service';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private gravatarService: GravatarService,\n    private router: Router,\n  ) {}\n\n  @Effect()\n  registerAction$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.REGISTER_REQUESTED),\n    map((action: auth.RegisterRequested) => action.payload),\n    switchMap(payload =>\n      this.authService.register(payload.email, payload.password).pipe(\n        map((res: any) => {\n          const gravatarUrl = this.gravatarService.getUserGravatar(res.user.email);\n          const user = {\n            uid: res.user.uid,\n            displayName: payload.username || res.user.displayName,\n            email: res.user.email,\n            providerId: res.additionalUserInfo.providerId,\n            photoUrl: res.user.photoURL || gravatarUrl,\n            isNewUser: res.additionalUserInfo.isNewUser,\n            isAdmin: false,\n            isOnline: true\n          };\n          return user;\n        }),\n        switchMap( (user: User) => {\n          return [\n            new auth.RegisterCompleted(),\n            new auth.LoginSuccess({ user }),\n            new auth.UpdateProfile({user}),\n            new auth.SaveUser( { user })\n          ];\n        }),\n        tap(() => { this.router.navigateByUrl(''); }),\n        catchError(error => of(new auth.AuthError({ error })))\n      )\n    )\n  );\n\n  @Effect({ dispatch: false })\n  saveUser$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.SAVE_USER),\n    map( (action: auth.SaveUser) => action.payload),\n    switchMap( (payload: any) => this.authService.saveUser(payload.user))\n  );\n\n  @Effect({ dispatch: false })\n  updateOnlineStatus$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.UPDATE_ONLINE_STATUS),\n    map( (action: auth.UpdateOnlineStatus) => action.payload),\n    switchMap( (payload: any) => this.authService.updateOnlineStatus(payload.uid, payload.status))\n  );\n\n  @Effect()\n  checkUserRole$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.CHECK_USER_ROLE),\n    map( (action: auth.CheckUserRole) => action.payload),\n    switchMap( (payload: any) => this.authService.checkUserRole(payload.uid)\n      .pipe(\n        map( (isAdmin: boolean) => {\n          return new auth.UpdateUserRole({ isAdmin });\n        }),\n        catchError( (error: any) => of(new auth.AuthError({ error })))\n      )\n    )\n  );\n\n  // we update firebase first, and then the database\n  @Effect()\n  updateProfile$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.UPDATE_PROFILE),\n    map((action: auth.UpdateProfile) => action.payload),\n    switchMap((payload: {user: User}) =>\n      this.authService.updateProfile(payload.user.displayName, payload.user.photoUrl).pipe(\n        map( () => {\n          const currentUser: any = this.authService.getCurrentUser();\n            const updatedUser: User = {\n              uid: currentUser.uid || null,\n              displayName: currentUser.displayName || null,\n              email: currentUser.email || null,\n              providerId: currentUser.providerData[0].providerId || null,\n              photoUrl: currentUser.photoURL || null,\n              phoneNumber: payload.user?.phoneNumber,\n              country: payload.user?.country,\n              street: payload.user?.street,\n              city: payload.user?.city,\n              province: payload.user?.province,\n          };\n          return updatedUser;\n        }),\n        switchMap((updatedUser: User) => {\n\n          return [\n            new auth.SaveUser( { user: updatedUser }),\n            new auth.UpdateProfileSuccess( { user: updatedUser })\n          ]\n        }),\n        catchError( (error) => of(new auth.AuthError(error)))\n      )\n    )\n  );\n\n\n  @Effect()\n  loginAction$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.LOGIN_REQUESTED),\n    map((action: auth.LoginRequested) => action.payload),\n    switchMap(payload =>\n      this.authService.login(payload.email, payload.password).pipe(\n        map((res: any) => {\n          const user = {\n            uid: res.user.uid,\n            displayName: res.user.displayName,\n            email: res.user.email,\n            providerId: res.additionalUserInfo.providerId,\n            photoUrl: res.user.photoURL,\n            isNewUser: res.additionalUserInfo.isNewUser\n          };\n          return new auth.LoginSuccess( {user });\n        }),\n/*         switchMap( (user: any) => {\n          if (user.isNewUser) {\n            return [\n              new auth.LoginSuccess({ user }),\n              new auth.SaveUser( { uid: user.uid, name: user.displayName }),\n              new auth.CheckUserRole( {uid: user.uid })\n            ];\n          } else {\n            return [ new auth.LoginSuccess( {user }), new auth.CheckUserRole({ uid: user.uid })];\n          }\n        }), */\n        tap(() => this.router.navigateByUrl('')),\n        catchError(error => of(new auth.AuthError({ error })))\n      )\n    )\n  );\n\n  @Effect()\n  loginSuccess$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.LOGIN_SUCCESS),\n    map( (action: auth.SaveUser) => action.payload),\n    switchMap( (payload: any) => {\n        return [\n          new auth.GetUserDetails(payload.user.uid),\n          new auth.UpdateOnlineStatus({ uid: payload.user.uid, status: true }),\n          new auth.CheckUserRole( {uid: payload.user.uid })\n        ];\n    })\n  );\n\n  @Effect()\n  socialLogin$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.SOCIAL_LOGIN),\n    map((action: auth.SocialLogin) => action.payload),\n    switchMap(payload => this.authService.socialLogin(payload.authProvider)\n      .pipe(\n        map( (res: any) => {\n          const user = {\n            uid: res.user.uid,\n            displayName: res.user.displayName,\n            email: res.user.email,\n            providerId: res.additionalUserInfo.providerId,\n            photoUrl: res.user.photoURL,\n            isNewUser: res.additionalUserInfo.isNewUser\n          };\n          return user;\n        }),\n        switchMap( (user: User) => {\n          if (user.isNewUser) {\n            return [\n              new auth.LoginSuccess({ user }),\n              new auth.SaveUser({ user }),\n              new auth.CheckUserRole({ uid: user.uid })\n            ];\n          } else {\n            return [new auth.LoginSuccess({ user }), new auth.CheckUserRole({ uid: user.uid })];\n          }\n        }),\n        tap(() => this.router.navigateByUrl('')),\n        catchError(error => {\n          return of(new auth.AuthError({ error }));\n        })\n      )\n    )\n  );\n\n  @Effect()\n  logoutAction$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.LOGOUT_REQUESTED),\n    map( (action: auth.LogoutRequested) => action.payload),\n    switchMap((payload: any) => this.authService.logout(payload.user.uid)\n      .pipe(\n        map(() => (new auth.LogoutCompleted())),\n        tap(() => this.router.navigateByUrl('')),\n        catchError(error => {\n          return of(new auth.AuthError({ error }));\n        }\n        )\n      )\n    )\n  );\n\n  @Effect()\n  getUser$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.GET_USER),\n    switchMap(() => this.authService.getAuthState()\n      .pipe(\n        take(1),\n        map((authData: any) => {\n          if (authData) {\n            const user = {\n              uid: authData.uid,\n              displayName: authData.displayName,\n              email: authData.email,\n              providerId: authData.providerData[0].providerId,\n              photoUrl: authData.photoURL,\n            };\n            return new auth.LoginSuccess({ user });\n          } else {\n            return new auth.LoginFailed();\n          }\n        }),\n        catchError(error => of(new auth.AuthError({ error })))\n      )\n    )\n  );\n\n  @Effect()\n  getUserDetails$ = this.actions$.pipe(\n    ofType(auth.AuthActionTypes.GET_USER_DETAILS),\n    switchMap((payload: any) => this.authService.getDBUser(payload.uid).pipe(\n      map (userDetails => {\n        const currentUser: any = this.authService.getCurrentUser();\n            const updatedUser: User = {\n              uid: currentUser.uid || null,\n              displayName: currentUser.displayName || null,\n              email: currentUser.email || null,\n              providerId: currentUser.providerData[0].providerId || null,\n              photoUrl: currentUser.photoURL || null,\n              phoneNumber: userDetails.phoneNumber,\n              country: userDetails.country,\n              street: userDetails.street,\n              city: userDetails.city,\n              province: userDetails.province,\n          };\n\n          return new auth.UpdateProfileSuccess({user: updatedUser})\n      })\n      )\n    )\n  );\n\n  @Effect()\n  init$: Observable<any> = defer(() => {\n    return of(new auth.GetUser());\n  });\n}\n","import { authInitialState, AuthState } from './auth.state';\nimport { AuthAction, AuthActionTypes } from './auth.actions';\n\nexport function authReducer(state = authInitialState, action: AuthAction): AuthState {\n  switch (action.type) {\n\n    case AuthActionTypes.LOGIN_SUCCESS: {\n      return Object.assign({}, state, {\n        user: action.payload.user,\n        isLoggedIn: true,\n        isLoading: false,\n        error: null\n      });\n    }\n\n    case AuthActionTypes.UPDATE_PROFILE_SUCCESS: {\n      return Object.assign({}, state, {\n        user: action.payload.user,\n      });\n    }\n\n    case AuthActionTypes.UPDATE_USER_ROLE: {\n      return Object.assign({}, state, {\n        isAdmin: action.payload.isAdmin\n      });\n    }\n\n    case AuthActionTypes.LOGIN_FAILED: {\n      return Object.assign({}, state, {\n        user: null,\n        isLoading: false,\n        isLoggedIn: false\n      });\n    }\n\n    case AuthActionTypes.AUTH_ERROR: {\n      return Object.assign({}, state, {\n        error: action.payload.error\n      });\n    }\n\n    case AuthActionTypes.LOGOUT_COMPLETED: {\n      return Object.assign({}, state, {\n        user: null,\n        isLoading: false,\n        isLoggedIn: false\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector } from '@ngrx/store';\nimport { AppState } from '../../reducers';\n\nexport const getAuthState = (state: AppState) => state.auth;\n\nexport const getUser = createSelector(\n  getAuthState,\n  auth => auth.user\n);\n\nexport const getIsLoggedIn = createSelector(\n  getAuthState,\n  auth => auth.isLoggedIn\n);\n\nexport const getIsLoading = createSelector(\n  getAuthState,\n  auth => auth.isLoading\n);\n\nexport const getIsAdmin = createSelector(\n  getAuthState,\n  auth => auth.isAdmin\n);\n\nexport const getError = createSelector(\n  getAuthState,\n  auth => auth.error\n);\n","import { User } from '../models/user.model';\n\nexport interface AuthState {\n  user: User | null;\n  isAdmin: boolean;\n  isLoggedIn: boolean;\n  isLoading: boolean;\n  error: any;\n}\n\nexport const authInitialState: AuthState = {\n  user: null,\n  isAdmin: false,\n  isLoggedIn: false,\n  isLoading: true,\n  error: null\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\n\nimport {\n  NavbarModule,\n  DropdownModule,\n  CardsModule,\n  ButtonsModule,\n  IconsModule\n} from 'angular-bootstrap-md';\nimport { RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NavbarModule,\n    IconsModule,\n    RouterModule,\n    DropdownModule.forRoot(),\n    CardsModule,\n    ButtonsModule\n  ],\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    DashboardComponent,\n    PageNotFoundComponent\n  ],\n  exports: [\n    HeaderComponent,\n    FooterComponent\n  ]\n})\nexport class CoreModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  projectsSub: Subscription;\n  \n  projects = [\n    {\n      title: 'Project 1',\n      description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit.',\n      photoUrl:\n        'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(97).jpg'\n    },\n    {\n      title: 'Project 2',\n      description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit.',\n      photoUrl:\n        'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(98).jpg'\n    },\n    {\n      title: 'Project 3',\n      description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit.',\n      photoUrl:\n        'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(99).jpg'\n    },\n    {\n      title: 'Project 4',\n      description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit.',\n      photoUrl:\n        'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(95).jpg'\n    }\n  ];\n\n  constructor(\n  ) { }\n\n  ngOnInit() { }\n\n  ngOnDestroy() {\n    if (this.projectsSub) {\n      this.projectsSub.unsubscribe();\n    }\n  }\n\n  // initProjects() {\n  //   this.projectsSub = this.store\n  //     .pipe(\n  //       select(getUser),\n  //       switchMap((user: any) => {\n  //         if (user) {\n  //           return this.projectsService.get(user.uid);\n  //         } else {\n  //           return empty();\n  //         }\n  //       }),\n  //       take(1)\n  //     )\n  //     .subscribe(projects => {\n  //       if (projects.length === 0) {\n  //         this.projectsService.addProjects(this.projects);\n  //       }\n  //     });\n  // }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer class=\"footer-copyright text-center text-white py-3 primary-color-dark darken-2\">\n  &copy; 2020 Copyright:\n  <a class=\"text-white\" href=\"https:/sedky.ca/\">Cloudixia</a>\n</footer>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { User } from '../../auth/models/user.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  @Input() user: User;\n  @Input() isLoggedIn: boolean;\n  @Input() isLoading: boolean;\n  @Input() isAdmin: boolean;\n\n  @Output() logout = new EventEmitter<User>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onLogout() {\n    this.logout.emit(this.user);\n  }\n\n}\n","<!--Navbar-->\n<mdb-navbar #navbar SideClass=\"navbar navbar-expand-lg navbar-light white justify-content-between\" [containerInside]=\"false\">\n\n  <!-- Navbar brand -->\n  <mdb-navbar-brand>\n      <a class=\"navbar-brand\" routerLink=\"/\">\n          <img src=\"../../../favicon.ico\" height=\"30\" alt=\"\">\n      </a>\n  </mdb-navbar-brand>\n\n  <!-- Collapsible content -->\n  <links>\n\n    <!-- Links -->\n    <ul class=\"navbar-nav mr-auto\">\n      <li *ngIf=\"!isLoading\" class=\"nav-item\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" mdbWavesEffect>Marketplace<span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li *ngIf=\"isLoggedIn && !isLoading\" class=\"nav-item\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/projects\" routerLinkActive=\"active\" mdbWavesEffect>Your Listings</a>\n      </li>\n      <!-- \n      <li *ngIf=\"isLoggedIn && !isLoading\" class=\"nav-item\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/charts\" routerLinkActive=\"active\" mdbWavesEffect>Charts</a>\n      </li> -->\n\n      <li *ngIf=\"isLoggedIn && !isLoading && isAdmin\" class=\"nav-item\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/admin-panel\" routerLinkActive=\"active\" mdbWavesEffect>Admin panel</a>\n      </li>\n    </ul>\n    <!-- Links -->\n\n    <!-- Search form -->\n    <ul class=\"navbar-nav\" *ngIf=\"!isLoggedIn && !isLoading\">\n      <li class=\"nav-item waves-light\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/register\" mdbWavesEffect>Become a Seller</a>\n      </li>\n      <li class=\"nav-item waves-light\">\n        <a (click)=\"navbar.hide()\" class=\"nav-link waves-light\" routerLink=\"/login\" mdbWavesEffect>Login</a>\n      </li>\n      <li class=\"nav-item waves-light\">\n        <a (click)=\"navbar.hide()\" style=\"color:white\" class=\"nav-link btn-primary waves-light\" routerLink=\"/register\" mdbWavesEffect>Register</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav\" *ngIf=\"isLoggedIn && !isLoading\">\n      <li class=\"nav-link waves-light dropdown avatar p-0 avatar-dropdown\" mdbDropdown>\n        <a mdbDropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link waves-light\" mdbWavesEffect>\n          <img *ngIf=\"user.photoUrl\" src=\"{{ user.photoUrl }}\" height=\"35\" width=\"35\" class=\"rounded-circle z-depth-0\" alt=\"avatar image\">\n        </a>\n          <div *dropdownMenu class=\"dropdown-menu dropdown-menu-right dropdown-primary\" role=\"menu\">\n              <div *ngIf=\"user.displayName\" class=\"text-center py-2 px-2\">{{ user.displayName }}</div>\n              <div *ngIf=\"!user.displayName\" class=\"text-center py-2 px-2\">Anonymous user</div>\n              <div class=\"divider dropdown-divider\"></div>\n              <a class=\"dropdown-item text-center waves-light\" \n              routerLink=\"/profile\" \n              mdbWavesEffect (click)=\"navbar.hide()\">Profile</a>\n              <a class=\"dropdown-item text-center waves-light\" mdbWavesEffect (click)=\"onLogout(); navbar.hide()\">Logout</a>\n          </div>\n      </li>\n      <li class=\"nav-item waves-light logout-button\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect (click)=\"onLogout(); navbar.hide()\">Logout</a>\n      </li>\n    </ul>\n  </links>\n  <!-- Collapsible content -->\n\n</mdb-navbar>\n<!--/.Navbar-->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row \" >\n    <div class=\"col-md-8\">\n      <img src=\"https://mdbootstrap.com/img/Marketing/other/logo/logo-mdb-angular-small.png\" alt=\"Error 404\" class=\"img-fluid\">\n      <h2 class=\"h2-responsive mt-3 mb-2\">404. That's an error.</h2>\n      <h4>The requested URL was not found on this server.</h4>\n    </div>\n    <div class=\"col-md-4\">\n      <img src=\"https://mdbootstrap.com/img/Others/grafika404-bf.png\" alt=\"Error 404\" class=\"img-fluid\">\n    </div>\n  </div>\n  </div>","import { Action } from '@ngrx/store';\nimport { Project } from 'src/app/projects/models/project.model';\n\nexport enum MarketplaceActionTypes {\n  MARKETPLACE_QUERY_ALL = '[Marketplace] Marketplace query all',\n  MARKETPLACE_ADDED = '[Marketplace] Marketplace added one',\n  MARKETPLACE_LOADED = '[Marketplace] Marketplace loaded',\n  MARKETPLACE_ERROR = '[Marketplace] Marketplace error'\n}\n\nexport class MarketplaceQueryAll implements Action {\n  readonly type = MarketplaceActionTypes.MARKETPLACE_QUERY_ALL;\n}\n\nexport class MarketplaceLoaded implements Action {\n  readonly type = MarketplaceActionTypes.MARKETPLACE_LOADED;\n\n  constructor(public payload: { projects: Project[] }) { }\n}\n\nexport class MarketplaceAdded implements Action {\n  readonly type = MarketplaceActionTypes.MARKETPLACE_ADDED;\n\n  constructor(public payload: { project: Project}) {}\n}\n\nexport class MarketplaceError implements Action {\n  readonly type = MarketplaceActionTypes.MARKETPLACE_ERROR;\n\n  constructor(public payload: { error: any }) { }\n}\n\nexport type MarketplaceActions =\n  | MarketplaceQueryAll\n  | MarketplaceAdded\n  | MarketplaceLoaded\n  | MarketplaceError;\n","import { MarketplaceActions, MarketplaceActionTypes } from './marketplace.actions';\nimport { marketplaceInitialState, MarketplaceState } from './marketplace.state';\n\n\nexport function marketplaceReducer(state = marketplaceInitialState, action: MarketplaceActions): MarketplaceState {\n  switch (action.type) {\n\n    case MarketplaceActionTypes.MARKETPLACE_QUERY_ALL: {\n      return Object.assign({}, state, {\n        loading: true,\n      });\n    }\n\n    case MarketplaceActionTypes.MARKETPLACE_LOADED: {\n      return Object.assign({}, state, {\n        projects: action.payload.projects,\n        loading: false,\n      });\n    }\n\n    case MarketplaceActionTypes.MARKETPLACE_ERROR: {\n      return Object.assign({}, state, {\n        loading: false,\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { Project } from '../../projects/models/project.model';\n\nexport interface MarketplaceState {\n    projects: Project[] | null;\n    loading: boolean;\n    error: any;\n  }\n  \n  export const marketplaceInitialState: MarketplaceState = {\n    projects: null,\n    loading: false,\n    error: null\n  };\n  ","import {\n  ActionReducerMap,\n  MetaReducer,\n  ActionReducer,\n  Action\n} from '@ngrx/store';\nimport * as fromAuth from '../auth/store/auth.reducer';\nimport * as fromAdmin from '../admin/store/admin.reducer';\nimport * as fromMarketplace from '../marketplace/store/marketplace.reducer';\nimport { AuthState } from '../auth/store/auth.state';\nimport { AdminState } from '../admin/store/admin.state';\nimport { MarketplaceState } from '../marketplace/store/marketplace.state';\n\nexport interface AppState {\n  auth: AuthState;\n  admin: AdminState;\n  marketplace: MarketplaceState;\n}\n\nexport const reducers: ActionReducerMap<AppState> = {\n  auth: fromAuth.authReducer,\n  admin: fromAdmin.adminReducer,\n  marketplace: fromMarketplace.marketplaceReducer\n};\n\nexport function clearState(reducer: ActionReducer<AppState>): ActionReducer<AppState> {\n  return function(state: AppState | undefined, action: Action): AppState {\n    if (action.type === '[Auth] LOGOUT completed') {\n      state = undefined;\n    }\n    return reducer(state, action);\n  };\n}\n\n\nexport const metaReducers: MetaReducer<AppState>[] = [clearState];\n","import { Component, OnInit } from '@angular/core';\nimport { MDBModalRef } from 'angular-bootstrap-md';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-confirm-modal',\n  templateUrl: './confirm-modal.component.html',\n  styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent implements OnInit {\n\n  confirmation: Subject<boolean> = new Subject();\n\n  constructor(public modalRef: MDBModalRef) { }\n\n  ngOnInit() {\n  }\n\n  onDelete() {\n    this.confirmation.next(true);\n    this.modalRef.hide();\n  }\n\n}\n","<div class=\"modal-content\">\n  <div class=\"modal-header\">\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">×</span>\n    </button>\n    <h4 class=\"modal-title w-100\" id=\"myModalLabel\">Delete</h4>\n  </div>\n  <div class=\"modal-body\">\n    <p>Are you sure you want to delete this item?</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" mdbBtn color=\"white\" class=\"black-text waves-light\" aria-label=\"Close\" (click)=\"modalRef.hide()\"\n      mdbWavesEffect>Cancel</button>\n    <button type=\"button\" mdbBtn color=\"red\" class=\"waves-light\" mdbWavesEffect (click)=\"onDelete()\">Delete</button>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MDBModalRef } from 'angular-bootstrap-md';\nimport { Subject } from 'rxjs';\nimport { Project } from '../../../projects/models/project.model';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-project-modal',\n  templateUrl: './project-modal.component.html',\n  styleUrls: ['./project-modal.component.scss']\n})\nexport class ProjectModalComponent implements OnInit {\n  @ViewChild('projectForm', { static: true }) projectForm: NgForm;\n\n  heading: string;\n\n  title: string;\n  description: string;\n  photoUrl: string;\n\n  projectData: Subject<Project> = new Subject();\n  project: Project = {};\n\n  constructor(public modalRef: MDBModalRef) {}\n\n  ngOnInit() {\n  }\n\n  onSave() {\n    if (this.projectForm.valid) {\n      this.projectData.next(this.project);\n    this.modalRef.hide();\n    } else {\n      const controls = this.projectForm.controls;\n      Object.keys(controls).forEach( controlName => controls[controlName].markAsTouched());\n    }\n  }\n\n}\n","<div class=\"modal-content\">\n  <div class=\"modal-header\">\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">×</span>\n    </button>\n    <h4 class=\"modal-title w-100\" id=\"myModalLabel\">{{ heading }}</h4>\n  </div>\n  <div class=\"modal-body\">\n    <form #projectForm=\"ngForm\">\n      <div class=\"md-form\">\n        <input type=\"text\" class=\"form-control\" name=\"title\" [(ngModel)]=\"project.title\" mdbInput mdbValidate [validateSuccess]=\"false\" #title=\"ngModel\" required>\n        <label for=\"title\">Title</label>\n        <mdb-error *ngIf=\"title && title.invalid && (title.dirty || title.touched)\">Title is required</mdb-error>\n      </div>\n\n      <div class=\"md-form\">\n        <textarea type=\"text\" id=\"description\" class=\"md-textarea form-control\" name=\"description\" [(ngModel)]=\"project.description\" mdbInput mdbValidate [validateSuccess]=\"false\" #description=\"ngModel\" required></textarea>\n        <label for=\"description\">Description</label>\n        <mdb-error *ngIf=\"description && description.invalid && (description.dirty || description.touched)\">Description is required</mdb-error>\n      </div>\n\n      <div class=\"md-form\">\n        <input type=\"text\" id=\"photo\" class=\"form-control\" name=\"photoUrl\" [(ngModel)]=\"project.photoUrl\" mdbInput>\n        <label for=\"photo\">Photo URL</label>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" mdbBtn color=\"white\" class=\"black-text waves-light\" aria-label=\"Close\" (click)=\"modalRef.hide()\"\n      mdbWavesEffect>Close</button>\n    <button type=\"button\" mdbBtn color=\"primary\" class=\"relative waves-light\" mdbWavesEffect (click)=\"onSave()\">Save!</button>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { Project } from '../../../projects/models/project.model';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProjectComponent implements OnInit {\n  @Input() project: Project;\n  @Input() editable = true;\n  @Output() deleted = new EventEmitter<Project>();\n  @Output() edited = new EventEmitter<Project>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onDelete() {\n    this.deleted.emit(this.project);\n  }\n\n  onEdit() {\n    this.edited.emit(this.project);\n  }\n\n}\n","<mdb-card>\n  <!--Card image-->\n  <mdb-card-img *ngIf=\"project.photoUrl\" src=\"{{ project.photoUrl }}\" alt=\"Card image cap\" class=\"waves-light\"\n    mdbWavesEffect></mdb-card-img>\n  <!-- <mdb-card-img *ngIf=\"!project.photoUrl\" src=\"https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(97).jpg\" alt=\"Card image cap\"></mdb-card-img> -->\n  <!--Card content-->\n  <mdb-card-body>\n\n    <!--Title-->\n    <mdb-card-title>\n      <h4>{{ project.title }}</h4>\n    </mdb-card-title>\n\n    <!--Text-->\n    <mdb-card-text> {{ project.description }}\n    </mdb-card-text>\n\n    <div class=\"text-left\">\n      <a *ngIf=\"editable\" mdbBtn color=\"primary\" mdbWavesEffect (click)=\"onEdit()\">Edit</a>\n      <a mdbBtn class=\"red lighten-1 white-text\" mdbWavesEffect (click)=\"onDelete()\">Delete</a>\n    </div>\n  </mdb-card-body>\n</mdb-card>","import { Component, OnInit, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Project } from '../../../projects/models/project.model';\n\n@Component({\n  selector: 'app-projects-list',\n  templateUrl: './projects-list.component.html',\n  styleUrls: ['./projects-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProjectsListComponent implements OnInit {\n  @Input() projects: Project[];\n  @Input() editable = true;\n  @Output() projectDeleted = new EventEmitter<Project>();\n  @Output() projectEdited = new EventEmitter<Project>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onProjectDelete(project: Project) {\n    this.projectDeleted.emit(project);\n  }\n\n  onProjectEdit(project: Project) {\n    this.projectEdited.emit(project);\n  }\n\n  trackByFunction(index: any) {\n    return index;\n  }\n\n}\n","<div class=\"projects-list d-flex flex-wrap fadeIn animated\">\n    <div class=\"project\" *ngFor=\"let project of projects; trackBy: trackByFunction\">\n      <app-project [project]=\"project\" [editable]=\"editable\" (deleted)=\"onProjectDelete($event)\" (edited)=\"onProjectEdit($event)\"></app-project>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport * as md5 from 'md5';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GravatarService {\n\n  constructor() { }\n\n  getUserGravatar(email: string) {\n    if (email) {\n      return `https://www.gravatar.com/avatar/${md5(email)}`;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmModalComponent } from './components/confirm-modal/confirm-modal.component';\nimport {\n  ButtonsModule,\n  InputsModule,\n  CardsModule,\n  InputUtilitiesModule,\n  IconsModule\n} from 'angular-bootstrap-md';\nimport { ProjectModalComponent } from './components/project-modal/project-modal.component';\nimport { FormsModule } from '@angular/forms';\nimport { ProjectComponent } from './components/project/project.component';\nimport { ProjectsListComponent } from './components/projects-list/projects-list.component';\n\n@NgModule({\n  declarations: [\n    ConfirmModalComponent,\n    ProjectModalComponent,\n    ProjectsListComponent,\n    ProjectComponent,\n  ],\n  imports: [\n    CommonModule,\n    InputsModule,\n    InputUtilitiesModule,\n    IconsModule,\n    FormsModule,\n    ButtonsModule,\n    CardsModule\n  ],\n  exports: [ProjectsListComponent, ProjectComponent],\n  providers: [],\n  entryComponents: [\n    ConfirmModalComponent,\n    ProjectModalComponent\n  ]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyAQVu7JXpG-u5LDYeltF8DyOpn-agZaJp8\",\n    authDomain: \"bloopky.firebaseapp.com\",\n    databaseURL: \"https://bloopky.firebaseio.com\",\n    projectId: \"bloopky\",\n    storageBucket: \"bloopky.appspot.com\",\n    messagingSenderId: \"849578959436\",\n    appId: \"1:849578959436:web:b8f8144560a29629d48ae9\",\n    measurementId: \"G-BX1MCQ199J\"\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":"webpack:///"}