{"version":3,"sources":["webpack:///src/app/projects/containers/projects.component.ts","webpack:///src/app/projects/containers/projects.component.html","webpack:///src/app/projects/projects-routing.module.ts","webpack:///src/app/projects/projects.module.ts","webpack:///src/app/projects/services/projects.service.ts","webpack:///src/app/projects/store/projects.actions.ts","webpack:///src/app/projects/store/projects.effects.ts","webpack:///src/app/projects/store/projects.reducer.ts","webpack:///src/app/projects/store/projects.selectors.ts","webpack:///src/app/projects/store/projects.state.ts"],"names":["ProjectsComponent","store","modalService","afAuth","modalConfig","isLoading$","select","projects$","pipe","projects","user","dispatch","modalRef","show","content","heading","projectData","subscribe","project","projectCopy","confirmation","openConfirmModal","openEditProjectModal","auth","currentUser","openAddProjectModal","onProjectDelete","onProjectEdit","selector","templateUrl","styleUrls","routes","path","component","ProjectsRoutingModule","forChild","imports","exports","ProjectsModule","forFeature","declarations","ProjectsService","db","url","firebase","databaseURL","userId","list","push","forEach","snapshotChanges","object","key","update","title","description","photoUrl","remove","uid","providedIn","ProjectsActionTypes","ProjectsQuery","type","PROJECTS_QUERY","ProjectsQueryAll","PROJECTS_QUERY_ALL","ProjectsLoaded","payload","PROJECTS_LOADED","ProjectAdded","PROJECT_ADDED","ProjectEdited","PROJECT_EDITED","ProjectDeleted","PROJECT_DELETED","ProjectsError","PROJECTS_ERROR","ProjectsEffects","actions$","projectsService","query$","get","data","projectsData","map","res","val","error","queryAll$","getAllProjects","userKey","userProjects","prop","Object","prototype","hasOwnProperty","call","added$","action","add","delete$","edit$","projectsReducer","state","assign","loading","getProjectsState","getProjects","getAllLoaded","getError","projectsInitialState"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUI;;AACE;;AACE;;AAAsB;;AAAU;;AAClC;;AACF;;;;QDISA,iB;AASX,iCAAoBC,KAApB,EAAoDC,YAApD,EAA2FC,MAA3F,EAAoH;AAAA;;AAAhG,aAAAF,KAAA,GAAAA,KAAA;AAAgC,aAAAC,YAAA,GAAAA,YAAA;AAAuC,aAAAC,MAAA,GAAAA,MAAA;AAJ3F,aAAAC,WAAA,GAAc;AACZ,mBAAO;AADK,SAAd;AAIuH;;;;mCAE5G;AAAA;;AACT,eAAKC,UAAL,GAAkB,KAAKJ,KAAL,CAAWK,MAAX,CAAkB,sEAAlB,CAAlB;AACA,eAAKC,SAAL,GAAiB,KAAKN,KAAL,CAAWO,IAAX,CACf,2DAAO,qEAAP,CADe,EAEf,2DAAK,UAACC,QAAD,EAAyB;AAC5B,gBAAI,KAAI,CAACC,IAAL,IAAa,CAACD,QAAlB,EAA4B;AAC1B,mBAAI,CAACR,KAAL,CAAWU,QAAX,CAAoB,IAAI,qEAAJ,EAApB;AACD;;AACD,mBAAOF,QAAP;AACD,WALD,CAFe,CAAjB;AASD;;;8CAMqB;AAAA;;AACpB,eAAKG,QAAL,GAAgB,KAAKV,YAAL,CAAkBW,IAAlB,CAAuB,8GAAvB,EAA8C,KAAKT,WAAnD,CAAhB;AAEA,eAAKQ,QAAL,CAAcE,OAAd,CAAsBC,OAAtB,GAAgC,iBAAhC;AAEA,eAAKH,QAAL,CAAcE,OAAd,CAAsBE,WAAtB,CAAkCR,IAAlC,CAAuC,4DAAK,CAAL,CAAvC,EAAgDS,SAAhD,CAA2D,UAACD,WAAD,EAA0B;AACnF,kBAAI,CAACf,KAAL,CAAWU,QAAX,CAAoB,IAAI,oEAAJ,CAA8B;AAAEO,qBAAO,EAAEF;AAAX,aAA9B,CAApB;AACD,WAFD;AAGD;;;6CAEoBE,O,EAAkB;AAAA;;AACrC,eAAKN,QAAL,GAAgB,KAAKV,YAAL,CAAkBW,IAAlB,CAAuB,8GAAvB,EAA8C,KAAKT,WAAnD,CAAhB;AAEA,eAAKQ,QAAL,CAAcE,OAAd,CAAsBC,OAAtB,GAAgC,cAAhC;AACA,cAAMI,WAAW,GAAG,MAAH,OAAG,CAAH,EAAG,EAAID,OAAJ,CAApB;AACA,eAAKN,QAAL,CAAcE,OAAd,CAAsBI,OAAtB,GAAgCC,WAAhC;AAEA,eAAKP,QAAL,CAAcE,OAAd,CAAsBE,WAAtB,CAAkCR,IAAlC,CAAuC,4DAAK,CAAL,CAAvC,EAAgDS,SAAhD,CAA2D,UAACD,WAAD,EAA0B;AACnF,kBAAI,CAACf,KAAL,CAAWU,QAAX,CAAoB,IAAI,qEAAJ,CAA+B;AAAEO,qBAAO,EAAEF;AAAX,aAA/B,CAApB;AACD,WAFD;AAGD;;;yCAEgBE,O,EAAkB;AAAA;;AACjC,eAAKN,QAAL,GAAgB,KAAKV,YAAL,CAAkBW,IAAlB,CAAuB,8GAAvB,EAA8C,KAAKT,WAAnD,CAAhB;AAEA,eAAKQ,QAAL,CAAcE,OAAd,CAAsBM,YAAtB,CAAmCZ,IAAnC,CAAwC,4DAAK,CAAL,CAAxC,EAAiDS,SAAjD,CAA4D,UAACG,YAAD,EAA2B;AACrF,gBAAIA,YAAJ,EAAkB;AAChB,oBAAI,CAACnB,KAAL,CAAWU,QAAX,CAAoB,IAAI,sEAAJ,CAAgC;AAAEO,uBAAO,EAAPA;AAAF,eAAhC,CAApB;AACD;AACF,WAJD;AAKD;;;wCAEeA,O,EAAkB;AAChC,eAAKG,gBAAL,CAAsBH,OAAtB;AACD;;;sCAEaA,O,EAAkB;AAC9B,eAAKI,oBAAL,CAA0BJ,OAA1B;AACD;;;4BA1CU;AACT,iBAAO,KAAKf,MAAL,CAAYoB,IAAZ,CAAiBC,WAAxB;AACD;;;;;;;uBA1BUxB,iB,EAAiB,kH,EAAA,qI,EAAA,mI;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,0hB;AAAA;AAAA;AClB9B;;AACE;;AAAI;;AAAa;;AACjB;;AAA0B;;AAAoB;;AAChD;;AAEA;;AACE;;AACI;;AAA4C;AAAA,mBAAS,IAAAyB,mBAAA,EAAT;AAA8B,WAA9B;;AAAgC;;AAAe;;AAC3F;;AAAkD;AAAA,mBAAkB,IAAAC,eAAA,QAAlB;AAAyC,WAAzC,EAA0C,eAA1C,EAA0C;AAAA,mBAAkB,IAAAC,aAAA,QAAlB;AAAuC,WAAjF;;;;AAAmF;;AAEvI;;;;AAKF;;AACF;;;;AARyB;;AAAA;;AAEhB;;AAAA;;;;;;;;;;sEDQI3B,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT4B,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AElB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,CAAvB;;QAUaC,qB;;;;;YAAAA;;;;yBAAAA,qB;AAAqB,O;AAAA,gBALvB,CACP,6DAAaC,QAAb,CAAsBJ,MAAtB,CADO,CAKuB,EAFtB,4DAEsB;;;;0HAArBG,qB,EAAqB;AAAA;AAAA,kBAFtB,4DAEsB;AAAA,O;AAFV,K;;;;;sEAEXA,qB,EAAqB;cANjC,sDAMiC;eANxB;AACRE,iBAAO,EAAE,CACP,6DAAaD,QAAb,CAAsBJ,MAAtB,CADO,CADD;AAIRM,iBAAO,EAAE,CAAC,4DAAD;AAJD,S;AAMwB,Q;;;;;;;;;;;;;;;;;;ACdlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiCaC,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAlBhB,CACP,4DADO,EAEP,gEAFO,EAGP,mEAHO,EAIP,+EAJO,EAKP,qEALO,EAMP,0DANO,EAOP,kEAPO,EAQP,iEARO,EASP,gEATO,EAUP,gEAVO,EAWP,gEAXO,EAYP,wDAAYC,UAAZ,CAAuB,UAAvB,EAAmC,uEAAnC,CAZO,EAaP,4DAAcA,UAAd,CAAyB,CAAC,uEAAD,CAAzB,CAbO,CAkBgB;;;;0HAAdD,c,EAAc;AAAA,uBAHV,gFAGU;AAHO,kBAd9B,4DAc8B,EAb9B,gEAa8B,EAZ9B,mEAY8B,EAX9B,+EAW8B,EAV9B,qEAU8B,EAT9B,0DAS8B,EAR9B,kEAQ8B,EAP9B,iEAO8B,EAN9B,gEAM8B,EAL9B,gEAK8B,EAJ9B,gEAI8B,EAJnB,8DAImB,EAJnB,kEAImB,CAGP;AAPZ,kBAKH,gFALG;AAOY,O;AAFE,K;;;;;sEAEhBA,c,EAAc;cAnB1B,sDAmB0B;eAnBjB;AACRF,iBAAO,EAAE,CACP,4DADO,EAEP,gEAFO,EAGP,mEAHO,EAIP,+EAJO,EAKP,qEALO,EAMP,0DANO,EAOP,kEAPO,EAQP,iEARO,EASP,gEATO,EAUP,gEAVO,EAWP,gEAXO,EAYP,wDAAYG,UAAZ,CAAuB,UAAvB,EAAmC,uEAAnC,CAZO,EAaP,4DAAcA,UAAd,CAAyB,CAAC,uEAAD,CAAzB,CAbO,CADD;AAgBRC,sBAAY,EAAE,CAAC,gFAAD,CAhBN;AAiBRH,iBAAO,EAAE,CAAC,gFAAD;AAjBD,S;AAmBiB,Q;;;;;;;;;;;;;;;;;;ACjC3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaI,e;AAGX,+BAAoBC,EAApB,EAAqDvC,MAArD,EAA8E;AAAA;;AAA1D,aAAAuC,EAAA,GAAAA,EAAA;AAAiC,aAAAvC,MAAA,GAAAA,MAAA;AAFrD,aAAAwC,GAAA,GAAM,sEAAYC,QAAZ,CAAqBC,WAA3B;AAEiF;;;;4BAQ7E3B,O,EAAkB4B,M,EAAgB;AACpC,cAAMrC,QAAQ,GAAG,KAAKiC,EAAL,CAAQK,IAAR,oBAAyBD,MAAzB,EAAjB;AACA,iBAAOrC,QAAQ,CAACuC,IAAT,CAAc9B,OAAd,CAAP;AACD;;;oCAEWT,Q,EAAqB;AAAA;;AAC/B,cAAMqC,MAAM,GAAG,KAAKA,MAApB;AACArC,kBAAQ,CAACwC,OAAT,CAAkB,UAAC/B,OAAD,EAAsB;AACtC,kBAAI,CAACwB,EAAL,CAAQK,IAAR,oBAAyBD,MAAzB,GAAmCE,IAAnC,CAAwC9B,OAAxC;AACD,WAFD;AAGD;;;4BAEG4B,M,EAAgB;AAClB,iBAAO,KAAKJ,EAAL,CAAQK,IAAR,oBAAyBD,MAAzB,GAAmCI,eAAnC,EAAP;AACD;;;+BAEMhC,O,EAAkB4B,M,EAAgB;AACvC,iBAAO,gDAAG,KAAKJ,EAAL,CAAQS,MAAR,CAAe,mBAAYL,MAAZ,SAAwB5B,OAAO,CAACkC,GAA/C,EACPC,MADO,CACA;AACNC,iBAAK,EAAEpC,OAAO,CAACoC,KADT;AAENC,uBAAW,EAAErC,OAAO,CAACqC,WAFf;AAGNC,oBAAQ,EAAEtC,OAAO,CAACsC;AAHZ,WADA,CAAH,CAAP;AAMD;;;gCAEMtC,O,EAAkB4B,M,EAAgB;AACvC,iBAAO,KAAKJ,EAAL,CAAQS,MAAR,CAAe,mBAAYL,MAAZ,SAAwB5B,OAAO,CAACkC,GAA/C,EAAoDK,MAApD,EAAP;AACD;;;yCAEgB;AACf,iBAAO,KAAKf,EAAL,CAAQK,IAAR,CAAa,UAAb,EAAyBG,eAAzB,EAAP;AACD;;;4BArCY;AACX,cAAI,KAAK/C,MAAL,CAAYoB,IAAZ,CAAiBC,WAArB,EAAkC;AAChC,mBAAO,KAAKrB,MAAL,CAAYoB,IAAZ,CAAiBC,WAAjB,CAA6BkC,GAApC;AACD;AACF;;;;;;;uBATUjB,e,EAAe,kI,EAAA,0H;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVkB,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAYC,mBAAZ;;AAAA,eAAYA,mBAAZ,EAA+B;AAC7B;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACD,KAXD,EAAYA,mBAAmB,KAAnBA,mBAAmB,MAA/B;;QAaaC,a,GAAb;AAAA;;AACW,WAAAC,IAAA,GAAOF,mBAAmB,CAACG,cAA3B;AACV,K;;QAEYC,gB,GAAb;AAAA;;AACW,WAAAF,IAAA,GAAOF,mBAAmB,CAACK,kBAA3B;AACV,K;;QAEYC,c,GAGX,wBAAmBC,OAAnB,EAAqD;AAAA;;AAAlC,WAAAA,OAAA,GAAAA,OAAA;AAFV,WAAAL,IAAA,GAAOF,mBAAmB,CAACQ,eAA3B;AAE8C,K;;QAG5CC,Y,GAGX,sBAAmBF,OAAnB,EAAiD;AAAA;;AAA9B,WAAAA,OAAA,GAAAA,OAAA;AAFV,WAAAL,IAAA,GAAOF,mBAAmB,CAACU,aAA3B;AAE0C,K;;QAGxCC,a,GAGX,uBAAmBJ,OAAnB,EAAkD;AAAA;;AAA/B,WAAAA,OAAA,GAAAA,OAAA;AAFV,WAAAL,IAAA,GAAOF,mBAAmB,CAACY,cAA3B;AAE2C,K;;QAGzCC,c,GAGX,wBAAmBN,OAAnB,EAAkD;AAAA;;AAA/B,WAAAA,OAAA,GAAAA,OAAA;AAFV,WAAAL,IAAA,GAAOF,mBAAmB,CAACc,eAA3B;AAE2C,K;;QAGzCC,a,GAGX,uBAAmBR,OAAnB,EAA4C;AAAA;;AAAzB,WAAAA,OAAA,GAAAA,OAAA;AAFV,WAAAL,IAAA,GAAOF,mBAAmB,CAACgB,cAA3B;AAEqC,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCrCnCC,e,GAEX,yBACUC,QADV,EAEUC,eAFV,EAGU9E,KAHV,EAGkC;AAAA;;AAAA;;AAFxB,WAAA6E,QAAA,GAAAA,QAAA;AACA,WAAAC,eAAA,GAAAA,eAAA;AACA,WAAA9E,KAAA,GAAAA,KAAA;AAGV,WAAA+E,MAAA,GAAS,KAAKF,QAAL,CAActE,IAAd,CACP,6DAAO,sEAAoBuD,cAA3B,CADO,EAEP,sEAAe,KAAK9D,KAAL,CAAWO,IAAX,CAAgB,2DAAO,kEAAP,CAAhB,CAAf,CAFO,EAGP,iEAAU,gBAAmB;AAAA;AAAA,YAAfE,IAAe;;AAC3B,eAAO,MAAI,CAACqE,eAAL,CAAqBE,GAArB,CAAyBvE,IAAI,CAACgD,GAA9B,EACNlD,IADM,CAEL,2DAAI,UAAC0E,IAAD,EAAe;AACjB,cAAMC,YAAY,GAAcD,IAAI,CAACE,GAAL,CAAS,UAACC,GAAD,EAAc;AACrD,gBAAMjC,GAAG,GAAGiC,GAAG,CAAClB,OAAJ,CAAYf,GAAxB;AACA,gBAAMlC,OAAO,GAAYmE,GAAG,CAAClB,OAAJ,CAAYmB,GAAZ,EAAzB;AACA,mBAAO;AACLlC,iBAAG,EAAEA,GAAG,IAAI,IADP;AAELE,mBAAK,EAAEpC,OAAO,CAACoC,KAAR,IAAiB,IAFnB;AAGLC,yBAAW,EAAErC,OAAO,CAACqC,WAAR,IAAuB,IAH/B;AAILC,sBAAQ,EAAEtC,OAAO,CAACsC,QAAR,IAAoB;AAJzB,aAAP;AAMD,WAT+B,CAAhC;AAUA,iBAAQ,IAAI,gEAAJ,CAAgC;AAAE/C,oBAAQ,EAAE0E;AAAZ,WAAhC,CAAR;AACD,SAZD,CAFK,EAeL,kEAAW,UAAAI,KAAK;AAAA,iBAAI,gDAAG,IAAI,+DAAJ,CAA+B;AAAEA,iBAAK,EAALA;AAAF,WAA/B,CAAH,CAAJ;AAAA,SAAhB,CAfK,CAAP;AAiBD,OAlBD,CAHO,CAAT;AAyBA,WAAAC,SAAA,GAAY,KAAKV,QAAL,CAActE,IAAd,CACV,6DAAO,sEAAoByD,kBAA3B,CADU,EAEV,iEAAU,iBAAa;AAAA;;AACrB,eAAO,MAAI,CAACc,eAAL,CAAqBU,cAArB,GACNjF,IADM,CAEL,2DAAI,UAAC0E,IAAD,EAAe;AACjB,cAAMC,YAAY,GAAc,EAAhC;AACAD,cAAI,CAACE,GAAL,CAAS,UAACC,GAAD,EAAc;AACrB,gBAAMK,OAAO,GAAGL,GAAG,CAAClB,OAAJ,CAAYf,GAA5B;AACA,gBAAMuC,YAAY,GAAGN,GAAG,CAAClB,OAAJ,CAAYmB,GAAZ,EAArB;;AACA,iBAAK,IAAIM,IAAT,IAAiBD,YAAjB,EAA+B;AAC7B,kBAAIE,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,YAArC,EAAmDC,IAAnD,CAAJ,EAA8D;AAC1DT,4BAAY,CAACnC,IAAb,CAAkB;AAChBI,qBAAG,EAAEwC,IAAI,IAAIF,OAAR,IAAmB,IADR;AAEhBpC,uBAAK,EAAEqC,YAAY,CAACC,IAAD,CAAZ,CAAmBtC,KAAnB,IAA4B,IAFnB;AAGhBC,6BAAW,EAAEoC,YAAY,CAACC,IAAD,CAAZ,CAAmBrC,WAAnB,IAAkC,IAH/B;AAIhBC,0BAAQ,EAAEmC,YAAY,CAACC,IAAD,CAAZ,CAAmBpC,QAAnB,IAA+B;AAJzB,iBAAlB;AAMH;AACF;AACF,WAbD;AAcA,iBAAQ,IAAI,gEAAJ,CAAgC;AAAE/C,oBAAQ,EAAE0E;AAAZ,WAAhC,CAAR;AACD,SAjBD,CAFK,EAoBL,kEAAW,UAAAI,KAAK;AAAA,iBAAI,gDAAG,IAAI,+DAAJ,CAA+B;AAAEA,iBAAK,EAALA;AAAF,WAA/B,CAAH,CAAJ;AAAA,SAAhB,CApBK,CAAP;AAsBD,OAvBD,CAFU,CAAZ;AA6BA,WAAAU,MAAA,GAAS,KAAKnB,QAAL,CAActE,IAAd,CACP,6DAAO,sEAAoB8D,aAA3B,CADO,EAEP,2DAAI,UAAC4B,MAAD;AAAA,eAAyCA,MAAM,CAAC/B,OAAhD;AAAA,OAAJ,CAFO,EAGP,sEAAe,KAAKlE,KAAL,CAAWO,IAAX,CAAgB,2DAAO,kEAAP,CAAhB,CAAf,CAHO,EAIP,iEAAU;AAAA;AAAA,YAAE2D,OAAF;AAAA,YAAWzD,IAAX;;AAAA,eAA0B,MAAI,CAACqE,eAAL,CAAqBoB,GAArB,CAAyBhC,OAAO,CAACjD,OAAjC,EAA0CR,IAAI,CAACgD,GAA/C,CAA1B;AAAA,OAAV,CAJO,CAAT;AAQA,WAAA0C,OAAA,GAAU,KAAKtB,QAAL,CAActE,IAAd,CACR,6DAAO,sEAAoBkE,eAA3B,CADQ,EAER,2DAAI,UAACwB,MAAD;AAAA,eAAyCA,MAAM,CAAC/B,OAAhD;AAAA,OAAJ,CAFQ,EAGR,sEAAe,KAAKlE,KAAL,CAAWO,IAAX,CAAgB,2DAAO,kEAAP,CAAhB,CAAf,CAHQ,EAIR,iEAAU;AAAA;AAAA,YAAE2D,OAAF;AAAA,YAAWzD,IAAX;;AAAA,eAA0B,MAAI,CAACqE,eAAL,WAA4BZ,OAAO,CAACjD,OAApC,EAA6CR,IAAI,CAACgD,GAAlD,CAA1B;AAAA,OAAV,CAJQ,CAAV;AAQA,WAAA2C,KAAA,GAAQ,KAAKvB,QAAL,CAActE,IAAd,CACN,6DAAO,sEAAoBgE,cAA3B,CADM,EAEN,2DAAI,UAAC0B,MAAD;AAAA,eAAwCA,MAAM,CAAC/B,OAA/C;AAAA,OAAJ,CAFM,EAGN,sEAAe,KAAKlE,KAAL,CAAWO,IAAX,CAAgB,2DAAO,kEAAP,CAAhB,CAAf,CAHM,EAIN,iEAAU;AAAA;AAAA,YAAE2D,OAAF;AAAA,YAAWzD,IAAX;;AAAA,eAA0B,MAAI,CAACqE,eAAL,CAAqB1B,MAArB,CAA4Bc,OAAO,CAACjD,OAApC,EAA6CR,IAAI,CAACgD,GAAlD,CAA1B;AAAA,OAAV,CAJM,CAAR;AAzEoC,K;;;uBALzBmB,e,EAAe,6G,EAAA,kI,EAAA,yG;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;;AAQ1B,gBADC,8DACD,E,iCAAA,G,yBAAA,E,QAAA,E,MAAA;;AAyBA,gBADC,8DACD,E,iCAAA,G,yBAAA,E,WAAA,E,MAAA;;AA6BA,gBADC,6DAAO;AAAElE,cAAQ,EAAE;AAAZ,KAAP,CACD,E,iCAAA,G,yBAAA,E,QAAA,E,MAAA;;AAQA,gBADC,6DAAO;AAAEA,cAAQ,EAAE;AAAZ,KAAP,CACD,E,iCAAA,G,yBAAA,E,SAAA,E,MAAA;;AAQA,gBADC,6DAAO;AAAEA,cAAQ,EAAE;AAAZ,KAAP,CACD,E,iCAAA,G,yBAAA,E,OAAA,E,MAAA;;;;;sEA9EWkE,e,EAAe;cAD3B;AAC2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACd5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,aAASyB,eAAT,GAA8E;AAAA,UAArDC,KAAqD,uEAA7C,oEAA6C;AAAA,UAAvBL,MAAuB;;AACnF,cAAQA,MAAM,CAACpC,IAAf;AAEE,aAAK,sEAAoBG,kBAAzB;AAA6C;AAC3C,mBAAO4B,MAAM,CAACW,MAAP,CAAc,EAAd,EAAkBD,KAAlB,EAAyB;AAC9BE,qBAAO,EAAE;AADqB,aAAzB,CAAP;AAGD;;AAED,aAAK,sEAAoB1C,cAAzB;AAAyC;AACvC,mBAAO8B,MAAM,CAACW,MAAP,CAAc,EAAd,EAAkBD,KAAlB,EAAyB;AAC9BE,qBAAO,EAAE;AADqB,aAAzB,CAAP;AAGD;;AAED,aAAK,sEAAoBrC,eAAzB;AAA0C;AACxC,mBAAOyB,MAAM,CAACW,MAAP,CAAc,EAAd,EAAkBD,KAAlB,EAAyB;AAC9B9F,sBAAQ,EAAEyF,MAAM,CAAC/B,OAAP,CAAe1D,QADK;AAE9BgG,qBAAO,EAAE;AAFqB,aAAzB,CAAP;AAID;;AAED,aAAK,sEAAoB7B,cAAzB;AAAyC;AACvC,mBAAOiB,MAAM,CAACW,MAAP,CAAc,EAAd,EAAkBD,KAAlB,EAAyB;AAC9BE,qBAAO,EAAE,KADqB;AAE9BlB,mBAAK,EAAEW,MAAM,CAAC/B,OAAP,CAAeoB;AAFQ,aAAzB,CAAP;AAID;;AAED;AACE,iBAAOgB,KAAP;AA7BJ;AA+BD;;;;;;;;;;;;;;;;;ACpCD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,QAAMG,gBAAgB,GAAG,0EAAqC,UAArC,CAAzB;AAEA,QAAMC,WAAW,GAAG,mEACzBD,gBADyB,EAEzB,UAAAjG,QAAQ;AAAA,aAAIA,QAAQ,CAACA,QAAb;AAAA,KAFiB,CAApB;AAKA,QAAMmG,YAAY,GAAG,mEAC1BF,gBAD0B,EAE1B,UAAAjG,QAAQ;AAAA,aAAIA,QAAQ,CAACgG,OAAb;AAAA,KAFkB,CAArB;AAKA,QAAMI,QAAQ,GAAG,mEACtBH,gBADsB,EAEtB,UAAAjG,QAAQ;AAAA,aAAIA,QAAQ,CAAC8E,KAAb;AAAA,KAFc,CAAjB;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMuB,oBAAoB,GAAkB;AACjDrG,cAAQ,EAAE,IADuC;AAEjDgG,aAAO,EAAE,KAFwC;AAGjDlB,WAAK,EAAE;AAH0C,KAA5C","file":"projects-projects-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MDBModalService, MDBModalRef } from 'angular-bootstrap-md';\nimport { Project } from '../models/project.model';\nimport { AppState } from '../../reducers/index';\nimport { Store, select } from '@ngrx/store';\nimport * as fromProjects from './../store/projects.actions';\nimport { Observable } from 'rxjs';\nimport { getProjects, getAllLoaded } from '../store/projects.selectors';\nimport { take, map } from 'rxjs/operators';\nimport { ConfirmModalComponent } from '../../shared/components/confirm-modal/confirm-modal.component';\nimport { ProjectModalComponent } from '../../shared/components/project-modal/project-modal.component';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  projects$: Observable<Project[] | null>;\n  isLoading$: Observable<boolean>;\n  modalRef: MDBModalRef;\n\n  modalConfig = {\n    class: 'modal-dialog-centered'\n  };\n\n  constructor(private store: Store<AppState>, private modalService: MDBModalService, private afAuth: AngularFireAuth) { }\n\n  ngOnInit() {\n    this.isLoading$ = this.store.select(getAllLoaded);\n    this.projects$ = this.store.pipe(\n      select(getProjects),\n      map( (projects: Project[]) => {\n        if (this.user && !projects) {\n          this.store.dispatch(new fromProjects.ProjectsQuery());\n        }\n        return projects;\n      })\n    );\n  }\n\n  get user() {\n    return this.afAuth.auth.currentUser;\n  }\n\n  openAddProjectModal() {\n    this.modalRef = this.modalService.show(ProjectModalComponent, this.modalConfig);\n\n    this.modalRef.content.heading = 'Add new project';\n\n    this.modalRef.content.projectData.pipe(take(1)).subscribe( (projectData: Project) => {\n      this.store.dispatch(new fromProjects.ProjectAdded({ project: projectData }));\n    });\n  }\n\n  openEditProjectModal(project: Project) {\n    this.modalRef = this.modalService.show(ProjectModalComponent, this.modalConfig);\n\n    this.modalRef.content.heading = 'Edit project';\n    const projectCopy = {...project };\n    this.modalRef.content.project = projectCopy;\n\n    this.modalRef.content.projectData.pipe(take(1)).subscribe( (projectData: Project) => {\n      this.store.dispatch(new fromProjects.ProjectEdited({ project: projectData }));\n    });\n  }\n\n  openConfirmModal(project: Project) {\n    this.modalRef = this.modalService.show(ConfirmModalComponent, this.modalConfig);\n\n    this.modalRef.content.confirmation.pipe(take(1)).subscribe( (confirmation: boolean) => {\n      if (confirmation) {\n        this.store.dispatch(new fromProjects.ProjectDeleted({ project }));\n      }\n    });\n  }\n\n  onProjectDelete(project: Project) {\n    this.openConfirmModal(project);\n  }\n\n  onProjectEdit(project: Project) {\n    this.openEditProjectModal(project);\n  }\n\n}\n","<div class=\"white px-4 section-header\">\n  <h3>Projects list</h3>\n  <p class=\"grey-text pt-3\">Manage your services</p>\n</div>\n\n<div class=\"container-fluid pb-5\">\n  <div class=\"py-5\">\n      <button mdbBtn color=\"primary\" class=\"ml-3\" (click)=\"openAddProjectModal()\">Add new project</button>\n      <app-projects-list [projects]=\"projects$ | async\" (projectDeleted)=\"onProjectDelete($event)\" (projectEdited)=\"onProjectEdit($event)\"></app-projects-list>\n\n    <div *ngIf=\"isLoading$ | async\" class=\"d-flex justify-content-center align-items-center\" style=\"margin-top: 200px\">\n      <div class=\"spinner-grow text-primary\" role=\"status\" style=\"width: 4rem; height: 4rem;\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectsComponent } from './containers/projects.component';\n\nconst routes: Routes = [\n  { path: '', component: ProjectsComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class ProjectsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProjectsComponent } from './containers/projects.component';\nimport { StoreModule } from '@ngrx/store';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonsModule, InputsModule, CardsModule, WavesModule, IconsModule, ModalModule } from 'angular-bootstrap-md';\n\nimport * as fromProjects from './store/projects.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ProjectsEffects } from './store/projects.effects';\nimport { FormsModule } from '@angular/forms';\nimport { ProjectsRoutingModule } from './projects-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ModalModule,\n    SharedModule,\n    ProjectsRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ButtonsModule,\n    InputsModule,\n    WavesModule,\n    IconsModule,\n    CardsModule,\n    StoreModule.forFeature('projects', fromProjects.projectsReducer),\n    EffectsModule.forFeature([ProjectsEffects])\n  ],\n  declarations: [ProjectsComponent],\n  exports: [ProjectsComponent],\n})\nexport class ProjectsModule { }\n","import { Injectable } from '@angular/core';\nimport { Project } from '../models/project.model';\nimport { environment } from '../../../environments/environment';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { of } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  url = environment.firebase.databaseURL;\n\n  constructor(private db: AngularFireDatabase, private afAuth: AngularFireAuth) { }\n\n  get userId() {\n    if (this.afAuth.auth.currentUser) {\n      return this.afAuth.auth.currentUser.uid;\n    }\n  }\n\n  add(project: Project, userId: string) {\n    const projects = this.db.list(`projects/${userId}`);\n    return projects.push(project);\n  }\n\n  addProjects(projects: Project[]) {\n    const userId = this.userId;\n    projects.forEach( (project: Project) => {\n      this.db.list(`projects/${userId}`).push(project);\n    });\n  }\n\n  get(userId: string) {\n    return this.db.list(`projects/${userId}`).snapshotChanges();\n  }\n\n  update(project: Project, userId: string) {\n    return of(this.db.object(`projects/${userId}/` + project.key)\n      .update({\n        title: project.title,\n        description: project.description,\n        photoUrl: project.photoUrl\n      }));\n  }\n\n  delete(project: Project, userId: string) {\n    return this.db.object(`projects/${userId}/` + project.key).remove();\n  }\n\n  getAllProjects() {\n    return this.db.list('projects').snapshotChanges();\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Project } from '../models/project.model';\n\nexport enum ProjectsActionTypes {\n  PROJECTS_QUERY = '[Projects] Projects query',\n  PROJECTS_QUERY_ALL = '[Projects] Projects query all',\n  PROJECTS_LOADED = '[Projects] Projects loaded',\n\n  PROJECT_ADDED = '[Projects] Project added',\n\n  PROJECT_EDITED = '[Projects] Project edited',\n  PROJECT_DELETED = '[Projects] Project deleted',\n\n  PROJECTS_ERROR = '[Projects] Projects error'\n}\n\nexport class ProjectsQuery implements Action {\n  readonly type = ProjectsActionTypes.PROJECTS_QUERY;\n}\n\nexport class ProjectsQueryAll implements Action {\n  readonly type = ProjectsActionTypes.PROJECTS_QUERY_ALL;\n}\n\nexport class ProjectsLoaded implements Action {\n  readonly type = ProjectsActionTypes.PROJECTS_LOADED;\n\n  constructor(public payload: { projects: Project[] }) {}\n}\n\nexport class ProjectAdded implements Action {\n  readonly type = ProjectsActionTypes.PROJECT_ADDED;\n\n  constructor(public payload: { project: Project}) {}\n}\n\nexport class ProjectEdited implements Action {\n  readonly type = ProjectsActionTypes.PROJECT_EDITED;\n\n  constructor(public payload: { project: Project }) {}\n}\n\nexport class ProjectDeleted implements Action {\n  readonly type = ProjectsActionTypes.PROJECT_DELETED;\n\n  constructor(public payload: { project: Project }) {}\n}\n\nexport class ProjectsError implements Action {\n  readonly type = ProjectsActionTypes.PROJECTS_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type ProjectsActions =\n  | ProjectsQuery\n  | ProjectsQueryAll\n  | ProjectsLoaded\n  | ProjectAdded\n  | ProjectEdited\n  | ProjectDeleted\n  | ProjectsError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { ProjectsActionTypes } from './projects.actions';\nimport { Store, select } from '@ngrx/store';\nimport { map, switchMap, catchError, withLatestFrom } from 'rxjs/operators';\nimport { Project } from '../models/project.model';\nimport { of } from 'rxjs';\nimport { ProjectsService } from '../services/projects.service';\n\nimport * as fromProjects from './../store/projects.actions';\nimport { AppState } from '../../reducers/index';\nimport { getUser } from '../../auth/store/auth.selectors';\n\n@Injectable()\nexport class ProjectsEffects {\n\n  constructor(\n    private actions$: Actions,\n    private projectsService: ProjectsService,\n    private store: Store<AppState>) {}\n\n  @Effect()\n  query$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECTS_QUERY),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([, user]: any) => {\n      return this.projectsService.get(user.uid)\n      .pipe(\n        map((data: any) => {\n          const projectsData: Project[] = data.map((res: any) => {\n            const key = res.payload.key;\n            const project: Project = res.payload.val();\n            return {\n              key: key || null,\n              title: project.title || null,\n              description: project.description || null,\n              photoUrl: project.photoUrl || null\n            };\n          });\n          return (new fromProjects.ProjectsLoaded({ projects: projectsData }));\n        }),\n        catchError(error => of(new fromProjects.ProjectsError({ error })))\n      );\n    }),\n  );\n\n  @Effect()\n  queryAll$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECTS_QUERY_ALL),\n    switchMap(([]: any) => {\n      return this.projectsService.getAllProjects()\n      .pipe(\n        map((data: any) => {\n          const projectsData: Project[] = [];\n          data.map((res: any) => {\n            const userKey = res.payload.key;\n            const userProjects = res.payload.val();\n            for (var prop in userProjects) {\n              if (Object.prototype.hasOwnProperty.call(userProjects, prop)) {\n                  projectsData.push({\n                    key: prop || userKey || null,\n                    title: userProjects[prop].title || null,\n                    description: userProjects[prop].description || null,\n                    photoUrl: userProjects[prop].photoUrl || null\n                  })\n              }\n            }\n          });\n          return (new fromProjects.ProjectsLoaded({ projects: projectsData }));\n        }),\n        catchError(error => of(new fromProjects.ProjectsError({ error })))\n      );\n    }),\n  );\n\n  @Effect({ dispatch: false })\n  added$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECT_ADDED),\n    map((action: fromProjects.ProjectDeleted) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.projectsService.add(payload.project, user.uid))\n  );\n\n  @Effect({ dispatch: false })\n  delete$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECT_DELETED),\n    map((action: fromProjects.ProjectDeleted) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.projectsService.delete(payload.project, user.uid))\n  );\n\n  @Effect({ dispatch: false })\n  edit$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECT_EDITED),\n    map((action: fromProjects.ProjectEdited) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.projectsService.update(payload.project, user.uid)\n    )\n  );\n\n}\n","import { ProjectsActions, ProjectsActionTypes } from './projects.actions';\nimport { projectsInitialState, ProjectsState } from './projects.state';\n\n\nexport function projectsReducer(state = projectsInitialState, action: ProjectsActions): ProjectsState {\n  switch (action.type) {\n\n    case ProjectsActionTypes.PROJECTS_QUERY_ALL: {\n      return Object.assign({}, state, {\n        loading: true,\n      });\n    }\n\n    case ProjectsActionTypes.PROJECTS_QUERY: {\n      return Object.assign({}, state, {\n        loading: true,\n      });\n    }\n\n    case ProjectsActionTypes.PROJECTS_LOADED: {\n      return Object.assign({}, state, {\n        projects: action.payload.projects,\n        loading: false,\n      });\n    }\n\n    case ProjectsActionTypes.PROJECTS_ERROR: {\n      return Object.assign({}, state, {\n        loading: false,\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\n// import { AppState } from '../../reducers/index';\nimport { ProjectsState } from './projects.state';\n\nexport const getProjectsState = createFeatureSelector<ProjectsState>('projects');\n\nexport const getProjects = createSelector(\n  getProjectsState,\n  projects => projects.projects\n);\n\nexport const getAllLoaded = createSelector(\n  getProjectsState,\n  projects => projects.loading\n);\n\nexport const getError = createSelector(\n  getProjectsState,\n  projects => projects.error\n);\n","import { Project } from '../models/project.model';\n\nexport interface ProjectsState {\n  projects: Project[] | null;\n  loading: boolean;\n  error: any;\n}\n\nexport const projectsInitialState: ProjectsState = {\n  projects: null,\n  loading: false,\n  error: null\n};\n"]}