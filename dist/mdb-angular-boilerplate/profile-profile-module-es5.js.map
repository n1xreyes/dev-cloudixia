{"version":3,"sources":["webpack:///src/app/profile/components/main-profile/main-profile.component.ts","webpack:///src/app/profile/components/main-profile/main-profile.component.html","webpack:///src/app/profile/components/profile-user/profile-user.component.ts","webpack:///src/app/profile/components/profile-user/profile-user.component.html","webpack:///src/app/profile/containers/profile.component.ts","webpack:///src/app/profile/containers/profile.component.html","webpack:///src/app/profile/profile-routing.module.ts","webpack:///src/app/profile/profile.module.ts"],"names":["MainProfileComponent","profileUpdate","updateProfileForm","displayName","user","photoUrl","phoneNumber","country","province","city","street","emit","value","onProfileUpdate","selector","templateUrl","styleUrls","changeDetection","OnPush","ProfileUserComponent","logout","onLogout","ProfileComponent","store","user$","select","userData","dispatch","logoutUser","updateProfile","routes","path","component","ProfileRoutingModule","forChild","imports","exports","ProfileModule","declarations"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { User } from '../../../auth/models/user.model';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-main-profile',\n  templateUrl: './main-profile.component.html',\n  styleUrls: ['./main-profile.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainProfileComponent implements OnInit {\n  @Input() user: User;\n  @Output() profileUpdate = new EventEmitter<any>();\n\n  updateProfileForm: FormGroup;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.updateProfileForm = new FormGroup({\n      displayName: new FormControl(this.user.displayName),\n      photoUrl: new FormControl(this.user.photoUrl),\n      phoneNumber: new FormControl(this.user.phoneNumber),\n      country: new FormControl(this.user.country),\n      province: new FormControl(this.user.province),\n      city: new FormControl(this.user.city),\n      street: new FormControl(this.user.street),\n    });\n  }\n\n  onProfileUpdate() {\n    this.profileUpdate.emit({ user: this.updateProfileForm.value });\n  }\n\n}\n","<mdb-card>\n  <mdb-card-body>\n    <h3 class=\"h2-responsive mb-4\">\n      <strong>Edit profile</strong>\n    </h3>\n\n    <!--Body-->\n    <form [formGroup]=\"updateProfileForm\">\n      <h5 class=\"h5-responsive\">Display name</h5>\n      <div class=\"md-form\">\n        <i class=\"fa fa-user prefix\"></i>\n        <input type=\"text\" id=\"form1\" class=\"form-control\" mdbInput formControlName=\"displayName\" />\n        <label for=\"form1\">Display name</label>\n      </div>\n\n      <h5 class=\"h5-responsive\">Photo Url</h5>\n      <div class=\"md-form\">\n        <i class=\"fa fa-user prefix\"></i>\n        <input type=\"text\" id=\"form2\" class=\"form-control\" mdbInput formControlName=\"photoUrl\" />\n        <label for=\"form2\">Photo Url</label>\n      </div>\n\n      <h5 class=\"h5-responsive\">Phone Number</h5>\n      <div class=\"md-form\">\n        <i class=\"fa fa-user prefix\"></i>\n        <input type=\"text\" id=\"form2\" class=\"form-control\" mdbInput formControlName=\"phoneNumber\" />\n        <label for=\"form2\">Phone Number</label>\n      </div>\n\n      <h5 class=\"h5-responsive\">Address</h5>\n      <div class=\"md-form\">\n        <i class=\"fa fa-user prefix\"></i>\n        <input type=\"text\" id=\"form2\" class=\"form-control\" mdbInput formControlName=\"country\" />\n        <label for=\"form2\">Country</label>\n      </div>\n      <div class=\"md-form\">\n        <i class=\"fa fa-user prefix\"></i>\n        <input type=\"text\" id=\"form2\" class=\"form-control\" mdbInput formControlName=\"province\" />\n        <label for=\"form2\">Province</label>\n      </div>\n      <div class=\"md-form\">\n        <i class=\"fa fa-user prefix\"></i>\n        <input type=\"text\" id=\"form2\" class=\"form-control\" mdbInput formControlName=\"city\" />\n        <label for=\"form2\">City</label>\n      </div>\n      <div class=\"md-form\">\n        <i class=\"fa fa-user prefix\"></i>\n        <input type=\"text\" id=\"form2\" class=\"form-control\" mdbInput formControlName=\"street\" />\n        <label for=\"form2\">Street Number and Address</label>\n      </div>\n\n      <div class=\"text-right\">\n        <button type=\"button\" mdbBtn color=\"primary\" (click)=\"onProfileUpdate()\">Update profile</button>\n      </div>\n    </form>\n  </mdb-card-body>\n</mdb-card>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { User } from '../../../auth/models/user.model';\n\n@Component({\n  selector: 'app-profile-user',\n  templateUrl: './profile-user.component.html',\n  styleUrls: ['./profile-user.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProfileUserComponent implements OnInit {\n  @Input() user: User;\n  @Output() logout = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onLogout() {\n    this.logout.emit(this.user);\n  }\n\n}\n","<mdb-card>\n  <mdb-card-body>\n    <div class=\"text-center\">\n      <div class=\"avatar\" style=\"margin-top: -60px\">\n          <img *ngIf=\"user.photoUrl\" src=\"{{ user.photoUrl }}\" height=\"96\" width=\"96\" class=\"rounded-circle z-depth-0\" alt=\"avatar image\">\n      </div>\n\n      <h3 *ngIf=\"user.displayName\" class=\"mt-4\">{{ user.displayName }}</h3>\n      <h3 *ngIf=\"!user.displayName\" class=\"mt-4\">Anonymous user</h3>\n\n      <a mdbBtn class=\"mt-3\" color=\"primary\" (click)=\"onLogout()\">\n        <i class=\"fa fa-sign-out\"></i>\n        Logout\n      </a>\n    </div>\n  </mdb-card-body>\n</mdb-card>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../../auth/models/user.model';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../reducers/index';\nimport { getUser } from '../../auth/store/auth.selectors';\nimport * as fromAuth from './../../auth/store/auth.actions';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  user$: Observable<User | null>;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.user$ = this.store.select(getUser);\n  }\n\n  updateProfile(userData: any) {\n    this.store.dispatch(new fromAuth.UpdateProfile(userData));\n  }\n\n  logoutUser(user: User) {\n    this.store.dispatch(new fromAuth.LogoutRequested({ user }));\n  }\n\n}\n","<div class=\"white px-4 section-header\">\n  <h3>Profile</h3>\n  <p class=\"grey-text pt-3\">Change your personal information</p>\n</div>\n\n<div class=\"container py-5\">\n  <div class=\"row mx-auto py-5\">\n    <div class=\"col-md-4 mt-3\">\n      <app-profile-user [user]=\"user$ | async\" (logout)=\"logoutUser($event)\"></app-profile-user>\n    </div>\n    <div class=\"col-md-8 mt-3\">\n        <app-main-profile [user]=\"user$ | async\" (profileUpdate)=\"updateProfile($event)\"></app-main-profile>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './containers/profile.component';\n\nconst routes: Routes = [\n  { path: '', component: ProfileComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardsModule, ButtonsModule, InputsModule } from 'angular-bootstrap-md';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ProfileComponent } from './containers/profile.component';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { MainProfileComponent } from './components/main-profile/main-profile.component';\nimport { ProfileUserComponent } from './components/profile-user/profile-user.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    CardsModule,\n    ButtonsModule,\n    InputsModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  declarations: [ProfileComponent, MainProfileComponent, ProfileUserComponent],\n  exports: [ProfileComponent]\n})\nexport class ProfileModule { }\n"]}