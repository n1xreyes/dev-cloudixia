{"version":3,"sources":["./src/app/projects/containers/projects.component.ts","./src/app/projects/containers/projects.component.html","./src/app/projects/projects-routing.module.ts","./src/app/projects/projects.module.ts","./src/app/projects/services/projects.service.ts","./src/app/projects/store/projects.actions.ts","./src/app/projects/store/projects.effects.ts","./src/app/projects/store/projects.reducer.ts","./src/app/projects/store/projects.selectors.ts","./src/app/projects/store/projects.state.ts"],"names":[],"mappings":"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","file":"projects-projects-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MDBModalService, MDBModalRef } from 'angular-bootstrap-md';\nimport { Project } from '../models/project.model';\nimport { AppState } from '../../reducers/index';\nimport { Store, select } from '@ngrx/store';\nimport * as fromProjects from './../store/projects.actions';\nimport { Observable } from 'rxjs';\nimport { getProjects, getAllLoaded } from '../store/projects.selectors';\nimport { take, map } from 'rxjs/operators';\nimport { ConfirmModalComponent } from '../../shared/components/confirm-modal/confirm-modal.component';\nimport { ProjectModalComponent } from '../../shared/components/project-modal/project-modal.component';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  projects$: Observable<Project[] | null>;\n  isLoading$: Observable<boolean>;\n  modalRef: MDBModalRef;\n\n  modalConfig = {\n    class: 'modal-dialog-centered'\n  };\n\n  constructor(private store: Store<AppState>, private modalService: MDBModalService, private afAuth: AngularFireAuth) { }\n\n  ngOnInit() {\n    this.isLoading$ = this.store.select(getAllLoaded);\n    this.projects$ = this.store.pipe(\n      select(getProjects),\n      map( (projects: Project[]) => {\n        if (this.user && !projects) {\n          this.store.dispatch(new fromProjects.ProjectsQuery());\n        }\n        return projects;\n      })\n    );\n  }\n\n  get user() {\n    return this.afAuth.auth.currentUser;\n  }\n\n  openAddProjectModal() {\n    this.modalRef = this.modalService.show(ProjectModalComponent, this.modalConfig);\n\n    this.modalRef.content.heading = 'Add new project';\n\n    this.modalRef.content.projectData.pipe(take(1)).subscribe( (projectData: Project) => {\n      this.store.dispatch(new fromProjects.ProjectAdded({ project: projectData }));\n    });\n  }\n\n  openEditProjectModal(project: Project) {\n    this.modalRef = this.modalService.show(ProjectModalComponent, this.modalConfig);\n\n    this.modalRef.content.heading = 'Edit project';\n    const projectCopy = {...project };\n    this.modalRef.content.project = projectCopy;\n\n    this.modalRef.content.projectData.pipe(take(1)).subscribe( (projectData: Project) => {\n      this.store.dispatch(new fromProjects.ProjectEdited({ project: projectData }));\n    });\n  }\n\n  openConfirmModal(project: Project) {\n    this.modalRef = this.modalService.show(ConfirmModalComponent, this.modalConfig);\n\n    this.modalRef.content.confirmation.pipe(take(1)).subscribe( (confirmation: boolean) => {\n      if (confirmation) {\n        this.store.dispatch(new fromProjects.ProjectDeleted({ project }));\n      }\n    });\n  }\n\n  onProjectDelete(project: Project) {\n    this.openConfirmModal(project);\n  }\n\n  onProjectEdit(project: Project) {\n    this.openEditProjectModal(project);\n  }\n\n}\n","<div class=\"white px-4 section-header\">\n  <h3>Projects list</h3>\n  <p class=\"grey-text pt-3\">Manage your services</p>\n</div>\n\n<div class=\"container-fluid pb-5\">\n  <div class=\"py-5\">\n      <button mdbBtn color=\"primary\" class=\"ml-3\" (click)=\"openAddProjectModal()\">Add new project</button>\n      <app-projects-list [projects]=\"projects$ | async\" (projectDeleted)=\"onProjectDelete($event)\" (projectEdited)=\"onProjectEdit($event)\"></app-projects-list>\n\n    <div *ngIf=\"isLoading$ | async\" class=\"d-flex justify-content-center align-items-center\" style=\"margin-top: 200px\">\n      <div class=\"spinner-grow text-primary\" role=\"status\" style=\"width: 4rem; height: 4rem;\">\n        <span class=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectsComponent } from './containers/projects.component';\n\nconst routes: Routes = [\n  { path: '', component: ProjectsComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class ProjectsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProjectsComponent } from './containers/projects.component';\nimport { StoreModule } from '@ngrx/store';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonsModule, InputsModule, CardsModule, WavesModule, IconsModule, ModalModule } from 'angular-bootstrap-md';\n\nimport * as fromProjects from './store/projects.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ProjectsEffects } from './store/projects.effects';\nimport { FormsModule } from '@angular/forms';\nimport { ProjectsRoutingModule } from './projects-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ModalModule,\n    SharedModule,\n    ProjectsRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ButtonsModule,\n    InputsModule,\n    WavesModule,\n    IconsModule,\n    CardsModule,\n    StoreModule.forFeature('projects', fromProjects.projectsReducer),\n    EffectsModule.forFeature([ProjectsEffects])\n  ],\n  declarations: [ProjectsComponent],\n  exports: [ProjectsComponent],\n})\nexport class ProjectsModule { }\n","import { Injectable } from '@angular/core';\nimport { Project } from '../models/project.model';\nimport { environment } from '../../../environments/environment';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { of } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  url = environment.firebase.databaseURL;\n\n  constructor(private db: AngularFireDatabase, private afAuth: AngularFireAuth) { }\n\n  get userId() {\n    if (this.afAuth.auth.currentUser) {\n      return this.afAuth.auth.currentUser.uid;\n    }\n  }\n\n  add(project: Project, userId: string) {\n    const projects = this.db.list(`projects/${userId}`);\n    return projects.push(project);\n  }\n\n  addProjects(projects: Project[]) {\n    const userId = this.userId;\n    projects.forEach( (project: Project) => {\n      this.db.list(`projects/${userId}`).push(project);\n    });\n  }\n\n  get(userId: string) {\n    return this.db.list(`projects/${userId}`).snapshotChanges();\n  }\n\n  update(project: Project, userId: string) {\n    return of(this.db.object(`projects/${userId}/` + project.key)\n      .update({\n        title: project.title,\n        description: project.description,\n        photoUrl: project.photoUrl\n      }));\n  }\n\n  delete(project: Project, userId: string) {\n    return this.db.object(`projects/${userId}/` + project.key).remove();\n  }\n\n  getAllProjects() {\n    return this.db.list('projects').snapshotChanges();\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Project } from '../models/project.model';\n\nexport enum ProjectsActionTypes {\n  PROJECTS_QUERY = '[Projects] Projects query',\n  PROJECTS_QUERY_ALL = '[Projects] Projects query all',\n  PROJECTS_LOADED = '[Projects] Projects loaded',\n\n  PROJECT_ADDED = '[Projects] Project added',\n\n  PROJECT_EDITED = '[Projects] Project edited',\n  PROJECT_DELETED = '[Projects] Project deleted',\n\n  PROJECTS_ERROR = '[Projects] Projects error'\n}\n\nexport class ProjectsQuery implements Action {\n  readonly type = ProjectsActionTypes.PROJECTS_QUERY;\n}\n\nexport class ProjectsQueryAll implements Action {\n  readonly type = ProjectsActionTypes.PROJECTS_QUERY_ALL;\n}\n\nexport class ProjectsLoaded implements Action {\n  readonly type = ProjectsActionTypes.PROJECTS_LOADED;\n\n  constructor(public payload: { projects: Project[] }) {}\n}\n\nexport class ProjectAdded implements Action {\n  readonly type = ProjectsActionTypes.PROJECT_ADDED;\n\n  constructor(public payload: { project: Project}) {}\n}\n\nexport class ProjectEdited implements Action {\n  readonly type = ProjectsActionTypes.PROJECT_EDITED;\n\n  constructor(public payload: { project: Project }) {}\n}\n\nexport class ProjectDeleted implements Action {\n  readonly type = ProjectsActionTypes.PROJECT_DELETED;\n\n  constructor(public payload: { project: Project }) {}\n}\n\nexport class ProjectsError implements Action {\n  readonly type = ProjectsActionTypes.PROJECTS_ERROR;\n\n  constructor(public payload: { error: any }) {}\n}\n\nexport type ProjectsActions =\n  | ProjectsQuery\n  | ProjectsQueryAll\n  | ProjectsLoaded\n  | ProjectAdded\n  | ProjectEdited\n  | ProjectDeleted\n  | ProjectsError;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { ProjectsActionTypes } from './projects.actions';\nimport { Store, select } from '@ngrx/store';\nimport { map, switchMap, catchError, withLatestFrom } from 'rxjs/operators';\nimport { Project } from '../models/project.model';\nimport { of } from 'rxjs';\nimport { ProjectsService } from '../services/projects.service';\n\nimport * as fromProjects from './../store/projects.actions';\nimport { AppState } from '../../reducers/index';\nimport { getUser } from '../../auth/store/auth.selectors';\n\n@Injectable()\nexport class ProjectsEffects {\n\n  constructor(\n    private actions$: Actions,\n    private projectsService: ProjectsService,\n    private store: Store<AppState>) {}\n\n  @Effect()\n  query$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECTS_QUERY),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([, user]: any) => {\n      return this.projectsService.get(user.uid)\n      .pipe(\n        map((data: any) => {\n          const projectsData: Project[] = data.map((res: any) => {\n            const key = res.payload.key;\n            const project: Project = res.payload.val();\n            return {\n              key: key || null,\n              title: project.title || null,\n              description: project.description || null,\n              photoUrl: project.photoUrl || null\n            };\n          });\n          return (new fromProjects.ProjectsLoaded({ projects: projectsData }));\n        }),\n        catchError(error => of(new fromProjects.ProjectsError({ error })))\n      );\n    }),\n  );\n\n  @Effect()\n  queryAll$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECTS_QUERY_ALL),\n    switchMap(([]: any) => {\n      return this.projectsService.getAllProjects()\n      .pipe(\n        map((data: any) => {\n          const projectsData: Project[] = [];\n          data.map((res: any) => {\n            const userKey = res.payload.key;\n            const userProjects = res.payload.val();\n            for (var prop in userProjects) {\n              if (Object.prototype.hasOwnProperty.call(userProjects, prop)) {\n                  projectsData.push({\n                    key: prop || userKey || null,\n                    title: userProjects[prop].title || null,\n                    description: userProjects[prop].description || null,\n                    photoUrl: userProjects[prop].photoUrl || null\n                  })\n              }\n            }\n          });\n          return (new fromProjects.ProjectsLoaded({ projects: projectsData }));\n        }),\n        catchError(error => of(new fromProjects.ProjectsError({ error })))\n      );\n    }),\n  );\n\n  @Effect({ dispatch: false })\n  added$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECT_ADDED),\n    map((action: fromProjects.ProjectDeleted) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.projectsService.add(payload.project, user.uid))\n  );\n\n  @Effect({ dispatch: false })\n  delete$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECT_DELETED),\n    map((action: fromProjects.ProjectDeleted) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.projectsService.delete(payload.project, user.uid))\n  );\n\n  @Effect({ dispatch: false })\n  edit$ = this.actions$.pipe(\n    ofType(ProjectsActionTypes.PROJECT_EDITED),\n    map((action: fromProjects.ProjectEdited) => action.payload),\n    withLatestFrom(this.store.pipe(select(getUser))),\n    switchMap(([payload, user]: any) => this.projectsService.update(payload.project, user.uid)\n    )\n  );\n\n}\n","import { ProjectsActions, ProjectsActionTypes } from './projects.actions';\nimport { projectsInitialState, ProjectsState } from './projects.state';\n\n\nexport function projectsReducer(state = projectsInitialState, action: ProjectsActions): ProjectsState {\n  switch (action.type) {\n\n    case ProjectsActionTypes.PROJECTS_QUERY_ALL: {\n      return Object.assign({}, state, {\n        loading: true,\n      });\n    }\n\n    case ProjectsActionTypes.PROJECTS_QUERY: {\n      return Object.assign({}, state, {\n        loading: true,\n      });\n    }\n\n    case ProjectsActionTypes.PROJECTS_LOADED: {\n      return Object.assign({}, state, {\n        projects: action.payload.projects,\n        loading: false,\n      });\n    }\n\n    case ProjectsActionTypes.PROJECTS_ERROR: {\n      return Object.assign({}, state, {\n        loading: false,\n        error: action.payload.error\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\n// import { AppState } from '../../reducers/index';\nimport { ProjectsState } from './projects.state';\n\nexport const getProjectsState = createFeatureSelector<ProjectsState>('projects');\n\nexport const getProjects = createSelector(\n  getProjectsState,\n  projects => projects.projects\n);\n\nexport const getAllLoaded = createSelector(\n  getProjectsState,\n  projects => projects.loading\n);\n\nexport const getError = createSelector(\n  getProjectsState,\n  projects => projects.error\n);\n","import { Project } from '../models/project.model';\n\nexport interface ProjectsState {\n  projects: Project[] | null;\n  loading: boolean;\n  error: any;\n}\n\nexport const projectsInitialState: ProjectsState = {\n  projects: null,\n  loading: false,\n  error: null\n};\n"],"sourceRoot":"webpack:///"}